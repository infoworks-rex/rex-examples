node {
  name: "clean_image"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "is_training"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "block1/conv2d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1/conv2d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "block1/conv2d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1/conv2d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.099750936
      }
    }
  }
}
node {
  name: "block1/conv2d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1/conv2d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.099750936
      }
    }
  }
}
node {
  name: "block1/conv2d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block1/conv2d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1/conv2d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block1/conv2d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block1/conv2d/kernel/Initializer/random_uniform/max"
  input: "block1/conv2d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1/conv2d/kernel"
      }
    }
  }
}
node {
  name: "block1/conv2d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block1/conv2d/kernel/Initializer/random_uniform/RandomUniform"
  input: "block1/conv2d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1/conv2d/kernel"
      }
    }
  }
}
node {
  name: "block1/conv2d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block1/conv2d/kernel/Initializer/random_uniform/mul"
  input: "block1/conv2d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1/conv2d/kernel"
      }
    }
  }
}
node {
  name: "block1/conv2d/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1/conv2d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block1/conv2d/kernel/Assign"
  op: "Assign"
  input: "block1/conv2d/kernel"
  input: "block1/conv2d/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1/conv2d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block1/conv2d/kernel/read"
  op: "Identity"
  input: "block1/conv2d/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1/conv2d/kernel"
      }
    }
  }
}
node {
  name: "block1/conv2d/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1/conv2d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block1/conv2d/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1/conv2d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block1/conv2d/bias/Assign"
  op: "Assign"
  input: "block1/conv2d/bias"
  input: "block1/conv2d/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1/conv2d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block1/conv2d/bias/read"
  op: "Identity"
  input: "block1/conv2d/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1/conv2d/bias"
      }
    }
  }
}
node {
  name: "block1/conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block1/conv2d/Conv2D"
  op: "Conv2D"
  input: "Placeholder"
  input: "block1/conv2d/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block1/conv2d/BiasAdd"
  op: "BiasAdd"
  input: "block1/conv2d/Conv2D"
  input: "block1/conv2d/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "block1/conv2d/Relu"
  op: "Relu"
  input: "block1/conv2d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block2/conv2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "block2/conv2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.072168782
      }
    }
  }
}
node {
  name: "block2/conv2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.072168782
      }
    }
  }
}
node {
  name: "block2/conv2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block2/conv2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block2/conv2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block2/conv2/kernel/Initializer/random_uniform/max"
  input: "block2/conv2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/conv2/kernel"
      }
    }
  }
}
node {
  name: "block2/conv2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block2/conv2/kernel/Initializer/random_uniform/RandomUniform"
  input: "block2/conv2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/conv2/kernel"
      }
    }
  }
}
node {
  name: "block2/conv2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block2/conv2/kernel/Initializer/random_uniform/mul"
  input: "block2/conv2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/conv2/kernel"
      }
    }
  }
}
node {
  name: "block2/conv2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/conv2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block2/conv2/kernel/Assign"
  op: "Assign"
  input: "block2/conv2/kernel"
  input: "block2/conv2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block2/conv2/kernel/read"
  op: "Identity"
  input: "block2/conv2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/conv2/kernel"
      }
    }
  }
}
node {
  name: "block2/conv2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block2/conv2/Conv2D"
  op: "Conv2D"
  input: "block1/conv2d/Relu"
  input: "block2/conv2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block2/batch_normalization/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block2/batch_normalization/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block2/batch_normalization/gamma/Assign"
  op: "Assign"
  input: "block2/batch_normalization/gamma"
  input: "block2/batch_normalization/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block2/batch_normalization/gamma/read"
  op: "Identity"
  input: "block2/batch_normalization/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block2/batch_normalization/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block2/batch_normalization/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block2/batch_normalization/beta/Assign"
  op: "Assign"
  input: "block2/batch_normalization/beta"
  input: "block2/batch_normalization/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block2/batch_normalization/beta/read"
  op: "Identity"
  input: "block2/batch_normalization/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block2/batch_normalization/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block2/batch_normalization/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block2/batch_normalization/moving_mean/Assign"
  op: "Assign"
  input: "block2/batch_normalization/moving_mean"
  input: "block2/batch_normalization/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block2/batch_normalization/moving_mean/read"
  op: "Identity"
  input: "block2/batch_normalization/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block2/batch_normalization/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block2/batch_normalization/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block2/batch_normalization/moving_variance/Assign"
  op: "Assign"
  input: "block2/batch_normalization/moving_variance"
  input: "block2/batch_normalization/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block2/batch_normalization/moving_variance/read"
  op: "Identity"
  input: "block2/batch_normalization/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block2/batch_normalization/cond/Switch"
  op: "Switch"
  input: "is_training"
  input: "is_training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block2/batch_normalization/cond/switch_t"
  op: "Identity"
  input: "block2/batch_normalization/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block2/batch_normalization/cond/switch_f"
  op: "Identity"
  input: "block2/batch_normalization/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block2/batch_normalization/cond/pred_id"
  op: "Identity"
  input: "is_training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block2/batch_normalization/cond/Const"
  op: "Const"
  input: "^block2/batch_normalization/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block2/batch_normalization/cond/Const_1"
  op: "Const"
  input: "^block2/batch_normalization/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block2/batch_normalization/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "block2/conv2/Conv2D"
  input: "block2/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/conv2/Conv2D"
      }
    }
  }
}
node {
  name: "block2/batch_normalization/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "block2/batch_normalization/gamma/read"
  input: "block2/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block2/batch_normalization/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "block2/batch_normalization/beta/read"
  input: "block2/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block2/batch_normalization/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "block2/batch_normalization/cond/FusedBatchNorm/Switch:1"
  input: "block2/batch_normalization/cond/FusedBatchNorm/Switch_1:1"
  input: "block2/batch_normalization/cond/FusedBatchNorm/Switch_2:1"
  input: "block2/batch_normalization/cond/Const"
  input: "block2/batch_normalization/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block2/batch_normalization/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "block2/conv2/Conv2D"
  input: "block2/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/conv2/Conv2D"
      }
    }
  }
}
node {
  name: "block2/batch_normalization/cond/FusedBatchNorm_1/Switch_1"
  op: "Switch"
  input: "block2/batch_normalization/gamma/read"
  input: "block2/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block2/batch_normalization/cond/FusedBatchNorm_1/Switch_2"
  op: "Switch"
  input: "block2/batch_normalization/beta/read"
  input: "block2/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block2/batch_normalization/cond/FusedBatchNorm_1/Switch_3"
  op: "Switch"
  input: "block2/batch_normalization/moving_mean/read"
  input: "block2/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block2/batch_normalization/cond/FusedBatchNorm_1/Switch_4"
  op: "Switch"
  input: "block2/batch_normalization/moving_variance/read"
  input: "block2/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block2/batch_normalization/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "block2/batch_normalization/cond/FusedBatchNorm_1/Switch"
  input: "block2/batch_normalization/cond/FusedBatchNorm_1/Switch_1"
  input: "block2/batch_normalization/cond/FusedBatchNorm_1/Switch_2"
  input: "block2/batch_normalization/cond/FusedBatchNorm_1/Switch_3"
  input: "block2/batch_normalization/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block2/batch_normalization/cond/Merge"
  op: "Merge"
  input: "block2/batch_normalization/cond/FusedBatchNorm_1"
  input: "block2/batch_normalization/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block2/batch_normalization/cond/Merge_1"
  op: "Merge"
  input: "block2/batch_normalization/cond/FusedBatchNorm_1:1"
  input: "block2/batch_normalization/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block2/batch_normalization/cond/Merge_2"
  op: "Merge"
  input: "block2/batch_normalization/cond/FusedBatchNorm_1:2"
  input: "block2/batch_normalization/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block2/batch_normalization/ExpandDims/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0099999998
      }
    }
  }
}
node {
  name: "block2/batch_normalization/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "block2/batch_normalization/ExpandDims"
  op: "ExpandDims"
  input: "block2/batch_normalization/ExpandDims/input"
  input: "block2/batch_normalization/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block2/batch_normalization/ExpandDims_1/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block2/batch_normalization/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "block2/batch_normalization/ExpandDims_1"
  op: "ExpandDims"
  input: "block2/batch_normalization/ExpandDims_1/input"
  input: "block2/batch_normalization/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block2/batch_normalization/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "block2/batch_normalization/Reshape"
  op: "Reshape"
  input: "is_training"
  input: "block2/batch_normalization/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block2/batch_normalization/Select"
  op: "Select"
  input: "block2/batch_normalization/Reshape"
  input: "block2/batch_normalization/ExpandDims"
  input: "block2/batch_normalization/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block2/batch_normalization/Squeeze"
  op: "Squeeze"
  input: "block2/batch_normalization/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "block2/batch_normalization/AssignMovingAvg/read"
  op: "Identity"
  input: "block2/batch_normalization/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block2/batch_normalization/AssignMovingAvg/Sub"
  op: "Sub"
  input: "block2/batch_normalization/AssignMovingAvg/read"
  input: "block2/batch_normalization/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block2/batch_normalization/AssignMovingAvg/Mul"
  op: "Mul"
  input: "block2/batch_normalization/AssignMovingAvg/Sub"
  input: "block2/batch_normalization/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block2/batch_normalization/AssignMovingAvg"
  op: "AssignSub"
  input: "block2/batch_normalization/moving_mean"
  input: "block2/batch_normalization/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "block2/batch_normalization/AssignMovingAvg_1/read"
  op: "Identity"
  input: "block2/batch_normalization/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block2/batch_normalization/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "block2/batch_normalization/AssignMovingAvg_1/read"
  input: "block2/batch_normalization/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block2/batch_normalization/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "block2/batch_normalization/AssignMovingAvg_1/Sub"
  input: "block2/batch_normalization/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block2/batch_normalization/AssignMovingAvg_1"
  op: "AssignSub"
  input: "block2/batch_normalization/moving_variance"
  input: "block2/batch_normalization/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "block2/Relu"
  op: "Relu"
  input: "block2/batch_normalization/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3/conv3/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/conv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "block3/conv3/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/conv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.072168782
      }
    }
  }
}
node {
  name: "block3/conv3/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/conv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.072168782
      }
    }
  }
}
node {
  name: "block3/conv3/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block3/conv3/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/conv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block3/conv3/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block3/conv3/kernel/Initializer/random_uniform/max"
  input: "block3/conv3/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/conv3/kernel"
      }
    }
  }
}
node {
  name: "block3/conv3/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block3/conv3/kernel/Initializer/random_uniform/RandomUniform"
  input: "block3/conv3/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/conv3/kernel"
      }
    }
  }
}
node {
  name: "block3/conv3/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block3/conv3/kernel/Initializer/random_uniform/mul"
  input: "block3/conv3/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/conv3/kernel"
      }
    }
  }
}
node {
  name: "block3/conv3/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/conv3/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block3/conv3/kernel/Assign"
  op: "Assign"
  input: "block3/conv3/kernel"
  input: "block3/conv3/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/conv3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block3/conv3/kernel/read"
  op: "Identity"
  input: "block3/conv3/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/conv3/kernel"
      }
    }
  }
}
node {
  name: "block3/conv3/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block3/conv3/Conv2D"
  op: "Conv2D"
  input: "block2/Relu"
  input: "block3/conv3/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block3/batch_normalization/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block3/batch_normalization/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block3/batch_normalization/gamma/Assign"
  op: "Assign"
  input: "block3/batch_normalization/gamma"
  input: "block3/batch_normalization/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block3/batch_normalization/gamma/read"
  op: "Identity"
  input: "block3/batch_normalization/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block3/batch_normalization/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block3/batch_normalization/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block3/batch_normalization/beta/Assign"
  op: "Assign"
  input: "block3/batch_normalization/beta"
  input: "block3/batch_normalization/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block3/batch_normalization/beta/read"
  op: "Identity"
  input: "block3/batch_normalization/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block3/batch_normalization/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block3/batch_normalization/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block3/batch_normalization/moving_mean/Assign"
  op: "Assign"
  input: "block3/batch_normalization/moving_mean"
  input: "block3/batch_normalization/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block3/batch_normalization/moving_mean/read"
  op: "Identity"
  input: "block3/batch_normalization/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block3/batch_normalization/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block3/batch_normalization/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block3/batch_normalization/moving_variance/Assign"
  op: "Assign"
  input: "block3/batch_normalization/moving_variance"
  input: "block3/batch_normalization/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block3/batch_normalization/moving_variance/read"
  op: "Identity"
  input: "block3/batch_normalization/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block3/batch_normalization/cond/Switch"
  op: "Switch"
  input: "is_training"
  input: "is_training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block3/batch_normalization/cond/switch_t"
  op: "Identity"
  input: "block3/batch_normalization/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block3/batch_normalization/cond/switch_f"
  op: "Identity"
  input: "block3/batch_normalization/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block3/batch_normalization/cond/pred_id"
  op: "Identity"
  input: "is_training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block3/batch_normalization/cond/Const"
  op: "Const"
  input: "^block3/batch_normalization/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block3/batch_normalization/cond/Const_1"
  op: "Const"
  input: "^block3/batch_normalization/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block3/batch_normalization/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "block3/conv3/Conv2D"
  input: "block3/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/conv3/Conv2D"
      }
    }
  }
}
node {
  name: "block3/batch_normalization/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "block3/batch_normalization/gamma/read"
  input: "block3/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block3/batch_normalization/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "block3/batch_normalization/beta/read"
  input: "block3/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block3/batch_normalization/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "block3/batch_normalization/cond/FusedBatchNorm/Switch:1"
  input: "block3/batch_normalization/cond/FusedBatchNorm/Switch_1:1"
  input: "block3/batch_normalization/cond/FusedBatchNorm/Switch_2:1"
  input: "block3/batch_normalization/cond/Const"
  input: "block3/batch_normalization/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block3/batch_normalization/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "block3/conv3/Conv2D"
  input: "block3/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/conv3/Conv2D"
      }
    }
  }
}
node {
  name: "block3/batch_normalization/cond/FusedBatchNorm_1/Switch_1"
  op: "Switch"
  input: "block3/batch_normalization/gamma/read"
  input: "block3/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block3/batch_normalization/cond/FusedBatchNorm_1/Switch_2"
  op: "Switch"
  input: "block3/batch_normalization/beta/read"
  input: "block3/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block3/batch_normalization/cond/FusedBatchNorm_1/Switch_3"
  op: "Switch"
  input: "block3/batch_normalization/moving_mean/read"
  input: "block3/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block3/batch_normalization/cond/FusedBatchNorm_1/Switch_4"
  op: "Switch"
  input: "block3/batch_normalization/moving_variance/read"
  input: "block3/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block3/batch_normalization/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "block3/batch_normalization/cond/FusedBatchNorm_1/Switch"
  input: "block3/batch_normalization/cond/FusedBatchNorm_1/Switch_1"
  input: "block3/batch_normalization/cond/FusedBatchNorm_1/Switch_2"
  input: "block3/batch_normalization/cond/FusedBatchNorm_1/Switch_3"
  input: "block3/batch_normalization/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block3/batch_normalization/cond/Merge"
  op: "Merge"
  input: "block3/batch_normalization/cond/FusedBatchNorm_1"
  input: "block3/batch_normalization/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3/batch_normalization/cond/Merge_1"
  op: "Merge"
  input: "block3/batch_normalization/cond/FusedBatchNorm_1:1"
  input: "block3/batch_normalization/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3/batch_normalization/cond/Merge_2"
  op: "Merge"
  input: "block3/batch_normalization/cond/FusedBatchNorm_1:2"
  input: "block3/batch_normalization/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3/batch_normalization/ExpandDims/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0099999998
      }
    }
  }
}
node {
  name: "block3/batch_normalization/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "block3/batch_normalization/ExpandDims"
  op: "ExpandDims"
  input: "block3/batch_normalization/ExpandDims/input"
  input: "block3/batch_normalization/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block3/batch_normalization/ExpandDims_1/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block3/batch_normalization/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "block3/batch_normalization/ExpandDims_1"
  op: "ExpandDims"
  input: "block3/batch_normalization/ExpandDims_1/input"
  input: "block3/batch_normalization/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block3/batch_normalization/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "block3/batch_normalization/Reshape"
  op: "Reshape"
  input: "is_training"
  input: "block3/batch_normalization/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block3/batch_normalization/Select"
  op: "Select"
  input: "block3/batch_normalization/Reshape"
  input: "block3/batch_normalization/ExpandDims"
  input: "block3/batch_normalization/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3/batch_normalization/Squeeze"
  op: "Squeeze"
  input: "block3/batch_normalization/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "block3/batch_normalization/AssignMovingAvg/read"
  op: "Identity"
  input: "block3/batch_normalization/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block3/batch_normalization/AssignMovingAvg/Sub"
  op: "Sub"
  input: "block3/batch_normalization/AssignMovingAvg/read"
  input: "block3/batch_normalization/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block3/batch_normalization/AssignMovingAvg/Mul"
  op: "Mul"
  input: "block3/batch_normalization/AssignMovingAvg/Sub"
  input: "block3/batch_normalization/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block3/batch_normalization/AssignMovingAvg"
  op: "AssignSub"
  input: "block3/batch_normalization/moving_mean"
  input: "block3/batch_normalization/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "block3/batch_normalization/AssignMovingAvg_1/read"
  op: "Identity"
  input: "block3/batch_normalization/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block3/batch_normalization/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "block3/batch_normalization/AssignMovingAvg_1/read"
  input: "block3/batch_normalization/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block3/batch_normalization/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "block3/batch_normalization/AssignMovingAvg_1/Sub"
  input: "block3/batch_normalization/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block3/batch_normalization/AssignMovingAvg_1"
  op: "AssignSub"
  input: "block3/batch_normalization/moving_variance"
  input: "block3/batch_normalization/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "block3/Relu"
  op: "Relu"
  input: "block3/batch_normalization/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4/conv4/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/conv4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "block4/conv4/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/conv4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.072168782
      }
    }
  }
}
node {
  name: "block4/conv4/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/conv4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.072168782
      }
    }
  }
}
node {
  name: "block4/conv4/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block4/conv4/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/conv4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block4/conv4/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block4/conv4/kernel/Initializer/random_uniform/max"
  input: "block4/conv4/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/conv4/kernel"
      }
    }
  }
}
node {
  name: "block4/conv4/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block4/conv4/kernel/Initializer/random_uniform/RandomUniform"
  input: "block4/conv4/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/conv4/kernel"
      }
    }
  }
}
node {
  name: "block4/conv4/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block4/conv4/kernel/Initializer/random_uniform/mul"
  input: "block4/conv4/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/conv4/kernel"
      }
    }
  }
}
node {
  name: "block4/conv4/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/conv4/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block4/conv4/kernel/Assign"
  op: "Assign"
  input: "block4/conv4/kernel"
  input: "block4/conv4/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/conv4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block4/conv4/kernel/read"
  op: "Identity"
  input: "block4/conv4/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/conv4/kernel"
      }
    }
  }
}
node {
  name: "block4/conv4/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block4/conv4/Conv2D"
  op: "Conv2D"
  input: "block3/Relu"
  input: "block4/conv4/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block4/batch_normalization/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block4/batch_normalization/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block4/batch_normalization/gamma/Assign"
  op: "Assign"
  input: "block4/batch_normalization/gamma"
  input: "block4/batch_normalization/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block4/batch_normalization/gamma/read"
  op: "Identity"
  input: "block4/batch_normalization/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block4/batch_normalization/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block4/batch_normalization/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block4/batch_normalization/beta/Assign"
  op: "Assign"
  input: "block4/batch_normalization/beta"
  input: "block4/batch_normalization/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block4/batch_normalization/beta/read"
  op: "Identity"
  input: "block4/batch_normalization/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block4/batch_normalization/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block4/batch_normalization/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block4/batch_normalization/moving_mean/Assign"
  op: "Assign"
  input: "block4/batch_normalization/moving_mean"
  input: "block4/batch_normalization/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block4/batch_normalization/moving_mean/read"
  op: "Identity"
  input: "block4/batch_normalization/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block4/batch_normalization/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block4/batch_normalization/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block4/batch_normalization/moving_variance/Assign"
  op: "Assign"
  input: "block4/batch_normalization/moving_variance"
  input: "block4/batch_normalization/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block4/batch_normalization/moving_variance/read"
  op: "Identity"
  input: "block4/batch_normalization/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block4/batch_normalization/cond/Switch"
  op: "Switch"
  input: "is_training"
  input: "is_training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block4/batch_normalization/cond/switch_t"
  op: "Identity"
  input: "block4/batch_normalization/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block4/batch_normalization/cond/switch_f"
  op: "Identity"
  input: "block4/batch_normalization/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block4/batch_normalization/cond/pred_id"
  op: "Identity"
  input: "is_training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block4/batch_normalization/cond/Const"
  op: "Const"
  input: "^block4/batch_normalization/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block4/batch_normalization/cond/Const_1"
  op: "Const"
  input: "^block4/batch_normalization/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block4/batch_normalization/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "block4/conv4/Conv2D"
  input: "block4/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/conv4/Conv2D"
      }
    }
  }
}
node {
  name: "block4/batch_normalization/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "block4/batch_normalization/gamma/read"
  input: "block4/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block4/batch_normalization/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "block4/batch_normalization/beta/read"
  input: "block4/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block4/batch_normalization/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "block4/batch_normalization/cond/FusedBatchNorm/Switch:1"
  input: "block4/batch_normalization/cond/FusedBatchNorm/Switch_1:1"
  input: "block4/batch_normalization/cond/FusedBatchNorm/Switch_2:1"
  input: "block4/batch_normalization/cond/Const"
  input: "block4/batch_normalization/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block4/batch_normalization/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "block4/conv4/Conv2D"
  input: "block4/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/conv4/Conv2D"
      }
    }
  }
}
node {
  name: "block4/batch_normalization/cond/FusedBatchNorm_1/Switch_1"
  op: "Switch"
  input: "block4/batch_normalization/gamma/read"
  input: "block4/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block4/batch_normalization/cond/FusedBatchNorm_1/Switch_2"
  op: "Switch"
  input: "block4/batch_normalization/beta/read"
  input: "block4/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block4/batch_normalization/cond/FusedBatchNorm_1/Switch_3"
  op: "Switch"
  input: "block4/batch_normalization/moving_mean/read"
  input: "block4/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block4/batch_normalization/cond/FusedBatchNorm_1/Switch_4"
  op: "Switch"
  input: "block4/batch_normalization/moving_variance/read"
  input: "block4/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block4/batch_normalization/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "block4/batch_normalization/cond/FusedBatchNorm_1/Switch"
  input: "block4/batch_normalization/cond/FusedBatchNorm_1/Switch_1"
  input: "block4/batch_normalization/cond/FusedBatchNorm_1/Switch_2"
  input: "block4/batch_normalization/cond/FusedBatchNorm_1/Switch_3"
  input: "block4/batch_normalization/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block4/batch_normalization/cond/Merge"
  op: "Merge"
  input: "block4/batch_normalization/cond/FusedBatchNorm_1"
  input: "block4/batch_normalization/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4/batch_normalization/cond/Merge_1"
  op: "Merge"
  input: "block4/batch_normalization/cond/FusedBatchNorm_1:1"
  input: "block4/batch_normalization/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4/batch_normalization/cond/Merge_2"
  op: "Merge"
  input: "block4/batch_normalization/cond/FusedBatchNorm_1:2"
  input: "block4/batch_normalization/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4/batch_normalization/ExpandDims/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0099999998
      }
    }
  }
}
node {
  name: "block4/batch_normalization/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "block4/batch_normalization/ExpandDims"
  op: "ExpandDims"
  input: "block4/batch_normalization/ExpandDims/input"
  input: "block4/batch_normalization/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block4/batch_normalization/ExpandDims_1/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block4/batch_normalization/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "block4/batch_normalization/ExpandDims_1"
  op: "ExpandDims"
  input: "block4/batch_normalization/ExpandDims_1/input"
  input: "block4/batch_normalization/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block4/batch_normalization/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "block4/batch_normalization/Reshape"
  op: "Reshape"
  input: "is_training"
  input: "block4/batch_normalization/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block4/batch_normalization/Select"
  op: "Select"
  input: "block4/batch_normalization/Reshape"
  input: "block4/batch_normalization/ExpandDims"
  input: "block4/batch_normalization/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4/batch_normalization/Squeeze"
  op: "Squeeze"
  input: "block4/batch_normalization/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "block4/batch_normalization/AssignMovingAvg/read"
  op: "Identity"
  input: "block4/batch_normalization/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block4/batch_normalization/AssignMovingAvg/Sub"
  op: "Sub"
  input: "block4/batch_normalization/AssignMovingAvg/read"
  input: "block4/batch_normalization/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block4/batch_normalization/AssignMovingAvg/Mul"
  op: "Mul"
  input: "block4/batch_normalization/AssignMovingAvg/Sub"
  input: "block4/batch_normalization/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block4/batch_normalization/AssignMovingAvg"
  op: "AssignSub"
  input: "block4/batch_normalization/moving_mean"
  input: "block4/batch_normalization/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "block4/batch_normalization/AssignMovingAvg_1/read"
  op: "Identity"
  input: "block4/batch_normalization/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block4/batch_normalization/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "block4/batch_normalization/AssignMovingAvg_1/read"
  input: "block4/batch_normalization/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block4/batch_normalization/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "block4/batch_normalization/AssignMovingAvg_1/Sub"
  input: "block4/batch_normalization/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block4/batch_normalization/AssignMovingAvg_1"
  op: "AssignSub"
  input: "block4/batch_normalization/moving_variance"
  input: "block4/batch_normalization/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "block4/Relu"
  op: "Relu"
  input: "block4/batch_normalization/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5/conv5/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/conv5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "block5/conv5/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/conv5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.072168782
      }
    }
  }
}
node {
  name: "block5/conv5/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/conv5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.072168782
      }
    }
  }
}
node {
  name: "block5/conv5/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block5/conv5/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/conv5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block5/conv5/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block5/conv5/kernel/Initializer/random_uniform/max"
  input: "block5/conv5/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/conv5/kernel"
      }
    }
  }
}
node {
  name: "block5/conv5/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block5/conv5/kernel/Initializer/random_uniform/RandomUniform"
  input: "block5/conv5/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/conv5/kernel"
      }
    }
  }
}
node {
  name: "block5/conv5/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block5/conv5/kernel/Initializer/random_uniform/mul"
  input: "block5/conv5/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/conv5/kernel"
      }
    }
  }
}
node {
  name: "block5/conv5/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/conv5/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block5/conv5/kernel/Assign"
  op: "Assign"
  input: "block5/conv5/kernel"
  input: "block5/conv5/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/conv5/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block5/conv5/kernel/read"
  op: "Identity"
  input: "block5/conv5/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/conv5/kernel"
      }
    }
  }
}
node {
  name: "block5/conv5/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block5/conv5/Conv2D"
  op: "Conv2D"
  input: "block4/Relu"
  input: "block5/conv5/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block5/batch_normalization/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block5/batch_normalization/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block5/batch_normalization/gamma/Assign"
  op: "Assign"
  input: "block5/batch_normalization/gamma"
  input: "block5/batch_normalization/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block5/batch_normalization/gamma/read"
  op: "Identity"
  input: "block5/batch_normalization/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block5/batch_normalization/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block5/batch_normalization/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block5/batch_normalization/beta/Assign"
  op: "Assign"
  input: "block5/batch_normalization/beta"
  input: "block5/batch_normalization/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block5/batch_normalization/beta/read"
  op: "Identity"
  input: "block5/batch_normalization/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block5/batch_normalization/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block5/batch_normalization/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block5/batch_normalization/moving_mean/Assign"
  op: "Assign"
  input: "block5/batch_normalization/moving_mean"
  input: "block5/batch_normalization/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block5/batch_normalization/moving_mean/read"
  op: "Identity"
  input: "block5/batch_normalization/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block5/batch_normalization/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block5/batch_normalization/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block5/batch_normalization/moving_variance/Assign"
  op: "Assign"
  input: "block5/batch_normalization/moving_variance"
  input: "block5/batch_normalization/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block5/batch_normalization/moving_variance/read"
  op: "Identity"
  input: "block5/batch_normalization/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block5/batch_normalization/cond/Switch"
  op: "Switch"
  input: "is_training"
  input: "is_training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block5/batch_normalization/cond/switch_t"
  op: "Identity"
  input: "block5/batch_normalization/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block5/batch_normalization/cond/switch_f"
  op: "Identity"
  input: "block5/batch_normalization/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block5/batch_normalization/cond/pred_id"
  op: "Identity"
  input: "is_training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block5/batch_normalization/cond/Const"
  op: "Const"
  input: "^block5/batch_normalization/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block5/batch_normalization/cond/Const_1"
  op: "Const"
  input: "^block5/batch_normalization/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block5/batch_normalization/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "block5/conv5/Conv2D"
  input: "block5/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/conv5/Conv2D"
      }
    }
  }
}
node {
  name: "block5/batch_normalization/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "block5/batch_normalization/gamma/read"
  input: "block5/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block5/batch_normalization/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "block5/batch_normalization/beta/read"
  input: "block5/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block5/batch_normalization/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "block5/batch_normalization/cond/FusedBatchNorm/Switch:1"
  input: "block5/batch_normalization/cond/FusedBatchNorm/Switch_1:1"
  input: "block5/batch_normalization/cond/FusedBatchNorm/Switch_2:1"
  input: "block5/batch_normalization/cond/Const"
  input: "block5/batch_normalization/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block5/batch_normalization/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "block5/conv5/Conv2D"
  input: "block5/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/conv5/Conv2D"
      }
    }
  }
}
node {
  name: "block5/batch_normalization/cond/FusedBatchNorm_1/Switch_1"
  op: "Switch"
  input: "block5/batch_normalization/gamma/read"
  input: "block5/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block5/batch_normalization/cond/FusedBatchNorm_1/Switch_2"
  op: "Switch"
  input: "block5/batch_normalization/beta/read"
  input: "block5/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block5/batch_normalization/cond/FusedBatchNorm_1/Switch_3"
  op: "Switch"
  input: "block5/batch_normalization/moving_mean/read"
  input: "block5/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block5/batch_normalization/cond/FusedBatchNorm_1/Switch_4"
  op: "Switch"
  input: "block5/batch_normalization/moving_variance/read"
  input: "block5/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block5/batch_normalization/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "block5/batch_normalization/cond/FusedBatchNorm_1/Switch"
  input: "block5/batch_normalization/cond/FusedBatchNorm_1/Switch_1"
  input: "block5/batch_normalization/cond/FusedBatchNorm_1/Switch_2"
  input: "block5/batch_normalization/cond/FusedBatchNorm_1/Switch_3"
  input: "block5/batch_normalization/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block5/batch_normalization/cond/Merge"
  op: "Merge"
  input: "block5/batch_normalization/cond/FusedBatchNorm_1"
  input: "block5/batch_normalization/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5/batch_normalization/cond/Merge_1"
  op: "Merge"
  input: "block5/batch_normalization/cond/FusedBatchNorm_1:1"
  input: "block5/batch_normalization/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5/batch_normalization/cond/Merge_2"
  op: "Merge"
  input: "block5/batch_normalization/cond/FusedBatchNorm_1:2"
  input: "block5/batch_normalization/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5/batch_normalization/ExpandDims/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0099999998
      }
    }
  }
}
node {
  name: "block5/batch_normalization/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "block5/batch_normalization/ExpandDims"
  op: "ExpandDims"
  input: "block5/batch_normalization/ExpandDims/input"
  input: "block5/batch_normalization/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block5/batch_normalization/ExpandDims_1/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block5/batch_normalization/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "block5/batch_normalization/ExpandDims_1"
  op: "ExpandDims"
  input: "block5/batch_normalization/ExpandDims_1/input"
  input: "block5/batch_normalization/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block5/batch_normalization/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "block5/batch_normalization/Reshape"
  op: "Reshape"
  input: "is_training"
  input: "block5/batch_normalization/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block5/batch_normalization/Select"
  op: "Select"
  input: "block5/batch_normalization/Reshape"
  input: "block5/batch_normalization/ExpandDims"
  input: "block5/batch_normalization/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5/batch_normalization/Squeeze"
  op: "Squeeze"
  input: "block5/batch_normalization/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "block5/batch_normalization/AssignMovingAvg/read"
  op: "Identity"
  input: "block5/batch_normalization/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block5/batch_normalization/AssignMovingAvg/Sub"
  op: "Sub"
  input: "block5/batch_normalization/AssignMovingAvg/read"
  input: "block5/batch_normalization/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block5/batch_normalization/AssignMovingAvg/Mul"
  op: "Mul"
  input: "block5/batch_normalization/AssignMovingAvg/Sub"
  input: "block5/batch_normalization/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block5/batch_normalization/AssignMovingAvg"
  op: "AssignSub"
  input: "block5/batch_normalization/moving_mean"
  input: "block5/batch_normalization/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "block5/batch_normalization/AssignMovingAvg_1/read"
  op: "Identity"
  input: "block5/batch_normalization/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block5/batch_normalization/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "block5/batch_normalization/AssignMovingAvg_1/read"
  input: "block5/batch_normalization/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block5/batch_normalization/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "block5/batch_normalization/AssignMovingAvg_1/Sub"
  input: "block5/batch_normalization/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block5/batch_normalization/AssignMovingAvg_1"
  op: "AssignSub"
  input: "block5/batch_normalization/moving_variance"
  input: "block5/batch_normalization/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "block5/Relu"
  op: "Relu"
  input: "block5/batch_normalization/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block6/conv6/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/conv6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "block6/conv6/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/conv6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.072168782
      }
    }
  }
}
node {
  name: "block6/conv6/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/conv6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.072168782
      }
    }
  }
}
node {
  name: "block6/conv6/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block6/conv6/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/conv6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block6/conv6/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block6/conv6/kernel/Initializer/random_uniform/max"
  input: "block6/conv6/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/conv6/kernel"
      }
    }
  }
}
node {
  name: "block6/conv6/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block6/conv6/kernel/Initializer/random_uniform/RandomUniform"
  input: "block6/conv6/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/conv6/kernel"
      }
    }
  }
}
node {
  name: "block6/conv6/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block6/conv6/kernel/Initializer/random_uniform/mul"
  input: "block6/conv6/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/conv6/kernel"
      }
    }
  }
}
node {
  name: "block6/conv6/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/conv6/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block6/conv6/kernel/Assign"
  op: "Assign"
  input: "block6/conv6/kernel"
  input: "block6/conv6/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/conv6/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block6/conv6/kernel/read"
  op: "Identity"
  input: "block6/conv6/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/conv6/kernel"
      }
    }
  }
}
node {
  name: "block6/conv6/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block6/conv6/Conv2D"
  op: "Conv2D"
  input: "block5/Relu"
  input: "block6/conv6/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block6/batch_normalization/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block6/batch_normalization/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block6/batch_normalization/gamma/Assign"
  op: "Assign"
  input: "block6/batch_normalization/gamma"
  input: "block6/batch_normalization/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block6/batch_normalization/gamma/read"
  op: "Identity"
  input: "block6/batch_normalization/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block6/batch_normalization/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block6/batch_normalization/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block6/batch_normalization/beta/Assign"
  op: "Assign"
  input: "block6/batch_normalization/beta"
  input: "block6/batch_normalization/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block6/batch_normalization/beta/read"
  op: "Identity"
  input: "block6/batch_normalization/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block6/batch_normalization/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block6/batch_normalization/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block6/batch_normalization/moving_mean/Assign"
  op: "Assign"
  input: "block6/batch_normalization/moving_mean"
  input: "block6/batch_normalization/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block6/batch_normalization/moving_mean/read"
  op: "Identity"
  input: "block6/batch_normalization/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block6/batch_normalization/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block6/batch_normalization/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block6/batch_normalization/moving_variance/Assign"
  op: "Assign"
  input: "block6/batch_normalization/moving_variance"
  input: "block6/batch_normalization/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block6/batch_normalization/moving_variance/read"
  op: "Identity"
  input: "block6/batch_normalization/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block6/batch_normalization/cond/Switch"
  op: "Switch"
  input: "is_training"
  input: "is_training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block6/batch_normalization/cond/switch_t"
  op: "Identity"
  input: "block6/batch_normalization/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block6/batch_normalization/cond/switch_f"
  op: "Identity"
  input: "block6/batch_normalization/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block6/batch_normalization/cond/pred_id"
  op: "Identity"
  input: "is_training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block6/batch_normalization/cond/Const"
  op: "Const"
  input: "^block6/batch_normalization/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block6/batch_normalization/cond/Const_1"
  op: "Const"
  input: "^block6/batch_normalization/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block6/batch_normalization/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "block6/conv6/Conv2D"
  input: "block6/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/conv6/Conv2D"
      }
    }
  }
}
node {
  name: "block6/batch_normalization/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "block6/batch_normalization/gamma/read"
  input: "block6/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block6/batch_normalization/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "block6/batch_normalization/beta/read"
  input: "block6/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block6/batch_normalization/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "block6/batch_normalization/cond/FusedBatchNorm/Switch:1"
  input: "block6/batch_normalization/cond/FusedBatchNorm/Switch_1:1"
  input: "block6/batch_normalization/cond/FusedBatchNorm/Switch_2:1"
  input: "block6/batch_normalization/cond/Const"
  input: "block6/batch_normalization/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block6/batch_normalization/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "block6/conv6/Conv2D"
  input: "block6/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/conv6/Conv2D"
      }
    }
  }
}
node {
  name: "block6/batch_normalization/cond/FusedBatchNorm_1/Switch_1"
  op: "Switch"
  input: "block6/batch_normalization/gamma/read"
  input: "block6/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block6/batch_normalization/cond/FusedBatchNorm_1/Switch_2"
  op: "Switch"
  input: "block6/batch_normalization/beta/read"
  input: "block6/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block6/batch_normalization/cond/FusedBatchNorm_1/Switch_3"
  op: "Switch"
  input: "block6/batch_normalization/moving_mean/read"
  input: "block6/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block6/batch_normalization/cond/FusedBatchNorm_1/Switch_4"
  op: "Switch"
  input: "block6/batch_normalization/moving_variance/read"
  input: "block6/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block6/batch_normalization/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "block6/batch_normalization/cond/FusedBatchNorm_1/Switch"
  input: "block6/batch_normalization/cond/FusedBatchNorm_1/Switch_1"
  input: "block6/batch_normalization/cond/FusedBatchNorm_1/Switch_2"
  input: "block6/batch_normalization/cond/FusedBatchNorm_1/Switch_3"
  input: "block6/batch_normalization/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block6/batch_normalization/cond/Merge"
  op: "Merge"
  input: "block6/batch_normalization/cond/FusedBatchNorm_1"
  input: "block6/batch_normalization/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block6/batch_normalization/cond/Merge_1"
  op: "Merge"
  input: "block6/batch_normalization/cond/FusedBatchNorm_1:1"
  input: "block6/batch_normalization/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block6/batch_normalization/cond/Merge_2"
  op: "Merge"
  input: "block6/batch_normalization/cond/FusedBatchNorm_1:2"
  input: "block6/batch_normalization/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block6/batch_normalization/ExpandDims/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0099999998
      }
    }
  }
}
node {
  name: "block6/batch_normalization/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "block6/batch_normalization/ExpandDims"
  op: "ExpandDims"
  input: "block6/batch_normalization/ExpandDims/input"
  input: "block6/batch_normalization/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block6/batch_normalization/ExpandDims_1/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block6/batch_normalization/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "block6/batch_normalization/ExpandDims_1"
  op: "ExpandDims"
  input: "block6/batch_normalization/ExpandDims_1/input"
  input: "block6/batch_normalization/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block6/batch_normalization/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "block6/batch_normalization/Reshape"
  op: "Reshape"
  input: "is_training"
  input: "block6/batch_normalization/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block6/batch_normalization/Select"
  op: "Select"
  input: "block6/batch_normalization/Reshape"
  input: "block6/batch_normalization/ExpandDims"
  input: "block6/batch_normalization/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block6/batch_normalization/Squeeze"
  op: "Squeeze"
  input: "block6/batch_normalization/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "block6/batch_normalization/AssignMovingAvg/read"
  op: "Identity"
  input: "block6/batch_normalization/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block6/batch_normalization/AssignMovingAvg/Sub"
  op: "Sub"
  input: "block6/batch_normalization/AssignMovingAvg/read"
  input: "block6/batch_normalization/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block6/batch_normalization/AssignMovingAvg/Mul"
  op: "Mul"
  input: "block6/batch_normalization/AssignMovingAvg/Sub"
  input: "block6/batch_normalization/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block6/batch_normalization/AssignMovingAvg"
  op: "AssignSub"
  input: "block6/batch_normalization/moving_mean"
  input: "block6/batch_normalization/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "block6/batch_normalization/AssignMovingAvg_1/read"
  op: "Identity"
  input: "block6/batch_normalization/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block6/batch_normalization/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "block6/batch_normalization/AssignMovingAvg_1/read"
  input: "block6/batch_normalization/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block6/batch_normalization/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "block6/batch_normalization/AssignMovingAvg_1/Sub"
  input: "block6/batch_normalization/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block6/batch_normalization/AssignMovingAvg_1"
  op: "AssignSub"
  input: "block6/batch_normalization/moving_variance"
  input: "block6/batch_normalization/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "block6/Relu"
  op: "Relu"
  input: "block6/batch_normalization/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block7/conv7/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/conv7/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "block7/conv7/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/conv7/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.072168782
      }
    }
  }
}
node {
  name: "block7/conv7/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/conv7/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.072168782
      }
    }
  }
}
node {
  name: "block7/conv7/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block7/conv7/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/conv7/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block7/conv7/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block7/conv7/kernel/Initializer/random_uniform/max"
  input: "block7/conv7/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/conv7/kernel"
      }
    }
  }
}
node {
  name: "block7/conv7/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block7/conv7/kernel/Initializer/random_uniform/RandomUniform"
  input: "block7/conv7/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/conv7/kernel"
      }
    }
  }
}
node {
  name: "block7/conv7/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block7/conv7/kernel/Initializer/random_uniform/mul"
  input: "block7/conv7/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/conv7/kernel"
      }
    }
  }
}
node {
  name: "block7/conv7/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/conv7/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block7/conv7/kernel/Assign"
  op: "Assign"
  input: "block7/conv7/kernel"
  input: "block7/conv7/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/conv7/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block7/conv7/kernel/read"
  op: "Identity"
  input: "block7/conv7/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/conv7/kernel"
      }
    }
  }
}
node {
  name: "block7/conv7/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block7/conv7/Conv2D"
  op: "Conv2D"
  input: "block6/Relu"
  input: "block7/conv7/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block7/batch_normalization/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block7/batch_normalization/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block7/batch_normalization/gamma/Assign"
  op: "Assign"
  input: "block7/batch_normalization/gamma"
  input: "block7/batch_normalization/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block7/batch_normalization/gamma/read"
  op: "Identity"
  input: "block7/batch_normalization/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block7/batch_normalization/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block7/batch_normalization/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block7/batch_normalization/beta/Assign"
  op: "Assign"
  input: "block7/batch_normalization/beta"
  input: "block7/batch_normalization/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block7/batch_normalization/beta/read"
  op: "Identity"
  input: "block7/batch_normalization/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block7/batch_normalization/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block7/batch_normalization/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block7/batch_normalization/moving_mean/Assign"
  op: "Assign"
  input: "block7/batch_normalization/moving_mean"
  input: "block7/batch_normalization/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block7/batch_normalization/moving_mean/read"
  op: "Identity"
  input: "block7/batch_normalization/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block7/batch_normalization/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block7/batch_normalization/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block7/batch_normalization/moving_variance/Assign"
  op: "Assign"
  input: "block7/batch_normalization/moving_variance"
  input: "block7/batch_normalization/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block7/batch_normalization/moving_variance/read"
  op: "Identity"
  input: "block7/batch_normalization/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block7/batch_normalization/cond/Switch"
  op: "Switch"
  input: "is_training"
  input: "is_training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block7/batch_normalization/cond/switch_t"
  op: "Identity"
  input: "block7/batch_normalization/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block7/batch_normalization/cond/switch_f"
  op: "Identity"
  input: "block7/batch_normalization/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block7/batch_normalization/cond/pred_id"
  op: "Identity"
  input: "is_training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block7/batch_normalization/cond/Const"
  op: "Const"
  input: "^block7/batch_normalization/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block7/batch_normalization/cond/Const_1"
  op: "Const"
  input: "^block7/batch_normalization/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block7/batch_normalization/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "block7/conv7/Conv2D"
  input: "block7/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/conv7/Conv2D"
      }
    }
  }
}
node {
  name: "block7/batch_normalization/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "block7/batch_normalization/gamma/read"
  input: "block7/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block7/batch_normalization/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "block7/batch_normalization/beta/read"
  input: "block7/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block7/batch_normalization/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "block7/batch_normalization/cond/FusedBatchNorm/Switch:1"
  input: "block7/batch_normalization/cond/FusedBatchNorm/Switch_1:1"
  input: "block7/batch_normalization/cond/FusedBatchNorm/Switch_2:1"
  input: "block7/batch_normalization/cond/Const"
  input: "block7/batch_normalization/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block7/batch_normalization/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "block7/conv7/Conv2D"
  input: "block7/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/conv7/Conv2D"
      }
    }
  }
}
node {
  name: "block7/batch_normalization/cond/FusedBatchNorm_1/Switch_1"
  op: "Switch"
  input: "block7/batch_normalization/gamma/read"
  input: "block7/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block7/batch_normalization/cond/FusedBatchNorm_1/Switch_2"
  op: "Switch"
  input: "block7/batch_normalization/beta/read"
  input: "block7/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block7/batch_normalization/cond/FusedBatchNorm_1/Switch_3"
  op: "Switch"
  input: "block7/batch_normalization/moving_mean/read"
  input: "block7/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block7/batch_normalization/cond/FusedBatchNorm_1/Switch_4"
  op: "Switch"
  input: "block7/batch_normalization/moving_variance/read"
  input: "block7/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block7/batch_normalization/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "block7/batch_normalization/cond/FusedBatchNorm_1/Switch"
  input: "block7/batch_normalization/cond/FusedBatchNorm_1/Switch_1"
  input: "block7/batch_normalization/cond/FusedBatchNorm_1/Switch_2"
  input: "block7/batch_normalization/cond/FusedBatchNorm_1/Switch_3"
  input: "block7/batch_normalization/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block7/batch_normalization/cond/Merge"
  op: "Merge"
  input: "block7/batch_normalization/cond/FusedBatchNorm_1"
  input: "block7/batch_normalization/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block7/batch_normalization/cond/Merge_1"
  op: "Merge"
  input: "block7/batch_normalization/cond/FusedBatchNorm_1:1"
  input: "block7/batch_normalization/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block7/batch_normalization/cond/Merge_2"
  op: "Merge"
  input: "block7/batch_normalization/cond/FusedBatchNorm_1:2"
  input: "block7/batch_normalization/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block7/batch_normalization/ExpandDims/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0099999998
      }
    }
  }
}
node {
  name: "block7/batch_normalization/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "block7/batch_normalization/ExpandDims"
  op: "ExpandDims"
  input: "block7/batch_normalization/ExpandDims/input"
  input: "block7/batch_normalization/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block7/batch_normalization/ExpandDims_1/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block7/batch_normalization/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "block7/batch_normalization/ExpandDims_1"
  op: "ExpandDims"
  input: "block7/batch_normalization/ExpandDims_1/input"
  input: "block7/batch_normalization/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block7/batch_normalization/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "block7/batch_normalization/Reshape"
  op: "Reshape"
  input: "is_training"
  input: "block7/batch_normalization/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block7/batch_normalization/Select"
  op: "Select"
  input: "block7/batch_normalization/Reshape"
  input: "block7/batch_normalization/ExpandDims"
  input: "block7/batch_normalization/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block7/batch_normalization/Squeeze"
  op: "Squeeze"
  input: "block7/batch_normalization/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "block7/batch_normalization/AssignMovingAvg/read"
  op: "Identity"
  input: "block7/batch_normalization/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block7/batch_normalization/AssignMovingAvg/Sub"
  op: "Sub"
  input: "block7/batch_normalization/AssignMovingAvg/read"
  input: "block7/batch_normalization/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block7/batch_normalization/AssignMovingAvg/Mul"
  op: "Mul"
  input: "block7/batch_normalization/AssignMovingAvg/Sub"
  input: "block7/batch_normalization/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block7/batch_normalization/AssignMovingAvg"
  op: "AssignSub"
  input: "block7/batch_normalization/moving_mean"
  input: "block7/batch_normalization/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "block7/batch_normalization/AssignMovingAvg_1/read"
  op: "Identity"
  input: "block7/batch_normalization/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block7/batch_normalization/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "block7/batch_normalization/AssignMovingAvg_1/read"
  input: "block7/batch_normalization/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block7/batch_normalization/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "block7/batch_normalization/AssignMovingAvg_1/Sub"
  input: "block7/batch_normalization/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block7/batch_normalization/AssignMovingAvg_1"
  op: "AssignSub"
  input: "block7/batch_normalization/moving_variance"
  input: "block7/batch_normalization/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "block7/Relu"
  op: "Relu"
  input: "block7/batch_normalization/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block8/conv8/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/conv8/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "block8/conv8/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/conv8/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.072168782
      }
    }
  }
}
node {
  name: "block8/conv8/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/conv8/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.072168782
      }
    }
  }
}
node {
  name: "block8/conv8/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block8/conv8/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/conv8/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block8/conv8/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block8/conv8/kernel/Initializer/random_uniform/max"
  input: "block8/conv8/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/conv8/kernel"
      }
    }
  }
}
node {
  name: "block8/conv8/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block8/conv8/kernel/Initializer/random_uniform/RandomUniform"
  input: "block8/conv8/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/conv8/kernel"
      }
    }
  }
}
node {
  name: "block8/conv8/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block8/conv8/kernel/Initializer/random_uniform/mul"
  input: "block8/conv8/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/conv8/kernel"
      }
    }
  }
}
node {
  name: "block8/conv8/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/conv8/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block8/conv8/kernel/Assign"
  op: "Assign"
  input: "block8/conv8/kernel"
  input: "block8/conv8/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/conv8/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block8/conv8/kernel/read"
  op: "Identity"
  input: "block8/conv8/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/conv8/kernel"
      }
    }
  }
}
node {
  name: "block8/conv8/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block8/conv8/Conv2D"
  op: "Conv2D"
  input: "block7/Relu"
  input: "block8/conv8/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block8/batch_normalization/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block8/batch_normalization/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block8/batch_normalization/gamma/Assign"
  op: "Assign"
  input: "block8/batch_normalization/gamma"
  input: "block8/batch_normalization/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block8/batch_normalization/gamma/read"
  op: "Identity"
  input: "block8/batch_normalization/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block8/batch_normalization/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block8/batch_normalization/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block8/batch_normalization/beta/Assign"
  op: "Assign"
  input: "block8/batch_normalization/beta"
  input: "block8/batch_normalization/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block8/batch_normalization/beta/read"
  op: "Identity"
  input: "block8/batch_normalization/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block8/batch_normalization/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block8/batch_normalization/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block8/batch_normalization/moving_mean/Assign"
  op: "Assign"
  input: "block8/batch_normalization/moving_mean"
  input: "block8/batch_normalization/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block8/batch_normalization/moving_mean/read"
  op: "Identity"
  input: "block8/batch_normalization/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block8/batch_normalization/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block8/batch_normalization/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block8/batch_normalization/moving_variance/Assign"
  op: "Assign"
  input: "block8/batch_normalization/moving_variance"
  input: "block8/batch_normalization/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block8/batch_normalization/moving_variance/read"
  op: "Identity"
  input: "block8/batch_normalization/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block8/batch_normalization/cond/Switch"
  op: "Switch"
  input: "is_training"
  input: "is_training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block8/batch_normalization/cond/switch_t"
  op: "Identity"
  input: "block8/batch_normalization/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block8/batch_normalization/cond/switch_f"
  op: "Identity"
  input: "block8/batch_normalization/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block8/batch_normalization/cond/pred_id"
  op: "Identity"
  input: "is_training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block8/batch_normalization/cond/Const"
  op: "Const"
  input: "^block8/batch_normalization/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block8/batch_normalization/cond/Const_1"
  op: "Const"
  input: "^block8/batch_normalization/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block8/batch_normalization/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "block8/conv8/Conv2D"
  input: "block8/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/conv8/Conv2D"
      }
    }
  }
}
node {
  name: "block8/batch_normalization/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "block8/batch_normalization/gamma/read"
  input: "block8/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block8/batch_normalization/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "block8/batch_normalization/beta/read"
  input: "block8/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block8/batch_normalization/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "block8/batch_normalization/cond/FusedBatchNorm/Switch:1"
  input: "block8/batch_normalization/cond/FusedBatchNorm/Switch_1:1"
  input: "block8/batch_normalization/cond/FusedBatchNorm/Switch_2:1"
  input: "block8/batch_normalization/cond/Const"
  input: "block8/batch_normalization/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block8/batch_normalization/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "block8/conv8/Conv2D"
  input: "block8/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/conv8/Conv2D"
      }
    }
  }
}
node {
  name: "block8/batch_normalization/cond/FusedBatchNorm_1/Switch_1"
  op: "Switch"
  input: "block8/batch_normalization/gamma/read"
  input: "block8/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block8/batch_normalization/cond/FusedBatchNorm_1/Switch_2"
  op: "Switch"
  input: "block8/batch_normalization/beta/read"
  input: "block8/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block8/batch_normalization/cond/FusedBatchNorm_1/Switch_3"
  op: "Switch"
  input: "block8/batch_normalization/moving_mean/read"
  input: "block8/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block8/batch_normalization/cond/FusedBatchNorm_1/Switch_4"
  op: "Switch"
  input: "block8/batch_normalization/moving_variance/read"
  input: "block8/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block8/batch_normalization/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "block8/batch_normalization/cond/FusedBatchNorm_1/Switch"
  input: "block8/batch_normalization/cond/FusedBatchNorm_1/Switch_1"
  input: "block8/batch_normalization/cond/FusedBatchNorm_1/Switch_2"
  input: "block8/batch_normalization/cond/FusedBatchNorm_1/Switch_3"
  input: "block8/batch_normalization/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block8/batch_normalization/cond/Merge"
  op: "Merge"
  input: "block8/batch_normalization/cond/FusedBatchNorm_1"
  input: "block8/batch_normalization/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block8/batch_normalization/cond/Merge_1"
  op: "Merge"
  input: "block8/batch_normalization/cond/FusedBatchNorm_1:1"
  input: "block8/batch_normalization/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block8/batch_normalization/cond/Merge_2"
  op: "Merge"
  input: "block8/batch_normalization/cond/FusedBatchNorm_1:2"
  input: "block8/batch_normalization/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block8/batch_normalization/ExpandDims/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0099999998
      }
    }
  }
}
node {
  name: "block8/batch_normalization/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "block8/batch_normalization/ExpandDims"
  op: "ExpandDims"
  input: "block8/batch_normalization/ExpandDims/input"
  input: "block8/batch_normalization/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block8/batch_normalization/ExpandDims_1/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block8/batch_normalization/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "block8/batch_normalization/ExpandDims_1"
  op: "ExpandDims"
  input: "block8/batch_normalization/ExpandDims_1/input"
  input: "block8/batch_normalization/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block8/batch_normalization/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "block8/batch_normalization/Reshape"
  op: "Reshape"
  input: "is_training"
  input: "block8/batch_normalization/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block8/batch_normalization/Select"
  op: "Select"
  input: "block8/batch_normalization/Reshape"
  input: "block8/batch_normalization/ExpandDims"
  input: "block8/batch_normalization/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block8/batch_normalization/Squeeze"
  op: "Squeeze"
  input: "block8/batch_normalization/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "block8/batch_normalization/AssignMovingAvg/read"
  op: "Identity"
  input: "block8/batch_normalization/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block8/batch_normalization/AssignMovingAvg/Sub"
  op: "Sub"
  input: "block8/batch_normalization/AssignMovingAvg/read"
  input: "block8/batch_normalization/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block8/batch_normalization/AssignMovingAvg/Mul"
  op: "Mul"
  input: "block8/batch_normalization/AssignMovingAvg/Sub"
  input: "block8/batch_normalization/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block8/batch_normalization/AssignMovingAvg"
  op: "AssignSub"
  input: "block8/batch_normalization/moving_mean"
  input: "block8/batch_normalization/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "block8/batch_normalization/AssignMovingAvg_1/read"
  op: "Identity"
  input: "block8/batch_normalization/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block8/batch_normalization/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "block8/batch_normalization/AssignMovingAvg_1/read"
  input: "block8/batch_normalization/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block8/batch_normalization/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "block8/batch_normalization/AssignMovingAvg_1/Sub"
  input: "block8/batch_normalization/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block8/batch_normalization/AssignMovingAvg_1"
  op: "AssignSub"
  input: "block8/batch_normalization/moving_variance"
  input: "block8/batch_normalization/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "block8/Relu"
  op: "Relu"
  input: "block8/batch_normalization/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block9/conv9/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/conv9/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "block9/conv9/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/conv9/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.072168782
      }
    }
  }
}
node {
  name: "block9/conv9/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/conv9/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.072168782
      }
    }
  }
}
node {
  name: "block9/conv9/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block9/conv9/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/conv9/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block9/conv9/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block9/conv9/kernel/Initializer/random_uniform/max"
  input: "block9/conv9/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/conv9/kernel"
      }
    }
  }
}
node {
  name: "block9/conv9/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block9/conv9/kernel/Initializer/random_uniform/RandomUniform"
  input: "block9/conv9/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/conv9/kernel"
      }
    }
  }
}
node {
  name: "block9/conv9/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block9/conv9/kernel/Initializer/random_uniform/mul"
  input: "block9/conv9/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/conv9/kernel"
      }
    }
  }
}
node {
  name: "block9/conv9/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/conv9/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block9/conv9/kernel/Assign"
  op: "Assign"
  input: "block9/conv9/kernel"
  input: "block9/conv9/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/conv9/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block9/conv9/kernel/read"
  op: "Identity"
  input: "block9/conv9/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/conv9/kernel"
      }
    }
  }
}
node {
  name: "block9/conv9/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block9/conv9/Conv2D"
  op: "Conv2D"
  input: "block8/Relu"
  input: "block9/conv9/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block9/batch_normalization/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block9/batch_normalization/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block9/batch_normalization/gamma/Assign"
  op: "Assign"
  input: "block9/batch_normalization/gamma"
  input: "block9/batch_normalization/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block9/batch_normalization/gamma/read"
  op: "Identity"
  input: "block9/batch_normalization/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block9/batch_normalization/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block9/batch_normalization/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block9/batch_normalization/beta/Assign"
  op: "Assign"
  input: "block9/batch_normalization/beta"
  input: "block9/batch_normalization/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block9/batch_normalization/beta/read"
  op: "Identity"
  input: "block9/batch_normalization/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block9/batch_normalization/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block9/batch_normalization/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block9/batch_normalization/moving_mean/Assign"
  op: "Assign"
  input: "block9/batch_normalization/moving_mean"
  input: "block9/batch_normalization/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block9/batch_normalization/moving_mean/read"
  op: "Identity"
  input: "block9/batch_normalization/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block9/batch_normalization/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block9/batch_normalization/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block9/batch_normalization/moving_variance/Assign"
  op: "Assign"
  input: "block9/batch_normalization/moving_variance"
  input: "block9/batch_normalization/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block9/batch_normalization/moving_variance/read"
  op: "Identity"
  input: "block9/batch_normalization/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block9/batch_normalization/cond/Switch"
  op: "Switch"
  input: "is_training"
  input: "is_training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block9/batch_normalization/cond/switch_t"
  op: "Identity"
  input: "block9/batch_normalization/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block9/batch_normalization/cond/switch_f"
  op: "Identity"
  input: "block9/batch_normalization/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block9/batch_normalization/cond/pred_id"
  op: "Identity"
  input: "is_training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block9/batch_normalization/cond/Const"
  op: "Const"
  input: "^block9/batch_normalization/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block9/batch_normalization/cond/Const_1"
  op: "Const"
  input: "^block9/batch_normalization/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block9/batch_normalization/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "block9/conv9/Conv2D"
  input: "block9/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/conv9/Conv2D"
      }
    }
  }
}
node {
  name: "block9/batch_normalization/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "block9/batch_normalization/gamma/read"
  input: "block9/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block9/batch_normalization/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "block9/batch_normalization/beta/read"
  input: "block9/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block9/batch_normalization/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "block9/batch_normalization/cond/FusedBatchNorm/Switch:1"
  input: "block9/batch_normalization/cond/FusedBatchNorm/Switch_1:1"
  input: "block9/batch_normalization/cond/FusedBatchNorm/Switch_2:1"
  input: "block9/batch_normalization/cond/Const"
  input: "block9/batch_normalization/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block9/batch_normalization/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "block9/conv9/Conv2D"
  input: "block9/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/conv9/Conv2D"
      }
    }
  }
}
node {
  name: "block9/batch_normalization/cond/FusedBatchNorm_1/Switch_1"
  op: "Switch"
  input: "block9/batch_normalization/gamma/read"
  input: "block9/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block9/batch_normalization/cond/FusedBatchNorm_1/Switch_2"
  op: "Switch"
  input: "block9/batch_normalization/beta/read"
  input: "block9/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block9/batch_normalization/cond/FusedBatchNorm_1/Switch_3"
  op: "Switch"
  input: "block9/batch_normalization/moving_mean/read"
  input: "block9/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block9/batch_normalization/cond/FusedBatchNorm_1/Switch_4"
  op: "Switch"
  input: "block9/batch_normalization/moving_variance/read"
  input: "block9/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block9/batch_normalization/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "block9/batch_normalization/cond/FusedBatchNorm_1/Switch"
  input: "block9/batch_normalization/cond/FusedBatchNorm_1/Switch_1"
  input: "block9/batch_normalization/cond/FusedBatchNorm_1/Switch_2"
  input: "block9/batch_normalization/cond/FusedBatchNorm_1/Switch_3"
  input: "block9/batch_normalization/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block9/batch_normalization/cond/Merge"
  op: "Merge"
  input: "block9/batch_normalization/cond/FusedBatchNorm_1"
  input: "block9/batch_normalization/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block9/batch_normalization/cond/Merge_1"
  op: "Merge"
  input: "block9/batch_normalization/cond/FusedBatchNorm_1:1"
  input: "block9/batch_normalization/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block9/batch_normalization/cond/Merge_2"
  op: "Merge"
  input: "block9/batch_normalization/cond/FusedBatchNorm_1:2"
  input: "block9/batch_normalization/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block9/batch_normalization/ExpandDims/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0099999998
      }
    }
  }
}
node {
  name: "block9/batch_normalization/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "block9/batch_normalization/ExpandDims"
  op: "ExpandDims"
  input: "block9/batch_normalization/ExpandDims/input"
  input: "block9/batch_normalization/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block9/batch_normalization/ExpandDims_1/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block9/batch_normalization/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "block9/batch_normalization/ExpandDims_1"
  op: "ExpandDims"
  input: "block9/batch_normalization/ExpandDims_1/input"
  input: "block9/batch_normalization/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block9/batch_normalization/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "block9/batch_normalization/Reshape"
  op: "Reshape"
  input: "is_training"
  input: "block9/batch_normalization/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block9/batch_normalization/Select"
  op: "Select"
  input: "block9/batch_normalization/Reshape"
  input: "block9/batch_normalization/ExpandDims"
  input: "block9/batch_normalization/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block9/batch_normalization/Squeeze"
  op: "Squeeze"
  input: "block9/batch_normalization/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "block9/batch_normalization/AssignMovingAvg/read"
  op: "Identity"
  input: "block9/batch_normalization/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block9/batch_normalization/AssignMovingAvg/Sub"
  op: "Sub"
  input: "block9/batch_normalization/AssignMovingAvg/read"
  input: "block9/batch_normalization/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block9/batch_normalization/AssignMovingAvg/Mul"
  op: "Mul"
  input: "block9/batch_normalization/AssignMovingAvg/Sub"
  input: "block9/batch_normalization/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block9/batch_normalization/AssignMovingAvg"
  op: "AssignSub"
  input: "block9/batch_normalization/moving_mean"
  input: "block9/batch_normalization/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "block9/batch_normalization/AssignMovingAvg_1/read"
  op: "Identity"
  input: "block9/batch_normalization/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block9/batch_normalization/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "block9/batch_normalization/AssignMovingAvg_1/read"
  input: "block9/batch_normalization/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block9/batch_normalization/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "block9/batch_normalization/AssignMovingAvg_1/Sub"
  input: "block9/batch_normalization/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block9/batch_normalization/AssignMovingAvg_1"
  op: "AssignSub"
  input: "block9/batch_normalization/moving_variance"
  input: "block9/batch_normalization/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "block9/Relu"
  op: "Relu"
  input: "block9/batch_normalization/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block10/conv10/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/conv10/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "block10/conv10/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/conv10/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.072168782
      }
    }
  }
}
node {
  name: "block10/conv10/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/conv10/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.072168782
      }
    }
  }
}
node {
  name: "block10/conv10/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block10/conv10/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/conv10/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block10/conv10/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block10/conv10/kernel/Initializer/random_uniform/max"
  input: "block10/conv10/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/conv10/kernel"
      }
    }
  }
}
node {
  name: "block10/conv10/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block10/conv10/kernel/Initializer/random_uniform/RandomUniform"
  input: "block10/conv10/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/conv10/kernel"
      }
    }
  }
}
node {
  name: "block10/conv10/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block10/conv10/kernel/Initializer/random_uniform/mul"
  input: "block10/conv10/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/conv10/kernel"
      }
    }
  }
}
node {
  name: "block10/conv10/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/conv10/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block10/conv10/kernel/Assign"
  op: "Assign"
  input: "block10/conv10/kernel"
  input: "block10/conv10/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/conv10/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block10/conv10/kernel/read"
  op: "Identity"
  input: "block10/conv10/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/conv10/kernel"
      }
    }
  }
}
node {
  name: "block10/conv10/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block10/conv10/Conv2D"
  op: "Conv2D"
  input: "block9/Relu"
  input: "block10/conv10/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block10/batch_normalization/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block10/batch_normalization/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block10/batch_normalization/gamma/Assign"
  op: "Assign"
  input: "block10/batch_normalization/gamma"
  input: "block10/batch_normalization/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block10/batch_normalization/gamma/read"
  op: "Identity"
  input: "block10/batch_normalization/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block10/batch_normalization/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block10/batch_normalization/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block10/batch_normalization/beta/Assign"
  op: "Assign"
  input: "block10/batch_normalization/beta"
  input: "block10/batch_normalization/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block10/batch_normalization/beta/read"
  op: "Identity"
  input: "block10/batch_normalization/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block10/batch_normalization/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block10/batch_normalization/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block10/batch_normalization/moving_mean/Assign"
  op: "Assign"
  input: "block10/batch_normalization/moving_mean"
  input: "block10/batch_normalization/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block10/batch_normalization/moving_mean/read"
  op: "Identity"
  input: "block10/batch_normalization/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block10/batch_normalization/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block10/batch_normalization/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block10/batch_normalization/moving_variance/Assign"
  op: "Assign"
  input: "block10/batch_normalization/moving_variance"
  input: "block10/batch_normalization/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block10/batch_normalization/moving_variance/read"
  op: "Identity"
  input: "block10/batch_normalization/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block10/batch_normalization/cond/Switch"
  op: "Switch"
  input: "is_training"
  input: "is_training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block10/batch_normalization/cond/switch_t"
  op: "Identity"
  input: "block10/batch_normalization/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block10/batch_normalization/cond/switch_f"
  op: "Identity"
  input: "block10/batch_normalization/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block10/batch_normalization/cond/pred_id"
  op: "Identity"
  input: "is_training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block10/batch_normalization/cond/Const"
  op: "Const"
  input: "^block10/batch_normalization/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block10/batch_normalization/cond/Const_1"
  op: "Const"
  input: "^block10/batch_normalization/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block10/batch_normalization/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "block10/conv10/Conv2D"
  input: "block10/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/conv10/Conv2D"
      }
    }
  }
}
node {
  name: "block10/batch_normalization/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "block10/batch_normalization/gamma/read"
  input: "block10/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block10/batch_normalization/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "block10/batch_normalization/beta/read"
  input: "block10/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block10/batch_normalization/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "block10/batch_normalization/cond/FusedBatchNorm/Switch:1"
  input: "block10/batch_normalization/cond/FusedBatchNorm/Switch_1:1"
  input: "block10/batch_normalization/cond/FusedBatchNorm/Switch_2:1"
  input: "block10/batch_normalization/cond/Const"
  input: "block10/batch_normalization/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block10/batch_normalization/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "block10/conv10/Conv2D"
  input: "block10/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/conv10/Conv2D"
      }
    }
  }
}
node {
  name: "block10/batch_normalization/cond/FusedBatchNorm_1/Switch_1"
  op: "Switch"
  input: "block10/batch_normalization/gamma/read"
  input: "block10/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block10/batch_normalization/cond/FusedBatchNorm_1/Switch_2"
  op: "Switch"
  input: "block10/batch_normalization/beta/read"
  input: "block10/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block10/batch_normalization/cond/FusedBatchNorm_1/Switch_3"
  op: "Switch"
  input: "block10/batch_normalization/moving_mean/read"
  input: "block10/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block10/batch_normalization/cond/FusedBatchNorm_1/Switch_4"
  op: "Switch"
  input: "block10/batch_normalization/moving_variance/read"
  input: "block10/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block10/batch_normalization/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "block10/batch_normalization/cond/FusedBatchNorm_1/Switch"
  input: "block10/batch_normalization/cond/FusedBatchNorm_1/Switch_1"
  input: "block10/batch_normalization/cond/FusedBatchNorm_1/Switch_2"
  input: "block10/batch_normalization/cond/FusedBatchNorm_1/Switch_3"
  input: "block10/batch_normalization/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block10/batch_normalization/cond/Merge"
  op: "Merge"
  input: "block10/batch_normalization/cond/FusedBatchNorm_1"
  input: "block10/batch_normalization/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block10/batch_normalization/cond/Merge_1"
  op: "Merge"
  input: "block10/batch_normalization/cond/FusedBatchNorm_1:1"
  input: "block10/batch_normalization/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block10/batch_normalization/cond/Merge_2"
  op: "Merge"
  input: "block10/batch_normalization/cond/FusedBatchNorm_1:2"
  input: "block10/batch_normalization/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block10/batch_normalization/ExpandDims/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0099999998
      }
    }
  }
}
node {
  name: "block10/batch_normalization/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "block10/batch_normalization/ExpandDims"
  op: "ExpandDims"
  input: "block10/batch_normalization/ExpandDims/input"
  input: "block10/batch_normalization/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block10/batch_normalization/ExpandDims_1/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block10/batch_normalization/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "block10/batch_normalization/ExpandDims_1"
  op: "ExpandDims"
  input: "block10/batch_normalization/ExpandDims_1/input"
  input: "block10/batch_normalization/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block10/batch_normalization/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "block10/batch_normalization/Reshape"
  op: "Reshape"
  input: "is_training"
  input: "block10/batch_normalization/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block10/batch_normalization/Select"
  op: "Select"
  input: "block10/batch_normalization/Reshape"
  input: "block10/batch_normalization/ExpandDims"
  input: "block10/batch_normalization/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block10/batch_normalization/Squeeze"
  op: "Squeeze"
  input: "block10/batch_normalization/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "block10/batch_normalization/AssignMovingAvg/read"
  op: "Identity"
  input: "block10/batch_normalization/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block10/batch_normalization/AssignMovingAvg/Sub"
  op: "Sub"
  input: "block10/batch_normalization/AssignMovingAvg/read"
  input: "block10/batch_normalization/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block10/batch_normalization/AssignMovingAvg/Mul"
  op: "Mul"
  input: "block10/batch_normalization/AssignMovingAvg/Sub"
  input: "block10/batch_normalization/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block10/batch_normalization/AssignMovingAvg"
  op: "AssignSub"
  input: "block10/batch_normalization/moving_mean"
  input: "block10/batch_normalization/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "block10/batch_normalization/AssignMovingAvg_1/read"
  op: "Identity"
  input: "block10/batch_normalization/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block10/batch_normalization/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "block10/batch_normalization/AssignMovingAvg_1/read"
  input: "block10/batch_normalization/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block10/batch_normalization/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "block10/batch_normalization/AssignMovingAvg_1/Sub"
  input: "block10/batch_normalization/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block10/batch_normalization/AssignMovingAvg_1"
  op: "AssignSub"
  input: "block10/batch_normalization/moving_variance"
  input: "block10/batch_normalization/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "block10/Relu"
  op: "Relu"
  input: "block10/batch_normalization/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block11/conv11/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/conv11/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "block11/conv11/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/conv11/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.072168782
      }
    }
  }
}
node {
  name: "block11/conv11/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/conv11/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.072168782
      }
    }
  }
}
node {
  name: "block11/conv11/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block11/conv11/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/conv11/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block11/conv11/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block11/conv11/kernel/Initializer/random_uniform/max"
  input: "block11/conv11/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/conv11/kernel"
      }
    }
  }
}
node {
  name: "block11/conv11/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block11/conv11/kernel/Initializer/random_uniform/RandomUniform"
  input: "block11/conv11/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/conv11/kernel"
      }
    }
  }
}
node {
  name: "block11/conv11/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block11/conv11/kernel/Initializer/random_uniform/mul"
  input: "block11/conv11/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/conv11/kernel"
      }
    }
  }
}
node {
  name: "block11/conv11/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/conv11/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block11/conv11/kernel/Assign"
  op: "Assign"
  input: "block11/conv11/kernel"
  input: "block11/conv11/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/conv11/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block11/conv11/kernel/read"
  op: "Identity"
  input: "block11/conv11/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/conv11/kernel"
      }
    }
  }
}
node {
  name: "block11/conv11/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block11/conv11/Conv2D"
  op: "Conv2D"
  input: "block10/Relu"
  input: "block11/conv11/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block11/batch_normalization/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block11/batch_normalization/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block11/batch_normalization/gamma/Assign"
  op: "Assign"
  input: "block11/batch_normalization/gamma"
  input: "block11/batch_normalization/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block11/batch_normalization/gamma/read"
  op: "Identity"
  input: "block11/batch_normalization/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block11/batch_normalization/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block11/batch_normalization/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block11/batch_normalization/beta/Assign"
  op: "Assign"
  input: "block11/batch_normalization/beta"
  input: "block11/batch_normalization/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block11/batch_normalization/beta/read"
  op: "Identity"
  input: "block11/batch_normalization/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block11/batch_normalization/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block11/batch_normalization/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block11/batch_normalization/moving_mean/Assign"
  op: "Assign"
  input: "block11/batch_normalization/moving_mean"
  input: "block11/batch_normalization/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block11/batch_normalization/moving_mean/read"
  op: "Identity"
  input: "block11/batch_normalization/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block11/batch_normalization/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block11/batch_normalization/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block11/batch_normalization/moving_variance/Assign"
  op: "Assign"
  input: "block11/batch_normalization/moving_variance"
  input: "block11/batch_normalization/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block11/batch_normalization/moving_variance/read"
  op: "Identity"
  input: "block11/batch_normalization/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block11/batch_normalization/cond/Switch"
  op: "Switch"
  input: "is_training"
  input: "is_training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block11/batch_normalization/cond/switch_t"
  op: "Identity"
  input: "block11/batch_normalization/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block11/batch_normalization/cond/switch_f"
  op: "Identity"
  input: "block11/batch_normalization/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block11/batch_normalization/cond/pred_id"
  op: "Identity"
  input: "is_training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block11/batch_normalization/cond/Const"
  op: "Const"
  input: "^block11/batch_normalization/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block11/batch_normalization/cond/Const_1"
  op: "Const"
  input: "^block11/batch_normalization/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block11/batch_normalization/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "block11/conv11/Conv2D"
  input: "block11/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/conv11/Conv2D"
      }
    }
  }
}
node {
  name: "block11/batch_normalization/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "block11/batch_normalization/gamma/read"
  input: "block11/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block11/batch_normalization/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "block11/batch_normalization/beta/read"
  input: "block11/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block11/batch_normalization/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "block11/batch_normalization/cond/FusedBatchNorm/Switch:1"
  input: "block11/batch_normalization/cond/FusedBatchNorm/Switch_1:1"
  input: "block11/batch_normalization/cond/FusedBatchNorm/Switch_2:1"
  input: "block11/batch_normalization/cond/Const"
  input: "block11/batch_normalization/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block11/batch_normalization/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "block11/conv11/Conv2D"
  input: "block11/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/conv11/Conv2D"
      }
    }
  }
}
node {
  name: "block11/batch_normalization/cond/FusedBatchNorm_1/Switch_1"
  op: "Switch"
  input: "block11/batch_normalization/gamma/read"
  input: "block11/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block11/batch_normalization/cond/FusedBatchNorm_1/Switch_2"
  op: "Switch"
  input: "block11/batch_normalization/beta/read"
  input: "block11/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block11/batch_normalization/cond/FusedBatchNorm_1/Switch_3"
  op: "Switch"
  input: "block11/batch_normalization/moving_mean/read"
  input: "block11/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block11/batch_normalization/cond/FusedBatchNorm_1/Switch_4"
  op: "Switch"
  input: "block11/batch_normalization/moving_variance/read"
  input: "block11/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block11/batch_normalization/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "block11/batch_normalization/cond/FusedBatchNorm_1/Switch"
  input: "block11/batch_normalization/cond/FusedBatchNorm_1/Switch_1"
  input: "block11/batch_normalization/cond/FusedBatchNorm_1/Switch_2"
  input: "block11/batch_normalization/cond/FusedBatchNorm_1/Switch_3"
  input: "block11/batch_normalization/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block11/batch_normalization/cond/Merge"
  op: "Merge"
  input: "block11/batch_normalization/cond/FusedBatchNorm_1"
  input: "block11/batch_normalization/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block11/batch_normalization/cond/Merge_1"
  op: "Merge"
  input: "block11/batch_normalization/cond/FusedBatchNorm_1:1"
  input: "block11/batch_normalization/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block11/batch_normalization/cond/Merge_2"
  op: "Merge"
  input: "block11/batch_normalization/cond/FusedBatchNorm_1:2"
  input: "block11/batch_normalization/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block11/batch_normalization/ExpandDims/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0099999998
      }
    }
  }
}
node {
  name: "block11/batch_normalization/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "block11/batch_normalization/ExpandDims"
  op: "ExpandDims"
  input: "block11/batch_normalization/ExpandDims/input"
  input: "block11/batch_normalization/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block11/batch_normalization/ExpandDims_1/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block11/batch_normalization/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "block11/batch_normalization/ExpandDims_1"
  op: "ExpandDims"
  input: "block11/batch_normalization/ExpandDims_1/input"
  input: "block11/batch_normalization/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block11/batch_normalization/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "block11/batch_normalization/Reshape"
  op: "Reshape"
  input: "is_training"
  input: "block11/batch_normalization/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block11/batch_normalization/Select"
  op: "Select"
  input: "block11/batch_normalization/Reshape"
  input: "block11/batch_normalization/ExpandDims"
  input: "block11/batch_normalization/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block11/batch_normalization/Squeeze"
  op: "Squeeze"
  input: "block11/batch_normalization/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "block11/batch_normalization/AssignMovingAvg/read"
  op: "Identity"
  input: "block11/batch_normalization/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block11/batch_normalization/AssignMovingAvg/Sub"
  op: "Sub"
  input: "block11/batch_normalization/AssignMovingAvg/read"
  input: "block11/batch_normalization/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block11/batch_normalization/AssignMovingAvg/Mul"
  op: "Mul"
  input: "block11/batch_normalization/AssignMovingAvg/Sub"
  input: "block11/batch_normalization/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block11/batch_normalization/AssignMovingAvg"
  op: "AssignSub"
  input: "block11/batch_normalization/moving_mean"
  input: "block11/batch_normalization/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "block11/batch_normalization/AssignMovingAvg_1/read"
  op: "Identity"
  input: "block11/batch_normalization/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block11/batch_normalization/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "block11/batch_normalization/AssignMovingAvg_1/read"
  input: "block11/batch_normalization/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block11/batch_normalization/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "block11/batch_normalization/AssignMovingAvg_1/Sub"
  input: "block11/batch_normalization/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block11/batch_normalization/AssignMovingAvg_1"
  op: "AssignSub"
  input: "block11/batch_normalization/moving_variance"
  input: "block11/batch_normalization/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "block11/Relu"
  op: "Relu"
  input: "block11/batch_normalization/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block12/conv12/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/conv12/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "block12/conv12/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/conv12/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.072168782
      }
    }
  }
}
node {
  name: "block12/conv12/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/conv12/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.072168782
      }
    }
  }
}
node {
  name: "block12/conv12/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block12/conv12/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/conv12/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block12/conv12/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block12/conv12/kernel/Initializer/random_uniform/max"
  input: "block12/conv12/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/conv12/kernel"
      }
    }
  }
}
node {
  name: "block12/conv12/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block12/conv12/kernel/Initializer/random_uniform/RandomUniform"
  input: "block12/conv12/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/conv12/kernel"
      }
    }
  }
}
node {
  name: "block12/conv12/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block12/conv12/kernel/Initializer/random_uniform/mul"
  input: "block12/conv12/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/conv12/kernel"
      }
    }
  }
}
node {
  name: "block12/conv12/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/conv12/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block12/conv12/kernel/Assign"
  op: "Assign"
  input: "block12/conv12/kernel"
  input: "block12/conv12/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/conv12/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block12/conv12/kernel/read"
  op: "Identity"
  input: "block12/conv12/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/conv12/kernel"
      }
    }
  }
}
node {
  name: "block12/conv12/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block12/conv12/Conv2D"
  op: "Conv2D"
  input: "block11/Relu"
  input: "block12/conv12/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block12/batch_normalization/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block12/batch_normalization/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block12/batch_normalization/gamma/Assign"
  op: "Assign"
  input: "block12/batch_normalization/gamma"
  input: "block12/batch_normalization/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block12/batch_normalization/gamma/read"
  op: "Identity"
  input: "block12/batch_normalization/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block12/batch_normalization/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block12/batch_normalization/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block12/batch_normalization/beta/Assign"
  op: "Assign"
  input: "block12/batch_normalization/beta"
  input: "block12/batch_normalization/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block12/batch_normalization/beta/read"
  op: "Identity"
  input: "block12/batch_normalization/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block12/batch_normalization/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block12/batch_normalization/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block12/batch_normalization/moving_mean/Assign"
  op: "Assign"
  input: "block12/batch_normalization/moving_mean"
  input: "block12/batch_normalization/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block12/batch_normalization/moving_mean/read"
  op: "Identity"
  input: "block12/batch_normalization/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block12/batch_normalization/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block12/batch_normalization/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block12/batch_normalization/moving_variance/Assign"
  op: "Assign"
  input: "block12/batch_normalization/moving_variance"
  input: "block12/batch_normalization/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block12/batch_normalization/moving_variance/read"
  op: "Identity"
  input: "block12/batch_normalization/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block12/batch_normalization/cond/Switch"
  op: "Switch"
  input: "is_training"
  input: "is_training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block12/batch_normalization/cond/switch_t"
  op: "Identity"
  input: "block12/batch_normalization/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block12/batch_normalization/cond/switch_f"
  op: "Identity"
  input: "block12/batch_normalization/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block12/batch_normalization/cond/pred_id"
  op: "Identity"
  input: "is_training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block12/batch_normalization/cond/Const"
  op: "Const"
  input: "^block12/batch_normalization/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block12/batch_normalization/cond/Const_1"
  op: "Const"
  input: "^block12/batch_normalization/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block12/batch_normalization/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "block12/conv12/Conv2D"
  input: "block12/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/conv12/Conv2D"
      }
    }
  }
}
node {
  name: "block12/batch_normalization/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "block12/batch_normalization/gamma/read"
  input: "block12/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block12/batch_normalization/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "block12/batch_normalization/beta/read"
  input: "block12/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block12/batch_normalization/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "block12/batch_normalization/cond/FusedBatchNorm/Switch:1"
  input: "block12/batch_normalization/cond/FusedBatchNorm/Switch_1:1"
  input: "block12/batch_normalization/cond/FusedBatchNorm/Switch_2:1"
  input: "block12/batch_normalization/cond/Const"
  input: "block12/batch_normalization/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block12/batch_normalization/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "block12/conv12/Conv2D"
  input: "block12/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/conv12/Conv2D"
      }
    }
  }
}
node {
  name: "block12/batch_normalization/cond/FusedBatchNorm_1/Switch_1"
  op: "Switch"
  input: "block12/batch_normalization/gamma/read"
  input: "block12/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block12/batch_normalization/cond/FusedBatchNorm_1/Switch_2"
  op: "Switch"
  input: "block12/batch_normalization/beta/read"
  input: "block12/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block12/batch_normalization/cond/FusedBatchNorm_1/Switch_3"
  op: "Switch"
  input: "block12/batch_normalization/moving_mean/read"
  input: "block12/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block12/batch_normalization/cond/FusedBatchNorm_1/Switch_4"
  op: "Switch"
  input: "block12/batch_normalization/moving_variance/read"
  input: "block12/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block12/batch_normalization/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "block12/batch_normalization/cond/FusedBatchNorm_1/Switch"
  input: "block12/batch_normalization/cond/FusedBatchNorm_1/Switch_1"
  input: "block12/batch_normalization/cond/FusedBatchNorm_1/Switch_2"
  input: "block12/batch_normalization/cond/FusedBatchNorm_1/Switch_3"
  input: "block12/batch_normalization/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block12/batch_normalization/cond/Merge"
  op: "Merge"
  input: "block12/batch_normalization/cond/FusedBatchNorm_1"
  input: "block12/batch_normalization/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block12/batch_normalization/cond/Merge_1"
  op: "Merge"
  input: "block12/batch_normalization/cond/FusedBatchNorm_1:1"
  input: "block12/batch_normalization/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block12/batch_normalization/cond/Merge_2"
  op: "Merge"
  input: "block12/batch_normalization/cond/FusedBatchNorm_1:2"
  input: "block12/batch_normalization/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block12/batch_normalization/ExpandDims/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0099999998
      }
    }
  }
}
node {
  name: "block12/batch_normalization/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "block12/batch_normalization/ExpandDims"
  op: "ExpandDims"
  input: "block12/batch_normalization/ExpandDims/input"
  input: "block12/batch_normalization/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block12/batch_normalization/ExpandDims_1/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block12/batch_normalization/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "block12/batch_normalization/ExpandDims_1"
  op: "ExpandDims"
  input: "block12/batch_normalization/ExpandDims_1/input"
  input: "block12/batch_normalization/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block12/batch_normalization/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "block12/batch_normalization/Reshape"
  op: "Reshape"
  input: "is_training"
  input: "block12/batch_normalization/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block12/batch_normalization/Select"
  op: "Select"
  input: "block12/batch_normalization/Reshape"
  input: "block12/batch_normalization/ExpandDims"
  input: "block12/batch_normalization/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block12/batch_normalization/Squeeze"
  op: "Squeeze"
  input: "block12/batch_normalization/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "block12/batch_normalization/AssignMovingAvg/read"
  op: "Identity"
  input: "block12/batch_normalization/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block12/batch_normalization/AssignMovingAvg/Sub"
  op: "Sub"
  input: "block12/batch_normalization/AssignMovingAvg/read"
  input: "block12/batch_normalization/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block12/batch_normalization/AssignMovingAvg/Mul"
  op: "Mul"
  input: "block12/batch_normalization/AssignMovingAvg/Sub"
  input: "block12/batch_normalization/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block12/batch_normalization/AssignMovingAvg"
  op: "AssignSub"
  input: "block12/batch_normalization/moving_mean"
  input: "block12/batch_normalization/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "block12/batch_normalization/AssignMovingAvg_1/read"
  op: "Identity"
  input: "block12/batch_normalization/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block12/batch_normalization/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "block12/batch_normalization/AssignMovingAvg_1/read"
  input: "block12/batch_normalization/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block12/batch_normalization/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "block12/batch_normalization/AssignMovingAvg_1/Sub"
  input: "block12/batch_normalization/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block12/batch_normalization/AssignMovingAvg_1"
  op: "AssignSub"
  input: "block12/batch_normalization/moving_variance"
  input: "block12/batch_normalization/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "block12/Relu"
  op: "Relu"
  input: "block12/batch_normalization/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block13/conv13/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/conv13/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "block13/conv13/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/conv13/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.072168782
      }
    }
  }
}
node {
  name: "block13/conv13/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/conv13/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.072168782
      }
    }
  }
}
node {
  name: "block13/conv13/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block13/conv13/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/conv13/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block13/conv13/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block13/conv13/kernel/Initializer/random_uniform/max"
  input: "block13/conv13/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/conv13/kernel"
      }
    }
  }
}
node {
  name: "block13/conv13/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block13/conv13/kernel/Initializer/random_uniform/RandomUniform"
  input: "block13/conv13/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/conv13/kernel"
      }
    }
  }
}
node {
  name: "block13/conv13/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block13/conv13/kernel/Initializer/random_uniform/mul"
  input: "block13/conv13/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/conv13/kernel"
      }
    }
  }
}
node {
  name: "block13/conv13/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/conv13/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block13/conv13/kernel/Assign"
  op: "Assign"
  input: "block13/conv13/kernel"
  input: "block13/conv13/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/conv13/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block13/conv13/kernel/read"
  op: "Identity"
  input: "block13/conv13/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/conv13/kernel"
      }
    }
  }
}
node {
  name: "block13/conv13/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block13/conv13/Conv2D"
  op: "Conv2D"
  input: "block12/Relu"
  input: "block13/conv13/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block13/batch_normalization/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block13/batch_normalization/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block13/batch_normalization/gamma/Assign"
  op: "Assign"
  input: "block13/batch_normalization/gamma"
  input: "block13/batch_normalization/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block13/batch_normalization/gamma/read"
  op: "Identity"
  input: "block13/batch_normalization/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block13/batch_normalization/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block13/batch_normalization/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block13/batch_normalization/beta/Assign"
  op: "Assign"
  input: "block13/batch_normalization/beta"
  input: "block13/batch_normalization/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block13/batch_normalization/beta/read"
  op: "Identity"
  input: "block13/batch_normalization/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block13/batch_normalization/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block13/batch_normalization/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block13/batch_normalization/moving_mean/Assign"
  op: "Assign"
  input: "block13/batch_normalization/moving_mean"
  input: "block13/batch_normalization/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block13/batch_normalization/moving_mean/read"
  op: "Identity"
  input: "block13/batch_normalization/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block13/batch_normalization/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block13/batch_normalization/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block13/batch_normalization/moving_variance/Assign"
  op: "Assign"
  input: "block13/batch_normalization/moving_variance"
  input: "block13/batch_normalization/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block13/batch_normalization/moving_variance/read"
  op: "Identity"
  input: "block13/batch_normalization/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block13/batch_normalization/cond/Switch"
  op: "Switch"
  input: "is_training"
  input: "is_training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block13/batch_normalization/cond/switch_t"
  op: "Identity"
  input: "block13/batch_normalization/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block13/batch_normalization/cond/switch_f"
  op: "Identity"
  input: "block13/batch_normalization/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block13/batch_normalization/cond/pred_id"
  op: "Identity"
  input: "is_training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block13/batch_normalization/cond/Const"
  op: "Const"
  input: "^block13/batch_normalization/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block13/batch_normalization/cond/Const_1"
  op: "Const"
  input: "^block13/batch_normalization/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block13/batch_normalization/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "block13/conv13/Conv2D"
  input: "block13/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/conv13/Conv2D"
      }
    }
  }
}
node {
  name: "block13/batch_normalization/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "block13/batch_normalization/gamma/read"
  input: "block13/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block13/batch_normalization/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "block13/batch_normalization/beta/read"
  input: "block13/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block13/batch_normalization/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "block13/batch_normalization/cond/FusedBatchNorm/Switch:1"
  input: "block13/batch_normalization/cond/FusedBatchNorm/Switch_1:1"
  input: "block13/batch_normalization/cond/FusedBatchNorm/Switch_2:1"
  input: "block13/batch_normalization/cond/Const"
  input: "block13/batch_normalization/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block13/batch_normalization/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "block13/conv13/Conv2D"
  input: "block13/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/conv13/Conv2D"
      }
    }
  }
}
node {
  name: "block13/batch_normalization/cond/FusedBatchNorm_1/Switch_1"
  op: "Switch"
  input: "block13/batch_normalization/gamma/read"
  input: "block13/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block13/batch_normalization/cond/FusedBatchNorm_1/Switch_2"
  op: "Switch"
  input: "block13/batch_normalization/beta/read"
  input: "block13/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block13/batch_normalization/cond/FusedBatchNorm_1/Switch_3"
  op: "Switch"
  input: "block13/batch_normalization/moving_mean/read"
  input: "block13/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block13/batch_normalization/cond/FusedBatchNorm_1/Switch_4"
  op: "Switch"
  input: "block13/batch_normalization/moving_variance/read"
  input: "block13/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block13/batch_normalization/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "block13/batch_normalization/cond/FusedBatchNorm_1/Switch"
  input: "block13/batch_normalization/cond/FusedBatchNorm_1/Switch_1"
  input: "block13/batch_normalization/cond/FusedBatchNorm_1/Switch_2"
  input: "block13/batch_normalization/cond/FusedBatchNorm_1/Switch_3"
  input: "block13/batch_normalization/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block13/batch_normalization/cond/Merge"
  op: "Merge"
  input: "block13/batch_normalization/cond/FusedBatchNorm_1"
  input: "block13/batch_normalization/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block13/batch_normalization/cond/Merge_1"
  op: "Merge"
  input: "block13/batch_normalization/cond/FusedBatchNorm_1:1"
  input: "block13/batch_normalization/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block13/batch_normalization/cond/Merge_2"
  op: "Merge"
  input: "block13/batch_normalization/cond/FusedBatchNorm_1:2"
  input: "block13/batch_normalization/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block13/batch_normalization/ExpandDims/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0099999998
      }
    }
  }
}
node {
  name: "block13/batch_normalization/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "block13/batch_normalization/ExpandDims"
  op: "ExpandDims"
  input: "block13/batch_normalization/ExpandDims/input"
  input: "block13/batch_normalization/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block13/batch_normalization/ExpandDims_1/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block13/batch_normalization/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "block13/batch_normalization/ExpandDims_1"
  op: "ExpandDims"
  input: "block13/batch_normalization/ExpandDims_1/input"
  input: "block13/batch_normalization/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block13/batch_normalization/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "block13/batch_normalization/Reshape"
  op: "Reshape"
  input: "is_training"
  input: "block13/batch_normalization/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block13/batch_normalization/Select"
  op: "Select"
  input: "block13/batch_normalization/Reshape"
  input: "block13/batch_normalization/ExpandDims"
  input: "block13/batch_normalization/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block13/batch_normalization/Squeeze"
  op: "Squeeze"
  input: "block13/batch_normalization/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "block13/batch_normalization/AssignMovingAvg/read"
  op: "Identity"
  input: "block13/batch_normalization/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block13/batch_normalization/AssignMovingAvg/Sub"
  op: "Sub"
  input: "block13/batch_normalization/AssignMovingAvg/read"
  input: "block13/batch_normalization/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block13/batch_normalization/AssignMovingAvg/Mul"
  op: "Mul"
  input: "block13/batch_normalization/AssignMovingAvg/Sub"
  input: "block13/batch_normalization/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block13/batch_normalization/AssignMovingAvg"
  op: "AssignSub"
  input: "block13/batch_normalization/moving_mean"
  input: "block13/batch_normalization/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "block13/batch_normalization/AssignMovingAvg_1/read"
  op: "Identity"
  input: "block13/batch_normalization/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block13/batch_normalization/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "block13/batch_normalization/AssignMovingAvg_1/read"
  input: "block13/batch_normalization/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block13/batch_normalization/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "block13/batch_normalization/AssignMovingAvg_1/Sub"
  input: "block13/batch_normalization/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block13/batch_normalization/AssignMovingAvg_1"
  op: "AssignSub"
  input: "block13/batch_normalization/moving_variance"
  input: "block13/batch_normalization/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "block13/Relu"
  op: "Relu"
  input: "block13/batch_normalization/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block14/conv14/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/conv14/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "block14/conv14/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/conv14/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.072168782
      }
    }
  }
}
node {
  name: "block14/conv14/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/conv14/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.072168782
      }
    }
  }
}
node {
  name: "block14/conv14/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block14/conv14/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/conv14/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block14/conv14/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block14/conv14/kernel/Initializer/random_uniform/max"
  input: "block14/conv14/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/conv14/kernel"
      }
    }
  }
}
node {
  name: "block14/conv14/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block14/conv14/kernel/Initializer/random_uniform/RandomUniform"
  input: "block14/conv14/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/conv14/kernel"
      }
    }
  }
}
node {
  name: "block14/conv14/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block14/conv14/kernel/Initializer/random_uniform/mul"
  input: "block14/conv14/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/conv14/kernel"
      }
    }
  }
}
node {
  name: "block14/conv14/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/conv14/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block14/conv14/kernel/Assign"
  op: "Assign"
  input: "block14/conv14/kernel"
  input: "block14/conv14/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/conv14/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block14/conv14/kernel/read"
  op: "Identity"
  input: "block14/conv14/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/conv14/kernel"
      }
    }
  }
}
node {
  name: "block14/conv14/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block14/conv14/Conv2D"
  op: "Conv2D"
  input: "block13/Relu"
  input: "block14/conv14/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block14/batch_normalization/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block14/batch_normalization/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block14/batch_normalization/gamma/Assign"
  op: "Assign"
  input: "block14/batch_normalization/gamma"
  input: "block14/batch_normalization/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block14/batch_normalization/gamma/read"
  op: "Identity"
  input: "block14/batch_normalization/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block14/batch_normalization/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block14/batch_normalization/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block14/batch_normalization/beta/Assign"
  op: "Assign"
  input: "block14/batch_normalization/beta"
  input: "block14/batch_normalization/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block14/batch_normalization/beta/read"
  op: "Identity"
  input: "block14/batch_normalization/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block14/batch_normalization/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block14/batch_normalization/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block14/batch_normalization/moving_mean/Assign"
  op: "Assign"
  input: "block14/batch_normalization/moving_mean"
  input: "block14/batch_normalization/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block14/batch_normalization/moving_mean/read"
  op: "Identity"
  input: "block14/batch_normalization/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block14/batch_normalization/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block14/batch_normalization/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block14/batch_normalization/moving_variance/Assign"
  op: "Assign"
  input: "block14/batch_normalization/moving_variance"
  input: "block14/batch_normalization/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block14/batch_normalization/moving_variance/read"
  op: "Identity"
  input: "block14/batch_normalization/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block14/batch_normalization/cond/Switch"
  op: "Switch"
  input: "is_training"
  input: "is_training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block14/batch_normalization/cond/switch_t"
  op: "Identity"
  input: "block14/batch_normalization/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block14/batch_normalization/cond/switch_f"
  op: "Identity"
  input: "block14/batch_normalization/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block14/batch_normalization/cond/pred_id"
  op: "Identity"
  input: "is_training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block14/batch_normalization/cond/Const"
  op: "Const"
  input: "^block14/batch_normalization/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block14/batch_normalization/cond/Const_1"
  op: "Const"
  input: "^block14/batch_normalization/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block14/batch_normalization/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "block14/conv14/Conv2D"
  input: "block14/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/conv14/Conv2D"
      }
    }
  }
}
node {
  name: "block14/batch_normalization/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "block14/batch_normalization/gamma/read"
  input: "block14/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block14/batch_normalization/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "block14/batch_normalization/beta/read"
  input: "block14/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block14/batch_normalization/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "block14/batch_normalization/cond/FusedBatchNorm/Switch:1"
  input: "block14/batch_normalization/cond/FusedBatchNorm/Switch_1:1"
  input: "block14/batch_normalization/cond/FusedBatchNorm/Switch_2:1"
  input: "block14/batch_normalization/cond/Const"
  input: "block14/batch_normalization/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block14/batch_normalization/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "block14/conv14/Conv2D"
  input: "block14/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/conv14/Conv2D"
      }
    }
  }
}
node {
  name: "block14/batch_normalization/cond/FusedBatchNorm_1/Switch_1"
  op: "Switch"
  input: "block14/batch_normalization/gamma/read"
  input: "block14/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block14/batch_normalization/cond/FusedBatchNorm_1/Switch_2"
  op: "Switch"
  input: "block14/batch_normalization/beta/read"
  input: "block14/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block14/batch_normalization/cond/FusedBatchNorm_1/Switch_3"
  op: "Switch"
  input: "block14/batch_normalization/moving_mean/read"
  input: "block14/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block14/batch_normalization/cond/FusedBatchNorm_1/Switch_4"
  op: "Switch"
  input: "block14/batch_normalization/moving_variance/read"
  input: "block14/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block14/batch_normalization/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "block14/batch_normalization/cond/FusedBatchNorm_1/Switch"
  input: "block14/batch_normalization/cond/FusedBatchNorm_1/Switch_1"
  input: "block14/batch_normalization/cond/FusedBatchNorm_1/Switch_2"
  input: "block14/batch_normalization/cond/FusedBatchNorm_1/Switch_3"
  input: "block14/batch_normalization/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block14/batch_normalization/cond/Merge"
  op: "Merge"
  input: "block14/batch_normalization/cond/FusedBatchNorm_1"
  input: "block14/batch_normalization/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block14/batch_normalization/cond/Merge_1"
  op: "Merge"
  input: "block14/batch_normalization/cond/FusedBatchNorm_1:1"
  input: "block14/batch_normalization/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block14/batch_normalization/cond/Merge_2"
  op: "Merge"
  input: "block14/batch_normalization/cond/FusedBatchNorm_1:2"
  input: "block14/batch_normalization/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block14/batch_normalization/ExpandDims/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0099999998
      }
    }
  }
}
node {
  name: "block14/batch_normalization/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "block14/batch_normalization/ExpandDims"
  op: "ExpandDims"
  input: "block14/batch_normalization/ExpandDims/input"
  input: "block14/batch_normalization/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block14/batch_normalization/ExpandDims_1/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block14/batch_normalization/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "block14/batch_normalization/ExpandDims_1"
  op: "ExpandDims"
  input: "block14/batch_normalization/ExpandDims_1/input"
  input: "block14/batch_normalization/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block14/batch_normalization/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "block14/batch_normalization/Reshape"
  op: "Reshape"
  input: "is_training"
  input: "block14/batch_normalization/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block14/batch_normalization/Select"
  op: "Select"
  input: "block14/batch_normalization/Reshape"
  input: "block14/batch_normalization/ExpandDims"
  input: "block14/batch_normalization/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block14/batch_normalization/Squeeze"
  op: "Squeeze"
  input: "block14/batch_normalization/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "block14/batch_normalization/AssignMovingAvg/read"
  op: "Identity"
  input: "block14/batch_normalization/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block14/batch_normalization/AssignMovingAvg/Sub"
  op: "Sub"
  input: "block14/batch_normalization/AssignMovingAvg/read"
  input: "block14/batch_normalization/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block14/batch_normalization/AssignMovingAvg/Mul"
  op: "Mul"
  input: "block14/batch_normalization/AssignMovingAvg/Sub"
  input: "block14/batch_normalization/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block14/batch_normalization/AssignMovingAvg"
  op: "AssignSub"
  input: "block14/batch_normalization/moving_mean"
  input: "block14/batch_normalization/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "block14/batch_normalization/AssignMovingAvg_1/read"
  op: "Identity"
  input: "block14/batch_normalization/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block14/batch_normalization/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "block14/batch_normalization/AssignMovingAvg_1/read"
  input: "block14/batch_normalization/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block14/batch_normalization/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "block14/batch_normalization/AssignMovingAvg_1/Sub"
  input: "block14/batch_normalization/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block14/batch_normalization/AssignMovingAvg_1"
  op: "AssignSub"
  input: "block14/batch_normalization/moving_variance"
  input: "block14/batch_normalization/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "block14/Relu"
  op: "Relu"
  input: "block14/batch_normalization/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block15/conv15/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/conv15/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "block15/conv15/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/conv15/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.072168782
      }
    }
  }
}
node {
  name: "block15/conv15/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/conv15/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.072168782
      }
    }
  }
}
node {
  name: "block15/conv15/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block15/conv15/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/conv15/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block15/conv15/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block15/conv15/kernel/Initializer/random_uniform/max"
  input: "block15/conv15/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/conv15/kernel"
      }
    }
  }
}
node {
  name: "block15/conv15/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block15/conv15/kernel/Initializer/random_uniform/RandomUniform"
  input: "block15/conv15/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/conv15/kernel"
      }
    }
  }
}
node {
  name: "block15/conv15/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block15/conv15/kernel/Initializer/random_uniform/mul"
  input: "block15/conv15/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/conv15/kernel"
      }
    }
  }
}
node {
  name: "block15/conv15/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/conv15/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block15/conv15/kernel/Assign"
  op: "Assign"
  input: "block15/conv15/kernel"
  input: "block15/conv15/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/conv15/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block15/conv15/kernel/read"
  op: "Identity"
  input: "block15/conv15/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/conv15/kernel"
      }
    }
  }
}
node {
  name: "block15/conv15/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block15/conv15/Conv2D"
  op: "Conv2D"
  input: "block14/Relu"
  input: "block15/conv15/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block15/batch_normalization/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block15/batch_normalization/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block15/batch_normalization/gamma/Assign"
  op: "Assign"
  input: "block15/batch_normalization/gamma"
  input: "block15/batch_normalization/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block15/batch_normalization/gamma/read"
  op: "Identity"
  input: "block15/batch_normalization/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block15/batch_normalization/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block15/batch_normalization/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block15/batch_normalization/beta/Assign"
  op: "Assign"
  input: "block15/batch_normalization/beta"
  input: "block15/batch_normalization/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block15/batch_normalization/beta/read"
  op: "Identity"
  input: "block15/batch_normalization/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block15/batch_normalization/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block15/batch_normalization/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block15/batch_normalization/moving_mean/Assign"
  op: "Assign"
  input: "block15/batch_normalization/moving_mean"
  input: "block15/batch_normalization/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block15/batch_normalization/moving_mean/read"
  op: "Identity"
  input: "block15/batch_normalization/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block15/batch_normalization/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block15/batch_normalization/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block15/batch_normalization/moving_variance/Assign"
  op: "Assign"
  input: "block15/batch_normalization/moving_variance"
  input: "block15/batch_normalization/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block15/batch_normalization/moving_variance/read"
  op: "Identity"
  input: "block15/batch_normalization/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block15/batch_normalization/cond/Switch"
  op: "Switch"
  input: "is_training"
  input: "is_training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block15/batch_normalization/cond/switch_t"
  op: "Identity"
  input: "block15/batch_normalization/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block15/batch_normalization/cond/switch_f"
  op: "Identity"
  input: "block15/batch_normalization/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block15/batch_normalization/cond/pred_id"
  op: "Identity"
  input: "is_training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block15/batch_normalization/cond/Const"
  op: "Const"
  input: "^block15/batch_normalization/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block15/batch_normalization/cond/Const_1"
  op: "Const"
  input: "^block15/batch_normalization/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block15/batch_normalization/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "block15/conv15/Conv2D"
  input: "block15/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/conv15/Conv2D"
      }
    }
  }
}
node {
  name: "block15/batch_normalization/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "block15/batch_normalization/gamma/read"
  input: "block15/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block15/batch_normalization/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "block15/batch_normalization/beta/read"
  input: "block15/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block15/batch_normalization/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "block15/batch_normalization/cond/FusedBatchNorm/Switch:1"
  input: "block15/batch_normalization/cond/FusedBatchNorm/Switch_1:1"
  input: "block15/batch_normalization/cond/FusedBatchNorm/Switch_2:1"
  input: "block15/batch_normalization/cond/Const"
  input: "block15/batch_normalization/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block15/batch_normalization/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "block15/conv15/Conv2D"
  input: "block15/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/conv15/Conv2D"
      }
    }
  }
}
node {
  name: "block15/batch_normalization/cond/FusedBatchNorm_1/Switch_1"
  op: "Switch"
  input: "block15/batch_normalization/gamma/read"
  input: "block15/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block15/batch_normalization/cond/FusedBatchNorm_1/Switch_2"
  op: "Switch"
  input: "block15/batch_normalization/beta/read"
  input: "block15/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block15/batch_normalization/cond/FusedBatchNorm_1/Switch_3"
  op: "Switch"
  input: "block15/batch_normalization/moving_mean/read"
  input: "block15/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block15/batch_normalization/cond/FusedBatchNorm_1/Switch_4"
  op: "Switch"
  input: "block15/batch_normalization/moving_variance/read"
  input: "block15/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block15/batch_normalization/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "block15/batch_normalization/cond/FusedBatchNorm_1/Switch"
  input: "block15/batch_normalization/cond/FusedBatchNorm_1/Switch_1"
  input: "block15/batch_normalization/cond/FusedBatchNorm_1/Switch_2"
  input: "block15/batch_normalization/cond/FusedBatchNorm_1/Switch_3"
  input: "block15/batch_normalization/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block15/batch_normalization/cond/Merge"
  op: "Merge"
  input: "block15/batch_normalization/cond/FusedBatchNorm_1"
  input: "block15/batch_normalization/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block15/batch_normalization/cond/Merge_1"
  op: "Merge"
  input: "block15/batch_normalization/cond/FusedBatchNorm_1:1"
  input: "block15/batch_normalization/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block15/batch_normalization/cond/Merge_2"
  op: "Merge"
  input: "block15/batch_normalization/cond/FusedBatchNorm_1:2"
  input: "block15/batch_normalization/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block15/batch_normalization/ExpandDims/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0099999998
      }
    }
  }
}
node {
  name: "block15/batch_normalization/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "block15/batch_normalization/ExpandDims"
  op: "ExpandDims"
  input: "block15/batch_normalization/ExpandDims/input"
  input: "block15/batch_normalization/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block15/batch_normalization/ExpandDims_1/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block15/batch_normalization/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "block15/batch_normalization/ExpandDims_1"
  op: "ExpandDims"
  input: "block15/batch_normalization/ExpandDims_1/input"
  input: "block15/batch_normalization/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block15/batch_normalization/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "block15/batch_normalization/Reshape"
  op: "Reshape"
  input: "is_training"
  input: "block15/batch_normalization/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block15/batch_normalization/Select"
  op: "Select"
  input: "block15/batch_normalization/Reshape"
  input: "block15/batch_normalization/ExpandDims"
  input: "block15/batch_normalization/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block15/batch_normalization/Squeeze"
  op: "Squeeze"
  input: "block15/batch_normalization/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "block15/batch_normalization/AssignMovingAvg/read"
  op: "Identity"
  input: "block15/batch_normalization/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block15/batch_normalization/AssignMovingAvg/Sub"
  op: "Sub"
  input: "block15/batch_normalization/AssignMovingAvg/read"
  input: "block15/batch_normalization/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block15/batch_normalization/AssignMovingAvg/Mul"
  op: "Mul"
  input: "block15/batch_normalization/AssignMovingAvg/Sub"
  input: "block15/batch_normalization/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block15/batch_normalization/AssignMovingAvg"
  op: "AssignSub"
  input: "block15/batch_normalization/moving_mean"
  input: "block15/batch_normalization/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "block15/batch_normalization/AssignMovingAvg_1/read"
  op: "Identity"
  input: "block15/batch_normalization/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block15/batch_normalization/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "block15/batch_normalization/AssignMovingAvg_1/read"
  input: "block15/batch_normalization/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block15/batch_normalization/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "block15/batch_normalization/AssignMovingAvg_1/Sub"
  input: "block15/batch_normalization/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block15/batch_normalization/AssignMovingAvg_1"
  op: "AssignSub"
  input: "block15/batch_normalization/moving_variance"
  input: "block15/batch_normalization/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "block15/Relu"
  op: "Relu"
  input: "block15/batch_normalization/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block16/conv16/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/conv16/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "block16/conv16/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/conv16/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.072168782
      }
    }
  }
}
node {
  name: "block16/conv16/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/conv16/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.072168782
      }
    }
  }
}
node {
  name: "block16/conv16/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block16/conv16/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/conv16/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block16/conv16/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block16/conv16/kernel/Initializer/random_uniform/max"
  input: "block16/conv16/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/conv16/kernel"
      }
    }
  }
}
node {
  name: "block16/conv16/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block16/conv16/kernel/Initializer/random_uniform/RandomUniform"
  input: "block16/conv16/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/conv16/kernel"
      }
    }
  }
}
node {
  name: "block16/conv16/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block16/conv16/kernel/Initializer/random_uniform/mul"
  input: "block16/conv16/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/conv16/kernel"
      }
    }
  }
}
node {
  name: "block16/conv16/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/conv16/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block16/conv16/kernel/Assign"
  op: "Assign"
  input: "block16/conv16/kernel"
  input: "block16/conv16/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/conv16/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block16/conv16/kernel/read"
  op: "Identity"
  input: "block16/conv16/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/conv16/kernel"
      }
    }
  }
}
node {
  name: "block16/conv16/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block16/conv16/Conv2D"
  op: "Conv2D"
  input: "block15/Relu"
  input: "block16/conv16/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block16/batch_normalization/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block16/batch_normalization/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block16/batch_normalization/gamma/Assign"
  op: "Assign"
  input: "block16/batch_normalization/gamma"
  input: "block16/batch_normalization/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block16/batch_normalization/gamma/read"
  op: "Identity"
  input: "block16/batch_normalization/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block16/batch_normalization/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block16/batch_normalization/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block16/batch_normalization/beta/Assign"
  op: "Assign"
  input: "block16/batch_normalization/beta"
  input: "block16/batch_normalization/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block16/batch_normalization/beta/read"
  op: "Identity"
  input: "block16/batch_normalization/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block16/batch_normalization/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block16/batch_normalization/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block16/batch_normalization/moving_mean/Assign"
  op: "Assign"
  input: "block16/batch_normalization/moving_mean"
  input: "block16/batch_normalization/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block16/batch_normalization/moving_mean/read"
  op: "Identity"
  input: "block16/batch_normalization/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block16/batch_normalization/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block16/batch_normalization/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block16/batch_normalization/moving_variance/Assign"
  op: "Assign"
  input: "block16/batch_normalization/moving_variance"
  input: "block16/batch_normalization/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block16/batch_normalization/moving_variance/read"
  op: "Identity"
  input: "block16/batch_normalization/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block16/batch_normalization/cond/Switch"
  op: "Switch"
  input: "is_training"
  input: "is_training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block16/batch_normalization/cond/switch_t"
  op: "Identity"
  input: "block16/batch_normalization/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block16/batch_normalization/cond/switch_f"
  op: "Identity"
  input: "block16/batch_normalization/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block16/batch_normalization/cond/pred_id"
  op: "Identity"
  input: "is_training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block16/batch_normalization/cond/Const"
  op: "Const"
  input: "^block16/batch_normalization/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block16/batch_normalization/cond/Const_1"
  op: "Const"
  input: "^block16/batch_normalization/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block16/batch_normalization/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "block16/conv16/Conv2D"
  input: "block16/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/conv16/Conv2D"
      }
    }
  }
}
node {
  name: "block16/batch_normalization/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "block16/batch_normalization/gamma/read"
  input: "block16/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block16/batch_normalization/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "block16/batch_normalization/beta/read"
  input: "block16/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block16/batch_normalization/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "block16/batch_normalization/cond/FusedBatchNorm/Switch:1"
  input: "block16/batch_normalization/cond/FusedBatchNorm/Switch_1:1"
  input: "block16/batch_normalization/cond/FusedBatchNorm/Switch_2:1"
  input: "block16/batch_normalization/cond/Const"
  input: "block16/batch_normalization/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block16/batch_normalization/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "block16/conv16/Conv2D"
  input: "block16/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/conv16/Conv2D"
      }
    }
  }
}
node {
  name: "block16/batch_normalization/cond/FusedBatchNorm_1/Switch_1"
  op: "Switch"
  input: "block16/batch_normalization/gamma/read"
  input: "block16/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block16/batch_normalization/cond/FusedBatchNorm_1/Switch_2"
  op: "Switch"
  input: "block16/batch_normalization/beta/read"
  input: "block16/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block16/batch_normalization/cond/FusedBatchNorm_1/Switch_3"
  op: "Switch"
  input: "block16/batch_normalization/moving_mean/read"
  input: "block16/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block16/batch_normalization/cond/FusedBatchNorm_1/Switch_4"
  op: "Switch"
  input: "block16/batch_normalization/moving_variance/read"
  input: "block16/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block16/batch_normalization/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "block16/batch_normalization/cond/FusedBatchNorm_1/Switch"
  input: "block16/batch_normalization/cond/FusedBatchNorm_1/Switch_1"
  input: "block16/batch_normalization/cond/FusedBatchNorm_1/Switch_2"
  input: "block16/batch_normalization/cond/FusedBatchNorm_1/Switch_3"
  input: "block16/batch_normalization/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block16/batch_normalization/cond/Merge"
  op: "Merge"
  input: "block16/batch_normalization/cond/FusedBatchNorm_1"
  input: "block16/batch_normalization/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block16/batch_normalization/cond/Merge_1"
  op: "Merge"
  input: "block16/batch_normalization/cond/FusedBatchNorm_1:1"
  input: "block16/batch_normalization/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block16/batch_normalization/cond/Merge_2"
  op: "Merge"
  input: "block16/batch_normalization/cond/FusedBatchNorm_1:2"
  input: "block16/batch_normalization/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block16/batch_normalization/ExpandDims/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0099999998
      }
    }
  }
}
node {
  name: "block16/batch_normalization/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "block16/batch_normalization/ExpandDims"
  op: "ExpandDims"
  input: "block16/batch_normalization/ExpandDims/input"
  input: "block16/batch_normalization/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block16/batch_normalization/ExpandDims_1/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block16/batch_normalization/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "block16/batch_normalization/ExpandDims_1"
  op: "ExpandDims"
  input: "block16/batch_normalization/ExpandDims_1/input"
  input: "block16/batch_normalization/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block16/batch_normalization/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "block16/batch_normalization/Reshape"
  op: "Reshape"
  input: "is_training"
  input: "block16/batch_normalization/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block16/batch_normalization/Select"
  op: "Select"
  input: "block16/batch_normalization/Reshape"
  input: "block16/batch_normalization/ExpandDims"
  input: "block16/batch_normalization/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block16/batch_normalization/Squeeze"
  op: "Squeeze"
  input: "block16/batch_normalization/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "block16/batch_normalization/AssignMovingAvg/read"
  op: "Identity"
  input: "block16/batch_normalization/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block16/batch_normalization/AssignMovingAvg/Sub"
  op: "Sub"
  input: "block16/batch_normalization/AssignMovingAvg/read"
  input: "block16/batch_normalization/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block16/batch_normalization/AssignMovingAvg/Mul"
  op: "Mul"
  input: "block16/batch_normalization/AssignMovingAvg/Sub"
  input: "block16/batch_normalization/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block16/batch_normalization/AssignMovingAvg"
  op: "AssignSub"
  input: "block16/batch_normalization/moving_mean"
  input: "block16/batch_normalization/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "block16/batch_normalization/AssignMovingAvg_1/read"
  op: "Identity"
  input: "block16/batch_normalization/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block16/batch_normalization/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "block16/batch_normalization/AssignMovingAvg_1/read"
  input: "block16/batch_normalization/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block16/batch_normalization/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "block16/batch_normalization/AssignMovingAvg_1/Sub"
  input: "block16/batch_normalization/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block16/batch_normalization/AssignMovingAvg_1"
  op: "AssignSub"
  input: "block16/batch_normalization/moving_variance"
  input: "block16/batch_normalization/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "block16/Relu"
  op: "Relu"
  input: "block16/batch_normalization/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block17/conv17/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/conv17/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "block17/conv17/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/conv17/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.072168782
      }
    }
  }
}
node {
  name: "block17/conv17/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/conv17/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.072168782
      }
    }
  }
}
node {
  name: "block17/conv17/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block17/conv17/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/conv17/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block17/conv17/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block17/conv17/kernel/Initializer/random_uniform/max"
  input: "block17/conv17/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/conv17/kernel"
      }
    }
  }
}
node {
  name: "block17/conv17/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block17/conv17/kernel/Initializer/random_uniform/RandomUniform"
  input: "block17/conv17/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/conv17/kernel"
      }
    }
  }
}
node {
  name: "block17/conv17/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block17/conv17/kernel/Initializer/random_uniform/mul"
  input: "block17/conv17/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/conv17/kernel"
      }
    }
  }
}
node {
  name: "block17/conv17/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/conv17/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block17/conv17/kernel/Assign"
  op: "Assign"
  input: "block17/conv17/kernel"
  input: "block17/conv17/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/conv17/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block17/conv17/kernel/read"
  op: "Identity"
  input: "block17/conv17/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/conv17/kernel"
      }
    }
  }
}
node {
  name: "block17/conv17/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block17/conv17/Conv2D"
  op: "Conv2D"
  input: "block16/Relu"
  input: "block17/conv17/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block17/batch_normalization/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block17/batch_normalization/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block17/batch_normalization/gamma/Assign"
  op: "Assign"
  input: "block17/batch_normalization/gamma"
  input: "block17/batch_normalization/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block17/batch_normalization/gamma/read"
  op: "Identity"
  input: "block17/batch_normalization/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block17/batch_normalization/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block17/batch_normalization/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block17/batch_normalization/beta/Assign"
  op: "Assign"
  input: "block17/batch_normalization/beta"
  input: "block17/batch_normalization/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block17/batch_normalization/beta/read"
  op: "Identity"
  input: "block17/batch_normalization/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block17/batch_normalization/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block17/batch_normalization/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block17/batch_normalization/moving_mean/Assign"
  op: "Assign"
  input: "block17/batch_normalization/moving_mean"
  input: "block17/batch_normalization/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block17/batch_normalization/moving_mean/read"
  op: "Identity"
  input: "block17/batch_normalization/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block17/batch_normalization/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block17/batch_normalization/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block17/batch_normalization/moving_variance/Assign"
  op: "Assign"
  input: "block17/batch_normalization/moving_variance"
  input: "block17/batch_normalization/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block17/batch_normalization/moving_variance/read"
  op: "Identity"
  input: "block17/batch_normalization/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block17/batch_normalization/cond/Switch"
  op: "Switch"
  input: "is_training"
  input: "is_training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block17/batch_normalization/cond/switch_t"
  op: "Identity"
  input: "block17/batch_normalization/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block17/batch_normalization/cond/switch_f"
  op: "Identity"
  input: "block17/batch_normalization/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block17/batch_normalization/cond/pred_id"
  op: "Identity"
  input: "is_training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block17/batch_normalization/cond/Const"
  op: "Const"
  input: "^block17/batch_normalization/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block17/batch_normalization/cond/Const_1"
  op: "Const"
  input: "^block17/batch_normalization/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block17/batch_normalization/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "block17/conv17/Conv2D"
  input: "block17/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/conv17/Conv2D"
      }
    }
  }
}
node {
  name: "block17/batch_normalization/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "block17/batch_normalization/gamma/read"
  input: "block17/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block17/batch_normalization/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "block17/batch_normalization/beta/read"
  input: "block17/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block17/batch_normalization/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "block17/batch_normalization/cond/FusedBatchNorm/Switch:1"
  input: "block17/batch_normalization/cond/FusedBatchNorm/Switch_1:1"
  input: "block17/batch_normalization/cond/FusedBatchNorm/Switch_2:1"
  input: "block17/batch_normalization/cond/Const"
  input: "block17/batch_normalization/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block17/batch_normalization/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "block17/conv17/Conv2D"
  input: "block17/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/conv17/Conv2D"
      }
    }
  }
}
node {
  name: "block17/batch_normalization/cond/FusedBatchNorm_1/Switch_1"
  op: "Switch"
  input: "block17/batch_normalization/gamma/read"
  input: "block17/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block17/batch_normalization/cond/FusedBatchNorm_1/Switch_2"
  op: "Switch"
  input: "block17/batch_normalization/beta/read"
  input: "block17/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block17/batch_normalization/cond/FusedBatchNorm_1/Switch_3"
  op: "Switch"
  input: "block17/batch_normalization/moving_mean/read"
  input: "block17/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block17/batch_normalization/cond/FusedBatchNorm_1/Switch_4"
  op: "Switch"
  input: "block17/batch_normalization/moving_variance/read"
  input: "block17/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block17/batch_normalization/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "block17/batch_normalization/cond/FusedBatchNorm_1/Switch"
  input: "block17/batch_normalization/cond/FusedBatchNorm_1/Switch_1"
  input: "block17/batch_normalization/cond/FusedBatchNorm_1/Switch_2"
  input: "block17/batch_normalization/cond/FusedBatchNorm_1/Switch_3"
  input: "block17/batch_normalization/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block17/batch_normalization/cond/Merge"
  op: "Merge"
  input: "block17/batch_normalization/cond/FusedBatchNorm_1"
  input: "block17/batch_normalization/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block17/batch_normalization/cond/Merge_1"
  op: "Merge"
  input: "block17/batch_normalization/cond/FusedBatchNorm_1:1"
  input: "block17/batch_normalization/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block17/batch_normalization/cond/Merge_2"
  op: "Merge"
  input: "block17/batch_normalization/cond/FusedBatchNorm_1:2"
  input: "block17/batch_normalization/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block17/batch_normalization/ExpandDims/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0099999998
      }
    }
  }
}
node {
  name: "block17/batch_normalization/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "block17/batch_normalization/ExpandDims"
  op: "ExpandDims"
  input: "block17/batch_normalization/ExpandDims/input"
  input: "block17/batch_normalization/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block17/batch_normalization/ExpandDims_1/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block17/batch_normalization/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "block17/batch_normalization/ExpandDims_1"
  op: "ExpandDims"
  input: "block17/batch_normalization/ExpandDims_1/input"
  input: "block17/batch_normalization/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block17/batch_normalization/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "block17/batch_normalization/Reshape"
  op: "Reshape"
  input: "is_training"
  input: "block17/batch_normalization/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block17/batch_normalization/Select"
  op: "Select"
  input: "block17/batch_normalization/Reshape"
  input: "block17/batch_normalization/ExpandDims"
  input: "block17/batch_normalization/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block17/batch_normalization/Squeeze"
  op: "Squeeze"
  input: "block17/batch_normalization/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "block17/batch_normalization/AssignMovingAvg/read"
  op: "Identity"
  input: "block17/batch_normalization/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block17/batch_normalization/AssignMovingAvg/Sub"
  op: "Sub"
  input: "block17/batch_normalization/AssignMovingAvg/read"
  input: "block17/batch_normalization/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block17/batch_normalization/AssignMovingAvg/Mul"
  op: "Mul"
  input: "block17/batch_normalization/AssignMovingAvg/Sub"
  input: "block17/batch_normalization/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block17/batch_normalization/AssignMovingAvg"
  op: "AssignSub"
  input: "block17/batch_normalization/moving_mean"
  input: "block17/batch_normalization/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "block17/batch_normalization/AssignMovingAvg_1/read"
  op: "Identity"
  input: "block17/batch_normalization/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block17/batch_normalization/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "block17/batch_normalization/AssignMovingAvg_1/read"
  input: "block17/batch_normalization/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block17/batch_normalization/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "block17/batch_normalization/AssignMovingAvg_1/Sub"
  input: "block17/batch_normalization/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block17/batch_normalization/AssignMovingAvg_1"
  op: "AssignSub"
  input: "block17/batch_normalization/moving_variance"
  input: "block17/batch_normalization/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "block17/Relu"
  op: "Relu"
  input: "block17/batch_normalization/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block18/conv18/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/conv18/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "block18/conv18/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/conv18/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.072168782
      }
    }
  }
}
node {
  name: "block18/conv18/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/conv18/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.072168782
      }
    }
  }
}
node {
  name: "block18/conv18/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block18/conv18/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/conv18/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block18/conv18/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block18/conv18/kernel/Initializer/random_uniform/max"
  input: "block18/conv18/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/conv18/kernel"
      }
    }
  }
}
node {
  name: "block18/conv18/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block18/conv18/kernel/Initializer/random_uniform/RandomUniform"
  input: "block18/conv18/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/conv18/kernel"
      }
    }
  }
}
node {
  name: "block18/conv18/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block18/conv18/kernel/Initializer/random_uniform/mul"
  input: "block18/conv18/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/conv18/kernel"
      }
    }
  }
}
node {
  name: "block18/conv18/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/conv18/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block18/conv18/kernel/Assign"
  op: "Assign"
  input: "block18/conv18/kernel"
  input: "block18/conv18/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/conv18/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block18/conv18/kernel/read"
  op: "Identity"
  input: "block18/conv18/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/conv18/kernel"
      }
    }
  }
}
node {
  name: "block18/conv18/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block18/conv18/Conv2D"
  op: "Conv2D"
  input: "block17/Relu"
  input: "block18/conv18/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block18/batch_normalization/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block18/batch_normalization/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block18/batch_normalization/gamma/Assign"
  op: "Assign"
  input: "block18/batch_normalization/gamma"
  input: "block18/batch_normalization/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block18/batch_normalization/gamma/read"
  op: "Identity"
  input: "block18/batch_normalization/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block18/batch_normalization/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block18/batch_normalization/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block18/batch_normalization/beta/Assign"
  op: "Assign"
  input: "block18/batch_normalization/beta"
  input: "block18/batch_normalization/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block18/batch_normalization/beta/read"
  op: "Identity"
  input: "block18/batch_normalization/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block18/batch_normalization/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block18/batch_normalization/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block18/batch_normalization/moving_mean/Assign"
  op: "Assign"
  input: "block18/batch_normalization/moving_mean"
  input: "block18/batch_normalization/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block18/batch_normalization/moving_mean/read"
  op: "Identity"
  input: "block18/batch_normalization/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block18/batch_normalization/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block18/batch_normalization/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block18/batch_normalization/moving_variance/Assign"
  op: "Assign"
  input: "block18/batch_normalization/moving_variance"
  input: "block18/batch_normalization/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block18/batch_normalization/moving_variance/read"
  op: "Identity"
  input: "block18/batch_normalization/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block18/batch_normalization/cond/Switch"
  op: "Switch"
  input: "is_training"
  input: "is_training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block18/batch_normalization/cond/switch_t"
  op: "Identity"
  input: "block18/batch_normalization/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block18/batch_normalization/cond/switch_f"
  op: "Identity"
  input: "block18/batch_normalization/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block18/batch_normalization/cond/pred_id"
  op: "Identity"
  input: "is_training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block18/batch_normalization/cond/Const"
  op: "Const"
  input: "^block18/batch_normalization/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block18/batch_normalization/cond/Const_1"
  op: "Const"
  input: "^block18/batch_normalization/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block18/batch_normalization/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "block18/conv18/Conv2D"
  input: "block18/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/conv18/Conv2D"
      }
    }
  }
}
node {
  name: "block18/batch_normalization/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "block18/batch_normalization/gamma/read"
  input: "block18/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block18/batch_normalization/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "block18/batch_normalization/beta/read"
  input: "block18/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block18/batch_normalization/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "block18/batch_normalization/cond/FusedBatchNorm/Switch:1"
  input: "block18/batch_normalization/cond/FusedBatchNorm/Switch_1:1"
  input: "block18/batch_normalization/cond/FusedBatchNorm/Switch_2:1"
  input: "block18/batch_normalization/cond/Const"
  input: "block18/batch_normalization/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block18/batch_normalization/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "block18/conv18/Conv2D"
  input: "block18/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/conv18/Conv2D"
      }
    }
  }
}
node {
  name: "block18/batch_normalization/cond/FusedBatchNorm_1/Switch_1"
  op: "Switch"
  input: "block18/batch_normalization/gamma/read"
  input: "block18/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block18/batch_normalization/cond/FusedBatchNorm_1/Switch_2"
  op: "Switch"
  input: "block18/batch_normalization/beta/read"
  input: "block18/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block18/batch_normalization/cond/FusedBatchNorm_1/Switch_3"
  op: "Switch"
  input: "block18/batch_normalization/moving_mean/read"
  input: "block18/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block18/batch_normalization/cond/FusedBatchNorm_1/Switch_4"
  op: "Switch"
  input: "block18/batch_normalization/moving_variance/read"
  input: "block18/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block18/batch_normalization/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "block18/batch_normalization/cond/FusedBatchNorm_1/Switch"
  input: "block18/batch_normalization/cond/FusedBatchNorm_1/Switch_1"
  input: "block18/batch_normalization/cond/FusedBatchNorm_1/Switch_2"
  input: "block18/batch_normalization/cond/FusedBatchNorm_1/Switch_3"
  input: "block18/batch_normalization/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block18/batch_normalization/cond/Merge"
  op: "Merge"
  input: "block18/batch_normalization/cond/FusedBatchNorm_1"
  input: "block18/batch_normalization/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block18/batch_normalization/cond/Merge_1"
  op: "Merge"
  input: "block18/batch_normalization/cond/FusedBatchNorm_1:1"
  input: "block18/batch_normalization/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block18/batch_normalization/cond/Merge_2"
  op: "Merge"
  input: "block18/batch_normalization/cond/FusedBatchNorm_1:2"
  input: "block18/batch_normalization/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block18/batch_normalization/ExpandDims/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0099999998
      }
    }
  }
}
node {
  name: "block18/batch_normalization/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "block18/batch_normalization/ExpandDims"
  op: "ExpandDims"
  input: "block18/batch_normalization/ExpandDims/input"
  input: "block18/batch_normalization/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block18/batch_normalization/ExpandDims_1/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block18/batch_normalization/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "block18/batch_normalization/ExpandDims_1"
  op: "ExpandDims"
  input: "block18/batch_normalization/ExpandDims_1/input"
  input: "block18/batch_normalization/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block18/batch_normalization/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "block18/batch_normalization/Reshape"
  op: "Reshape"
  input: "is_training"
  input: "block18/batch_normalization/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block18/batch_normalization/Select"
  op: "Select"
  input: "block18/batch_normalization/Reshape"
  input: "block18/batch_normalization/ExpandDims"
  input: "block18/batch_normalization/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block18/batch_normalization/Squeeze"
  op: "Squeeze"
  input: "block18/batch_normalization/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "block18/batch_normalization/AssignMovingAvg/read"
  op: "Identity"
  input: "block18/batch_normalization/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block18/batch_normalization/AssignMovingAvg/Sub"
  op: "Sub"
  input: "block18/batch_normalization/AssignMovingAvg/read"
  input: "block18/batch_normalization/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block18/batch_normalization/AssignMovingAvg/Mul"
  op: "Mul"
  input: "block18/batch_normalization/AssignMovingAvg/Sub"
  input: "block18/batch_normalization/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block18/batch_normalization/AssignMovingAvg"
  op: "AssignSub"
  input: "block18/batch_normalization/moving_mean"
  input: "block18/batch_normalization/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "block18/batch_normalization/AssignMovingAvg_1/read"
  op: "Identity"
  input: "block18/batch_normalization/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block18/batch_normalization/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "block18/batch_normalization/AssignMovingAvg_1/read"
  input: "block18/batch_normalization/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block18/batch_normalization/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "block18/batch_normalization/AssignMovingAvg_1/Sub"
  input: "block18/batch_normalization/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block18/batch_normalization/AssignMovingAvg_1"
  op: "AssignSub"
  input: "block18/batch_normalization/moving_variance"
  input: "block18/batch_normalization/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "block18/Relu"
  op: "Relu"
  input: "block18/batch_normalization/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block19/conv19/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/conv19/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "block19/conv19/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/conv19/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.072168782
      }
    }
  }
}
node {
  name: "block19/conv19/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/conv19/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.072168782
      }
    }
  }
}
node {
  name: "block19/conv19/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block19/conv19/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/conv19/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block19/conv19/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block19/conv19/kernel/Initializer/random_uniform/max"
  input: "block19/conv19/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/conv19/kernel"
      }
    }
  }
}
node {
  name: "block19/conv19/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block19/conv19/kernel/Initializer/random_uniform/RandomUniform"
  input: "block19/conv19/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/conv19/kernel"
      }
    }
  }
}
node {
  name: "block19/conv19/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block19/conv19/kernel/Initializer/random_uniform/mul"
  input: "block19/conv19/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/conv19/kernel"
      }
    }
  }
}
node {
  name: "block19/conv19/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/conv19/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block19/conv19/kernel/Assign"
  op: "Assign"
  input: "block19/conv19/kernel"
  input: "block19/conv19/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/conv19/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block19/conv19/kernel/read"
  op: "Identity"
  input: "block19/conv19/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/conv19/kernel"
      }
    }
  }
}
node {
  name: "block19/conv19/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block19/conv19/Conv2D"
  op: "Conv2D"
  input: "block18/Relu"
  input: "block19/conv19/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block19/batch_normalization/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block19/batch_normalization/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block19/batch_normalization/gamma/Assign"
  op: "Assign"
  input: "block19/batch_normalization/gamma"
  input: "block19/batch_normalization/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block19/batch_normalization/gamma/read"
  op: "Identity"
  input: "block19/batch_normalization/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block19/batch_normalization/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block19/batch_normalization/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block19/batch_normalization/beta/Assign"
  op: "Assign"
  input: "block19/batch_normalization/beta"
  input: "block19/batch_normalization/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block19/batch_normalization/beta/read"
  op: "Identity"
  input: "block19/batch_normalization/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block19/batch_normalization/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block19/batch_normalization/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block19/batch_normalization/moving_mean/Assign"
  op: "Assign"
  input: "block19/batch_normalization/moving_mean"
  input: "block19/batch_normalization/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block19/batch_normalization/moving_mean/read"
  op: "Identity"
  input: "block19/batch_normalization/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block19/batch_normalization/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block19/batch_normalization/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block19/batch_normalization/moving_variance/Assign"
  op: "Assign"
  input: "block19/batch_normalization/moving_variance"
  input: "block19/batch_normalization/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block19/batch_normalization/moving_variance/read"
  op: "Identity"
  input: "block19/batch_normalization/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block19/batch_normalization/cond/Switch"
  op: "Switch"
  input: "is_training"
  input: "is_training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block19/batch_normalization/cond/switch_t"
  op: "Identity"
  input: "block19/batch_normalization/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block19/batch_normalization/cond/switch_f"
  op: "Identity"
  input: "block19/batch_normalization/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block19/batch_normalization/cond/pred_id"
  op: "Identity"
  input: "is_training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block19/batch_normalization/cond/Const"
  op: "Const"
  input: "^block19/batch_normalization/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block19/batch_normalization/cond/Const_1"
  op: "Const"
  input: "^block19/batch_normalization/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block19/batch_normalization/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "block19/conv19/Conv2D"
  input: "block19/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/conv19/Conv2D"
      }
    }
  }
}
node {
  name: "block19/batch_normalization/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "block19/batch_normalization/gamma/read"
  input: "block19/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block19/batch_normalization/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "block19/batch_normalization/beta/read"
  input: "block19/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block19/batch_normalization/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "block19/batch_normalization/cond/FusedBatchNorm/Switch:1"
  input: "block19/batch_normalization/cond/FusedBatchNorm/Switch_1:1"
  input: "block19/batch_normalization/cond/FusedBatchNorm/Switch_2:1"
  input: "block19/batch_normalization/cond/Const"
  input: "block19/batch_normalization/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block19/batch_normalization/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "block19/conv19/Conv2D"
  input: "block19/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/conv19/Conv2D"
      }
    }
  }
}
node {
  name: "block19/batch_normalization/cond/FusedBatchNorm_1/Switch_1"
  op: "Switch"
  input: "block19/batch_normalization/gamma/read"
  input: "block19/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block19/batch_normalization/cond/FusedBatchNorm_1/Switch_2"
  op: "Switch"
  input: "block19/batch_normalization/beta/read"
  input: "block19/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block19/batch_normalization/cond/FusedBatchNorm_1/Switch_3"
  op: "Switch"
  input: "block19/batch_normalization/moving_mean/read"
  input: "block19/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block19/batch_normalization/cond/FusedBatchNorm_1/Switch_4"
  op: "Switch"
  input: "block19/batch_normalization/moving_variance/read"
  input: "block19/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block19/batch_normalization/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "block19/batch_normalization/cond/FusedBatchNorm_1/Switch"
  input: "block19/batch_normalization/cond/FusedBatchNorm_1/Switch_1"
  input: "block19/batch_normalization/cond/FusedBatchNorm_1/Switch_2"
  input: "block19/batch_normalization/cond/FusedBatchNorm_1/Switch_3"
  input: "block19/batch_normalization/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block19/batch_normalization/cond/Merge"
  op: "Merge"
  input: "block19/batch_normalization/cond/FusedBatchNorm_1"
  input: "block19/batch_normalization/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block19/batch_normalization/cond/Merge_1"
  op: "Merge"
  input: "block19/batch_normalization/cond/FusedBatchNorm_1:1"
  input: "block19/batch_normalization/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block19/batch_normalization/cond/Merge_2"
  op: "Merge"
  input: "block19/batch_normalization/cond/FusedBatchNorm_1:2"
  input: "block19/batch_normalization/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block19/batch_normalization/ExpandDims/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0099999998
      }
    }
  }
}
node {
  name: "block19/batch_normalization/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "block19/batch_normalization/ExpandDims"
  op: "ExpandDims"
  input: "block19/batch_normalization/ExpandDims/input"
  input: "block19/batch_normalization/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block19/batch_normalization/ExpandDims_1/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block19/batch_normalization/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "block19/batch_normalization/ExpandDims_1"
  op: "ExpandDims"
  input: "block19/batch_normalization/ExpandDims_1/input"
  input: "block19/batch_normalization/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block19/batch_normalization/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "block19/batch_normalization/Reshape"
  op: "Reshape"
  input: "is_training"
  input: "block19/batch_normalization/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block19/batch_normalization/Select"
  op: "Select"
  input: "block19/batch_normalization/Reshape"
  input: "block19/batch_normalization/ExpandDims"
  input: "block19/batch_normalization/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block19/batch_normalization/Squeeze"
  op: "Squeeze"
  input: "block19/batch_normalization/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "block19/batch_normalization/AssignMovingAvg/read"
  op: "Identity"
  input: "block19/batch_normalization/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block19/batch_normalization/AssignMovingAvg/Sub"
  op: "Sub"
  input: "block19/batch_normalization/AssignMovingAvg/read"
  input: "block19/batch_normalization/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block19/batch_normalization/AssignMovingAvg/Mul"
  op: "Mul"
  input: "block19/batch_normalization/AssignMovingAvg/Sub"
  input: "block19/batch_normalization/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "block19/batch_normalization/AssignMovingAvg"
  op: "AssignSub"
  input: "block19/batch_normalization/moving_mean"
  input: "block19/batch_normalization/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "block19/batch_normalization/AssignMovingAvg_1/read"
  op: "Identity"
  input: "block19/batch_normalization/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block19/batch_normalization/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "block19/batch_normalization/AssignMovingAvg_1/read"
  input: "block19/batch_normalization/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block19/batch_normalization/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "block19/batch_normalization/AssignMovingAvg_1/Sub"
  input: "block19/batch_normalization/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "block19/batch_normalization/AssignMovingAvg_1"
  op: "AssignSub"
  input: "block19/batch_normalization/moving_variance"
  input: "block19/batch_normalization/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "block19/Relu"
  op: "Relu"
  input: "block19/batch_normalization/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block17/conv2d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/conv2d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "block17/conv2d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/conv2d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.099750936
      }
    }
  }
}
node {
  name: "block17/conv2d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/conv2d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.099750936
      }
    }
  }
}
node {
  name: "block17/conv2d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block17/conv2d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/conv2d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block17/conv2d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block17/conv2d/kernel/Initializer/random_uniform/max"
  input: "block17/conv2d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/conv2d/kernel"
      }
    }
  }
}
node {
  name: "block17/conv2d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block17/conv2d/kernel/Initializer/random_uniform/RandomUniform"
  input: "block17/conv2d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/conv2d/kernel"
      }
    }
  }
}
node {
  name: "block17/conv2d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block17/conv2d/kernel/Initializer/random_uniform/mul"
  input: "block17/conv2d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/conv2d/kernel"
      }
    }
  }
}
node {
  name: "block17/conv2d/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/conv2d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block17/conv2d/kernel/Assign"
  op: "Assign"
  input: "block17/conv2d/kernel"
  input: "block17/conv2d/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/conv2d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block17/conv2d/kernel/read"
  op: "Identity"
  input: "block17/conv2d/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/conv2d/kernel"
      }
    }
  }
}
node {
  name: "block17_1/conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block17_1/conv2d/Conv2D"
  op: "Conv2D"
  input: "block19/Relu"
  input: "block17/conv2d/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "sub"
  op: "Sub"
  input: "Placeholder"
  input: "block17_1/conv2d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_1"
  op: "Sub"
  input: "clean_image"
  input: "sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss"
  op: "L2Loss"
  input: "sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0078125
      }
    }
  }
}
node {
  name: "mul"
  op: "Mul"
  input: "mul/x"
  input: "L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "learning_rate"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "tensors/component_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 800
          }
        }
        string_val: "./data/train/noisy/0284.png"
        string_val: "./data/train/original/0284.png"
        string_val: "./data/train/noisy/0161.png"
        string_val: "./data/train/original/0161.png"
        string_val: "./data/train/noisy/0170.png"
        string_val: "./data/train/original/0170.png"
        string_val: "./data/train/noisy/0350.png"
        string_val: "./data/train/original/0350.png"
        string_val: "./data/train/noisy/0252.png"
        string_val: "./data/train/original/0252.png"
        string_val: "./data/train/noisy/0317.png"
        string_val: "./data/train/original/0317.png"
        string_val: "./data/train/noisy/0083.png"
        string_val: "./data/train/original/0083.png"
        string_val: "./data/train/noisy/0215.png"
        string_val: "./data/train/original/0215.png"
        string_val: "./data/train/noisy/0237.png"
        string_val: "./data/train/original/0237.png"
        string_val: "./data/train/noisy/0046.png"
        string_val: "./data/train/original/0046.png"
        string_val: "./data/train/noisy/0281.png"
        string_val: "./data/train/original/0281.png"
        string_val: "./data/train/noisy/0376.png"
        string_val: "./data/train/original/0376.png"
        string_val: "./data/train/noisy/0156.png"
        string_val: "./data/train/original/0156.png"
        string_val: "./data/train/noisy/0374.png"
        string_val: "./data/train/original/0374.png"
        string_val: "./data/train/noisy/0361.png"
        string_val: "./data/train/original/0361.png"
        string_val: "./data/train/noisy/0298.png"
        string_val: "./data/train/original/0298.png"
        string_val: "./data/train/noisy/0224.png"
        string_val: "./data/train/original/0224.png"
        string_val: "./data/train/noisy/0335.png"
        string_val: "./data/train/original/0335.png"
        string_val: "./data/train/noisy/0328.png"
        string_val: "./data/train/original/0328.png"
        string_val: "./data/train/noisy/0032.png"
        string_val: "./data/train/original/0032.png"
        string_val: "./data/train/noisy/0388.png"
        string_val: "./data/train/original/0388.png"
        string_val: "./data/train/noisy/0136.png"
        string_val: "./data/train/original/0136.png"
        string_val: "./data/train/noisy/0233.png"
        string_val: "./data/train/original/0233.png"
        string_val: "./data/train/noisy/0266.png"
        string_val: "./data/train/original/0266.png"
        string_val: "./data/train/noisy/0187.png"
        string_val: "./data/train/original/0187.png"
        string_val: "./data/train/noisy/0259.png"
        string_val: "./data/train/original/0259.png"
        string_val: "./data/train/noisy/0337.png"
        string_val: "./data/train/original/0337.png"
        string_val: "./data/train/noisy/0057.png"
        string_val: "./data/train/original/0057.png"
        string_val: "./data/train/noisy/0290.png"
        string_val: "./data/train/original/0290.png"
        string_val: "./data/train/noisy/0291.png"
        string_val: "./data/train/original/0291.png"
        string_val: "./data/train/noisy/0070.png"
        string_val: "./data/train/original/0070.png"
        string_val: "./data/train/noisy/0078.png"
        string_val: "./data/train/original/0078.png"
        string_val: "./data/train/noisy/0141.png"
        string_val: "./data/train/original/0141.png"
        string_val: "./data/train/noisy/0270.png"
        string_val: "./data/train/original/0270.png"
        string_val: "./data/train/noisy/0041.png"
        string_val: "./data/train/original/0041.png"
        string_val: "./data/train/noisy/0061.png"
        string_val: "./data/train/original/0061.png"
        string_val: "./data/train/noisy/0387.png"
        string_val: "./data/train/original/0387.png"
        string_val: "./data/train/noisy/0212.png"
        string_val: "./data/train/original/0212.png"
        string_val: "./data/train/noisy/0030.png"
        string_val: "./data/train/original/0030.png"
        string_val: "./data/train/noisy/0157.png"
        string_val: "./data/train/original/0157.png"
        string_val: "./data/train/noisy/0223.png"
        string_val: "./data/train/original/0223.png"
        string_val: "./data/train/noisy/0200.png"
        string_val: "./data/train/original/0200.png"
        string_val: "./data/train/noisy/0081.png"
        string_val: "./data/train/original/0081.png"
        string_val: "./data/train/noisy/0370.png"
        string_val: "./data/train/original/0370.png"
        string_val: "./data/train/noisy/0106.png"
        string_val: "./data/train/original/0106.png"
        string_val: "./data/train/noisy/0147.png"
        string_val: "./data/train/original/0147.png"
        string_val: "./data/train/noisy/0035.png"
        string_val: "./data/train/original/0035.png"
        string_val: "./data/train/noisy/0133.png"
        string_val: "./data/train/original/0133.png"
        string_val: "./data/train/noisy/0398.png"
        string_val: "./data/train/original/0398.png"
        string_val: "./data/train/noisy/0118.png"
        string_val: "./data/train/original/0118.png"
        string_val: "./data/train/noisy/0154.png"
        string_val: "./data/train/original/0154.png"
        string_val: "./data/train/noisy/0325.png"
        string_val: "./data/train/original/0325.png"
        string_val: "./data/train/noisy/0088.png"
        string_val: "./data/train/original/0088.png"
        string_val: "./data/train/noisy/0064.png"
        string_val: "./data/train/original/0064.png"
        string_val: "./data/train/noisy/0213.png"
        string_val: "./data/train/original/0213.png"
        string_val: "./data/train/noisy/0385.png"
        string_val: "./data/train/original/0385.png"
        string_val: "./data/train/noisy/0125.png"
        string_val: "./data/train/original/0125.png"
        string_val: "./data/train/noisy/0218.png"
        string_val: "./data/train/original/0218.png"
        string_val: "./data/train/noisy/0393.png"
        string_val: "./data/train/original/0393.png"
        string_val: "./data/train/noisy/0265.png"
        string_val: "./data/train/original/0265.png"
        string_val: "./data/train/noisy/0013.png"
        string_val: "./data/train/original/0013.png"
        string_val: "./data/train/noisy/0168.png"
        string_val: "./data/train/original/0168.png"
        string_val: "./data/train/noisy/0196.png"
        string_val: "./data/train/original/0196.png"
        string_val: "./data/train/noisy/0110.png"
        string_val: "./data/train/original/0110.png"
        string_val: "./data/train/noisy/0305.png"
        string_val: "./data/train/original/0305.png"
        string_val: "./data/train/noisy/0068.png"
        string_val: "./data/train/original/0068.png"
        string_val: "./data/train/noisy/0069.png"
        string_val: "./data/train/original/0069.png"
        string_val: "./data/train/noisy/0322.png"
        string_val: "./data/train/original/0322.png"
        string_val: "./data/train/noisy/0039.png"
        string_val: "./data/train/original/0039.png"
        string_val: "./data/train/noisy/0277.png"
        string_val: "./data/train/original/0277.png"
        string_val: "./data/train/noisy/0176.png"
        string_val: "./data/train/original/0176.png"
        string_val: "./data/train/noisy/0111.png"
        string_val: "./data/train/original/0111.png"
        string_val: "./data/train/noisy/0219.png"
        string_val: "./data/train/original/0219.png"
        string_val: "./data/train/noisy/0208.png"
        string_val: "./data/train/original/0208.png"
        string_val: "./data/train/noisy/0085.png"
        string_val: "./data/train/original/0085.png"
        string_val: "./data/train/noisy/0095.png"
        string_val: "./data/train/original/0095.png"
        string_val: "./data/train/noisy/0054.png"
        string_val: "./data/train/original/0054.png"
        string_val: "./data/train/noisy/0229.png"
        string_val: "./data/train/original/0229.png"
        string_val: "./data/train/noisy/0327.png"
        string_val: "./data/train/original/0327.png"
        string_val: "./data/train/noisy/0073.png"
        string_val: "./data/train/original/0073.png"
        string_val: "./data/train/noisy/0269.png"
        string_val: "./data/train/original/0269.png"
        string_val: "./data/train/noisy/0048.png"
        string_val: "./data/train/original/0048.png"
        string_val: "./data/train/noisy/0097.png"
        string_val: "./data/train/original/0097.png"
        string_val: "./data/train/noisy/0142.png"
        string_val: "./data/train/original/0142.png"
        string_val: "./data/train/noisy/0386.png"
        string_val: "./data/train/original/0386.png"
        string_val: "./data/train/noisy/0204.png"
        string_val: "./data/train/original/0204.png"
        string_val: "./data/train/noisy/0332.png"
        string_val: "./data/train/original/0332.png"
        string_val: "./data/train/noisy/0263.png"
        string_val: "./data/train/original/0263.png"
        string_val: "./data/train/noisy/0311.png"
        string_val: "./data/train/original/0311.png"
        string_val: "./data/train/noisy/0167.png"
        string_val: "./data/train/original/0167.png"
        string_val: "./data/train/noisy/0144.png"
        string_val: "./data/train/original/0144.png"
        string_val: "./data/train/noisy/0023.png"
        string_val: "./data/train/original/0023.png"
        string_val: "./data/train/noisy/0172.png"
        string_val: "./data/train/original/0172.png"
        string_val: "./data/train/noisy/0086.png"
        string_val: "./data/train/original/0086.png"
        string_val: "./data/train/noisy/0272.png"
        string_val: "./data/train/original/0272.png"
        string_val: "./data/train/noisy/0383.png"
        string_val: "./data/train/original/0383.png"
        string_val: "./data/train/noisy/0225.png"
        string_val: "./data/train/original/0225.png"
        string_val: "./data/train/noisy/0394.png"
        string_val: "./data/train/original/0394.png"
        string_val: "./data/train/noisy/0115.png"
        string_val: "./data/train/original/0115.png"
        string_val: "./data/train/noisy/0378.png"
        string_val: "./data/train/original/0378.png"
        string_val: "./data/train/noisy/0267.png"
        string_val: "./data/train/original/0267.png"
        string_val: "./data/train/noisy/0002.png"
        string_val: "./data/train/original/0002.png"
        string_val: "./data/train/noisy/0302.png"
        string_val: "./data/train/original/0302.png"
        string_val: "./data/train/noisy/0163.png"
        string_val: "./data/train/original/0163.png"
        string_val: "./data/train/noisy/0091.png"
        string_val: "./data/train/original/0091.png"
        string_val: "./data/train/noisy/0341.png"
        string_val: "./data/train/original/0341.png"
        string_val: "./data/train/noisy/0055.png"
        string_val: "./data/train/original/0055.png"
        string_val: "./data/train/noisy/0205.png"
        string_val: "./data/train/original/0205.png"
        string_val: "./data/train/noisy/0098.png"
        string_val: "./data/train/original/0098.png"
        string_val: "./data/train/noisy/0320.png"
        string_val: "./data/train/original/0320.png"
        string_val: "./data/train/noisy/0174.png"
        string_val: "./data/train/original/0174.png"
        string_val: "./data/train/noisy/0364.png"
        string_val: "./data/train/original/0364.png"
        string_val: "./data/train/noisy/0166.png"
        string_val: "./data/train/original/0166.png"
        string_val: "./data/train/noisy/0034.png"
        string_val: "./data/train/original/0034.png"
        string_val: "./data/train/noisy/0239.png"
        string_val: "./data/train/original/0239.png"
        string_val: "./data/train/noisy/0094.png"
        string_val: "./data/train/original/0094.png"
        string_val: "./data/train/noisy/0138.png"
        string_val: "./data/train/original/0138.png"
        string_val: "./data/train/noisy/0038.png"
        string_val: "./data/train/original/0038.png"
        string_val: "./data/train/noisy/0340.png"
        string_val: "./data/train/original/0340.png"
        string_val: "./data/train/noisy/0036.png"
        string_val: "./data/train/original/0036.png"
        string_val: "./data/train/noisy/0321.png"
        string_val: "./data/train/original/0321.png"
        string_val: "./data/train/noisy/0314.png"
        string_val: "./data/train/original/0314.png"
        string_val: "./data/train/noisy/0324.png"
        string_val: "./data/train/original/0324.png"
        string_val: "./data/train/noisy/0256.png"
        string_val: "./data/train/original/0256.png"
        string_val: "./data/train/noisy/0207.png"
        string_val: "./data/train/original/0207.png"
        string_val: "./data/train/noisy/0043.png"
        string_val: "./data/train/original/0043.png"
        string_val: "./data/train/noisy/0356.png"
        string_val: "./data/train/original/0356.png"
        string_val: "./data/train/noisy/0234.png"
        string_val: "./data/train/original/0234.png"
        string_val: "./data/train/noisy/0062.png"
        string_val: "./data/train/original/0062.png"
        string_val: "./data/train/noisy/0188.png"
        string_val: "./data/train/original/0188.png"
        string_val: "./data/train/noisy/0279.png"
        string_val: "./data/train/original/0279.png"
        string_val: "./data/train/noisy/0143.png"
        string_val: "./data/train/original/0143.png"
        string_val: "./data/train/noisy/0228.png"
        string_val: "./data/train/original/0228.png"
        string_val: "./data/train/noisy/0009.png"
        string_val: "./data/train/original/0009.png"
        string_val: "./data/train/noisy/0375.png"
        string_val: "./data/train/original/0375.png"
        string_val: "./data/train/noisy/0107.png"
        string_val: "./data/train/original/0107.png"
        string_val: "./data/train/noisy/0120.png"
        string_val: "./data/train/original/0120.png"
        string_val: "./data/train/noisy/0113.png"
        string_val: "./data/train/original/0113.png"
        string_val: "./data/train/noisy/0025.png"
        string_val: "./data/train/original/0025.png"
        string_val: "./data/train/noisy/0351.png"
        string_val: "./data/train/original/0351.png"
        string_val: "./data/train/noisy/0276.png"
        string_val: "./data/train/original/0276.png"
        string_val: "./data/train/noisy/0343.png"
        string_val: "./data/train/original/0343.png"
        string_val: "./data/train/noisy/0000.png"
        string_val: "./data/train/original/0000.png"
        string_val: "./data/train/noisy/0202.png"
        string_val: "./data/train/original/0202.png"
        string_val: "./data/train/noisy/0288.png"
        string_val: "./data/train/original/0288.png"
        string_val: "./data/train/noisy/0300.png"
        string_val: "./data/train/original/0300.png"
        string_val: "./data/train/noisy/0381.png"
        string_val: "./data/train/original/0381.png"
        string_val: "./data/train/noisy/0271.png"
        string_val: "./data/train/original/0271.png"
        string_val: "./data/train/noisy/0021.png"
        string_val: "./data/train/original/0021.png"
        string_val: "./data/train/noisy/0180.png"
        string_val: "./data/train/original/0180.png"
        string_val: "./data/train/noisy/0301.png"
        string_val: "./data/train/original/0301.png"
        string_val: "./data/train/noisy/0151.png"
        string_val: "./data/train/original/0151.png"
        string_val: "./data/train/noisy/0058.png"
        string_val: "./data/train/original/0058.png"
        string_val: "./data/train/noisy/0331.png"
        string_val: "./data/train/original/0331.png"
        string_val: "./data/train/noisy/0338.png"
        string_val: "./data/train/original/0338.png"
        string_val: "./data/train/noisy/0100.png"
        string_val: "./data/train/original/0100.png"
        string_val: "./data/train/noisy/0318.png"
        string_val: "./data/train/original/0318.png"
        string_val: "./data/train/noisy/0360.png"
        string_val: "./data/train/original/0360.png"
        string_val: "./data/train/noisy/0245.png"
        string_val: "./data/train/original/0245.png"
        string_val: "./data/train/noisy/0326.png"
        string_val: "./data/train/original/0326.png"
        string_val: "./data/train/noisy/0333.png"
        string_val: "./data/train/original/0333.png"
        string_val: "./data/train/noisy/0175.png"
        string_val: "./data/train/original/0175.png"
        string_val: "./data/train/noisy/0164.png"
        string_val: "./data/train/original/0164.png"
        string_val: "./data/train/noisy/0082.png"
        string_val: "./data/train/original/0082.png"
        string_val: "./data/train/noisy/0230.png"
        string_val: "./data/train/original/0230.png"
        string_val: "./data/train/noisy/0119.png"
        string_val: "./data/train/original/0119.png"
        string_val: "./data/train/noisy/0093.png"
        string_val: "./data/train/original/0093.png"
        string_val: "./data/train/noisy/0354.png"
        string_val: "./data/train/original/0354.png"
        string_val: "./data/train/noisy/0122.png"
        string_val: "./data/train/original/0122.png"
        string_val: "./data/train/noisy/0339.png"
        string_val: "./data/train/original/0339.png"
        string_val: "./data/train/noisy/0355.png"
        string_val: "./data/train/original/0355.png"
        string_val: "./data/train/noisy/0203.png"
        string_val: "./data/train/original/0203.png"
        string_val: "./data/train/noisy/0077.png"
        string_val: "./data/train/original/0077.png"
        string_val: "./data/train/noisy/0116.png"
        string_val: "./data/train/original/0116.png"
        string_val: "./data/train/noisy/0090.png"
        string_val: "./data/train/original/0090.png"
        string_val: "./data/train/noisy/0248.png"
        string_val: "./data/train/original/0248.png"
        string_val: "./data/train/noisy/0104.png"
        string_val: "./data/train/original/0104.png"
        string_val: "./data/train/noisy/0319.png"
        string_val: "./data/train/original/0319.png"
        string_val: "./data/train/noisy/0274.png"
        string_val: "./data/train/original/0274.png"
        string_val: "./data/train/noisy/0186.png"
        string_val: "./data/train/original/0186.png"
        string_val: "./data/train/noisy/0357.png"
        string_val: "./data/train/original/0357.png"
        string_val: "./data/train/noisy/0365.png"
        string_val: "./data/train/original/0365.png"
        string_val: "./data/train/noisy/0367.png"
        string_val: "./data/train/original/0367.png"
        string_val: "./data/train/noisy/0189.png"
        string_val: "./data/train/original/0189.png"
        string_val: "./data/train/noisy/0304.png"
        string_val: "./data/train/original/0304.png"
        string_val: "./data/train/noisy/0258.png"
        string_val: "./data/train/original/0258.png"
        string_val: "./data/train/noisy/0121.png"
        string_val: "./data/train/original/0121.png"
        string_val: "./data/train/noisy/0372.png"
        string_val: "./data/train/original/0372.png"
        string_val: "./data/train/noisy/0309.png"
        string_val: "./data/train/original/0309.png"
        string_val: "./data/train/noisy/0199.png"
        string_val: "./data/train/original/0199.png"
        string_val: "./data/train/noisy/0014.png"
        string_val: "./data/train/original/0014.png"
        string_val: "./data/train/noisy/0345.png"
        string_val: "./data/train/original/0345.png"
        string_val: "./data/train/noisy/0066.png"
        string_val: "./data/train/original/0066.png"
        string_val: "./data/train/noisy/0040.png"
        string_val: "./data/train/original/0040.png"
        string_val: "./data/train/noisy/0016.png"
        string_val: "./data/train/original/0016.png"
        string_val: "./data/train/noisy/0349.png"
        string_val: "./data/train/original/0349.png"
        string_val: "./data/train/noisy/0029.png"
        string_val: "./data/train/original/0029.png"
        string_val: "./data/train/noisy/0017.png"
        string_val: "./data/train/original/0017.png"
        string_val: "./data/train/noisy/0152.png"
        string_val: "./data/train/original/0152.png"
        string_val: "./data/train/noisy/0377.png"
        string_val: "./data/train/original/0377.png"
        string_val: "./data/train/noisy/0191.png"
        string_val: "./data/train/original/0191.png"
        string_val: "./data/train/noisy/0216.png"
        string_val: "./data/train/original/0216.png"
        string_val: "./data/train/noisy/0101.png"
        string_val: "./data/train/original/0101.png"
        string_val: "./data/train/noisy/0173.png"
        string_val: "./data/train/original/0173.png"
        string_val: "./data/train/noisy/0159.png"
        string_val: "./data/train/original/0159.png"
        string_val: "./data/train/noisy/0222.png"
        string_val: "./data/train/original/0222.png"
        string_val: "./data/train/noisy/0024.png"
        string_val: "./data/train/original/0024.png"
        string_val: "./data/train/noisy/0287.png"
        string_val: "./data/train/original/0287.png"
        string_val: "./data/train/noisy/0210.png"
        string_val: "./data/train/original/0210.png"
        string_val: "./data/train/noisy/0185.png"
        string_val: "./data/train/original/0185.png"
        string_val: "./data/train/noisy/0369.png"
        string_val: "./data/train/original/0369.png"
        string_val: "./data/train/noisy/0194.png"
        string_val: "./data/train/original/0194.png"
        string_val: "./data/train/noisy/0099.png"
        string_val: "./data/train/original/0099.png"
        string_val: "./data/train/noisy/0227.png"
        string_val: "./data/train/original/0227.png"
        string_val: "./data/train/noisy/0139.png"
        string_val: "./data/train/original/0139.png"
        string_val: "./data/train/noisy/0006.png"
        string_val: "./data/train/original/0006.png"
        string_val: "./data/train/noisy/0389.png"
        string_val: "./data/train/original/0389.png"
        string_val: "./data/train/noisy/0050.png"
        string_val: "./data/train/original/0050.png"
        string_val: "./data/train/noisy/0221.png"
        string_val: "./data/train/original/0221.png"
        string_val: "./data/train/noisy/0012.png"
        string_val: "./data/train/original/0012.png"
        string_val: "./data/train/noisy/0026.png"
        string_val: "./data/train/original/0026.png"
        string_val: "./data/train/noisy/0092.png"
        string_val: "./data/train/original/0092.png"
        string_val: "./data/train/noisy/0022.png"
        string_val: "./data/train/original/0022.png"
        string_val: "./data/train/noisy/0129.png"
        string_val: "./data/train/original/0129.png"
        string_val: "./data/train/noisy/0359.png"
        string_val: "./data/train/original/0359.png"
        string_val: "./data/train/noisy/0075.png"
        string_val: "./data/train/original/0075.png"
        string_val: "./data/train/noisy/0181.png"
        string_val: "./data/train/original/0181.png"
        string_val: "./data/train/noisy/0260.png"
        string_val: "./data/train/original/0260.png"
        string_val: "./data/train/noisy/0313.png"
        string_val: "./data/train/original/0313.png"
        string_val: "./data/train/noisy/0134.png"
        string_val: "./data/train/original/0134.png"
        string_val: "./data/train/noisy/0132.png"
        string_val: "./data/train/original/0132.png"
        string_val: "./data/train/noisy/0049.png"
        string_val: "./data/train/original/0049.png"
        string_val: "./data/train/noisy/0273.png"
        string_val: "./data/train/original/0273.png"
        string_val: "./data/train/noisy/0353.png"
        string_val: "./data/train/original/0353.png"
        string_val: "./data/train/noisy/0059.png"
        string_val: "./data/train/original/0059.png"
        string_val: "./data/train/noisy/0004.png"
        string_val: "./data/train/original/0004.png"
        string_val: "./data/train/noisy/0220.png"
        string_val: "./data/train/original/0220.png"
        string_val: "./data/train/noisy/0366.png"
        string_val: "./data/train/original/0366.png"
        string_val: "./data/train/noisy/0160.png"
        string_val: "./data/train/original/0160.png"
        string_val: "./data/train/noisy/0368.png"
        string_val: "./data/train/original/0368.png"
        string_val: "./data/train/noisy/0124.png"
        string_val: "./data/train/original/0124.png"
        string_val: "./data/train/noisy/0214.png"
        string_val: "./data/train/original/0214.png"
        string_val: "./data/train/noisy/0015.png"
        string_val: "./data/train/original/0015.png"
        string_val: "./data/train/noisy/0235.png"
        string_val: "./data/train/original/0235.png"
        string_val: "./data/train/noisy/0280.png"
        string_val: "./data/train/original/0280.png"
        string_val: "./data/train/noisy/0282.png"
        string_val: "./data/train/original/0282.png"
        string_val: "./data/train/noisy/0027.png"
        string_val: "./data/train/original/0027.png"
        string_val: "./data/train/noisy/0391.png"
        string_val: "./data/train/original/0391.png"
        string_val: "./data/train/noisy/0373.png"
        string_val: "./data/train/original/0373.png"
        string_val: "./data/train/noisy/0042.png"
        string_val: "./data/train/original/0042.png"
        string_val: "./data/train/noisy/0232.png"
        string_val: "./data/train/original/0232.png"
        string_val: "./data/train/noisy/0297.png"
        string_val: "./data/train/original/0297.png"
        string_val: "./data/train/noisy/0150.png"
        string_val: "./data/train/original/0150.png"
        string_val: "./data/train/noisy/0312.png"
        string_val: "./data/train/original/0312.png"
        string_val: "./data/train/noisy/0072.png"
        string_val: "./data/train/original/0072.png"
        string_val: "./data/train/noisy/0243.png"
        string_val: "./data/train/original/0243.png"
        string_val: "./data/train/noisy/0045.png"
        string_val: "./data/train/original/0045.png"
        string_val: "./data/train/noisy/0262.png"
        string_val: "./data/train/original/0262.png"
        string_val: "./data/train/noisy/0336.png"
        string_val: "./data/train/original/0336.png"
        string_val: "./data/train/noisy/0193.png"
        string_val: "./data/train/original/0193.png"
        string_val: "./data/train/noisy/0347.png"
        string_val: "./data/train/original/0347.png"
        string_val: "./data/train/noisy/0231.png"
        string_val: "./data/train/original/0231.png"
        string_val: "./data/train/noisy/0127.png"
        string_val: "./data/train/original/0127.png"
        string_val: "./data/train/noisy/0251.png"
        string_val: "./data/train/original/0251.png"
        string_val: "./data/train/noisy/0182.png"
        string_val: "./data/train/original/0182.png"
        string_val: "./data/train/noisy/0137.png"
        string_val: "./data/train/original/0137.png"
        string_val: "./data/train/noisy/0001.png"
        string_val: "./data/train/original/0001.png"
        string_val: "./data/train/noisy/0053.png"
        string_val: "./data/train/original/0053.png"
        string_val: "./data/train/noisy/0084.png"
        string_val: "./data/train/original/0084.png"
        string_val: "./data/train/noisy/0244.png"
        string_val: "./data/train/original/0244.png"
        string_val: "./data/train/noisy/0010.png"
        string_val: "./data/train/original/0010.png"
        string_val: "./data/train/noisy/0308.png"
        string_val: "./data/train/original/0308.png"
        string_val: "./data/train/noisy/0257.png"
        string_val: "./data/train/original/0257.png"
        string_val: "./data/train/noisy/0003.png"
        string_val: "./data/train/original/0003.png"
        string_val: "./data/train/noisy/0044.png"
        string_val: "./data/train/original/0044.png"
        string_val: "./data/train/noisy/0310.png"
        string_val: "./data/train/original/0310.png"
        string_val: "./data/train/noisy/0278.png"
        string_val: "./data/train/original/0278.png"
        string_val: "./data/train/noisy/0379.png"
        string_val: "./data/train/original/0379.png"
        string_val: "./data/train/noisy/0296.png"
        string_val: "./data/train/original/0296.png"
        string_val: "./data/train/noisy/0344.png"
        string_val: "./data/train/original/0344.png"
        string_val: "./data/train/noisy/0096.png"
        string_val: "./data/train/original/0096.png"
        string_val: "./data/train/noisy/0020.png"
        string_val: "./data/train/original/0020.png"
        string_val: "./data/train/noisy/0285.png"
        string_val: "./data/train/original/0285.png"
        string_val: "./data/train/noisy/0117.png"
        string_val: "./data/train/original/0117.png"
        string_val: "./data/train/noisy/0362.png"
        string_val: "./data/train/original/0362.png"
        string_val: "./data/train/noisy/0123.png"
        string_val: "./data/train/original/0123.png"
        string_val: "./data/train/noisy/0033.png"
        string_val: "./data/train/original/0033.png"
        string_val: "./data/train/noisy/0169.png"
        string_val: "./data/train/original/0169.png"
        string_val: "./data/train/noisy/0307.png"
        string_val: "./data/train/original/0307.png"
        string_val: "./data/train/noisy/0211.png"
        string_val: "./data/train/original/0211.png"
        string_val: "./data/train/noisy/0065.png"
        string_val: "./data/train/original/0065.png"
        string_val: "./data/train/noisy/0052.png"
        string_val: "./data/train/original/0052.png"
        string_val: "./data/train/noisy/0171.png"
        string_val: "./data/train/original/0171.png"
        string_val: "./data/train/noisy/0217.png"
        string_val: "./data/train/original/0217.png"
        string_val: "./data/train/noisy/0177.png"
        string_val: "./data/train/original/0177.png"
        string_val: "./data/train/noisy/0334.png"
        string_val: "./data/train/original/0334.png"
        string_val: "./data/train/noisy/0130.png"
        string_val: "./data/train/original/0130.png"
        string_val: "./data/train/noisy/0392.png"
        string_val: "./data/train/original/0392.png"
        string_val: "./data/train/noisy/0261.png"
        string_val: "./data/train/original/0261.png"
        string_val: "./data/train/noisy/0114.png"
        string_val: "./data/train/original/0114.png"
        string_val: "./data/train/noisy/0397.png"
        string_val: "./data/train/original/0397.png"
        string_val: "./data/train/noisy/0399.png"
        string_val: "./data/train/original/0399.png"
        string_val: "./data/train/noisy/0056.png"
        string_val: "./data/train/original/0056.png"
        string_val: "./data/train/noisy/0254.png"
        string_val: "./data/train/original/0254.png"
        string_val: "./data/train/noisy/0179.png"
        string_val: "./data/train/original/0179.png"
        string_val: "./data/train/noisy/0102.png"
        string_val: "./data/train/original/0102.png"
        string_val: "./data/train/noisy/0007.png"
        string_val: "./data/train/original/0007.png"
        string_val: "./data/train/noisy/0109.png"
        string_val: "./data/train/original/0109.png"
        string_val: "./data/train/noisy/0112.png"
        string_val: "./data/train/original/0112.png"
        string_val: "./data/train/noisy/0209.png"
        string_val: "./data/train/original/0209.png"
        string_val: "./data/train/noisy/0108.png"
        string_val: "./data/train/original/0108.png"
        string_val: "./data/train/noisy/0241.png"
        string_val: "./data/train/original/0241.png"
        string_val: "./data/train/noisy/0089.png"
        string_val: "./data/train/original/0089.png"
        string_val: "./data/train/noisy/0047.png"
        string_val: "./data/train/original/0047.png"
        string_val: "./data/train/noisy/0255.png"
        string_val: "./data/train/original/0255.png"
        string_val: "./data/train/noisy/0031.png"
        string_val: "./data/train/original/0031.png"
        string_val: "./data/train/noisy/0158.png"
        string_val: "./data/train/original/0158.png"
        string_val: "./data/train/noisy/0294.png"
        string_val: "./data/train/original/0294.png"
        string_val: "./data/train/noisy/0063.png"
        string_val: "./data/train/original/0063.png"
        string_val: "./data/train/noisy/0195.png"
        string_val: "./data/train/original/0195.png"
        string_val: "./data/train/noisy/0352.png"
        string_val: "./data/train/original/0352.png"
        string_val: "./data/train/noisy/0067.png"
        string_val: "./data/train/original/0067.png"
        string_val: "./data/train/noisy/0226.png"
        string_val: "./data/train/original/0226.png"
        string_val: "./data/train/noisy/0268.png"
        string_val: "./data/train/original/0268.png"
        string_val: "./data/train/noisy/0019.png"
        string_val: "./data/train/original/0019.png"
        string_val: "./data/train/noisy/0087.png"
        string_val: "./data/train/original/0087.png"
        string_val: "./data/train/noisy/0315.png"
        string_val: "./data/train/original/0315.png"
        string_val: "./data/train/noisy/0293.png"
        string_val: "./data/train/original/0293.png"
        string_val: "./data/train/noisy/0162.png"
        string_val: "./data/train/original/0162.png"
        string_val: "./data/train/noisy/0135.png"
        string_val: "./data/train/original/0135.png"
        string_val: "./data/train/noisy/0346.png"
        string_val: "./data/train/original/0346.png"
        string_val: "./data/train/noisy/0105.png"
        string_val: "./data/train/original/0105.png"
        string_val: "./data/train/noisy/0206.png"
        string_val: "./data/train/original/0206.png"
        string_val: "./data/train/noisy/0192.png"
        string_val: "./data/train/original/0192.png"
        string_val: "./data/train/noisy/0249.png"
        string_val: "./data/train/original/0249.png"
        string_val: "./data/train/noisy/0330.png"
        string_val: "./data/train/original/0330.png"
        string_val: "./data/train/noisy/0264.png"
        string_val: "./data/train/original/0264.png"
        string_val: "./data/train/noisy/0342.png"
        string_val: "./data/train/original/0342.png"
        string_val: "./data/train/noisy/0153.png"
        string_val: "./data/train/original/0153.png"
        string_val: "./data/train/noisy/0011.png"
        string_val: "./data/train/original/0011.png"
        string_val: "./data/train/noisy/0005.png"
        string_val: "./data/train/original/0005.png"
        string_val: "./data/train/noisy/0236.png"
        string_val: "./data/train/original/0236.png"
        string_val: "./data/train/noisy/0382.png"
        string_val: "./data/train/original/0382.png"
        string_val: "./data/train/noisy/0246.png"
        string_val: "./data/train/original/0246.png"
        string_val: "./data/train/noisy/0348.png"
        string_val: "./data/train/original/0348.png"
        string_val: "./data/train/noisy/0145.png"
        string_val: "./data/train/original/0145.png"
        string_val: "./data/train/noisy/0155.png"
        string_val: "./data/train/original/0155.png"
        string_val: "./data/train/noisy/0190.png"
        string_val: "./data/train/original/0190.png"
        string_val: "./data/train/noisy/0250.png"
        string_val: "./data/train/original/0250.png"
        string_val: "./data/train/noisy/0292.png"
        string_val: "./data/train/original/0292.png"
        string_val: "./data/train/noisy/0028.png"
        string_val: "./data/train/original/0028.png"
        string_val: "./data/train/noisy/0201.png"
        string_val: "./data/train/original/0201.png"
        string_val: "./data/train/noisy/0140.png"
        string_val: "./data/train/original/0140.png"
        string_val: "./data/train/noisy/0329.png"
        string_val: "./data/train/original/0329.png"
        string_val: "./data/train/noisy/0198.png"
        string_val: "./data/train/original/0198.png"
        string_val: "./data/train/noisy/0303.png"
        string_val: "./data/train/original/0303.png"
        string_val: "./data/train/noisy/0184.png"
        string_val: "./data/train/original/0184.png"
        string_val: "./data/train/noisy/0103.png"
        string_val: "./data/train/original/0103.png"
        string_val: "./data/train/noisy/0008.png"
        string_val: "./data/train/original/0008.png"
        string_val: "./data/train/noisy/0076.png"
        string_val: "./data/train/original/0076.png"
        string_val: "./data/train/noisy/0306.png"
        string_val: "./data/train/original/0306.png"
        string_val: "./data/train/noisy/0146.png"
        string_val: "./data/train/original/0146.png"
        string_val: "./data/train/noisy/0396.png"
        string_val: "./data/train/original/0396.png"
        string_val: "./data/train/noisy/0178.png"
        string_val: "./data/train/original/0178.png"
        string_val: "./data/train/noisy/0148.png"
        string_val: "./data/train/original/0148.png"
        string_val: "./data/train/noisy/0390.png"
        string_val: "./data/train/original/0390.png"
        string_val: "./data/train/noisy/0128.png"
        string_val: "./data/train/original/0128.png"
        string_val: "./data/train/noisy/0253.png"
        string_val: "./data/train/original/0253.png"
        string_val: "./data/train/noisy/0165.png"
        string_val: "./data/train/original/0165.png"
        string_val: "./data/train/noisy/0079.png"
        string_val: "./data/train/original/0079.png"
        string_val: "./data/train/noisy/0299.png"
        string_val: "./data/train/original/0299.png"
        string_val: "./data/train/noisy/0131.png"
        string_val: "./data/train/original/0131.png"
        string_val: "./data/train/noisy/0247.png"
        string_val: "./data/train/original/0247.png"
        string_val: "./data/train/noisy/0071.png"
        string_val: "./data/train/original/0071.png"
        string_val: "./data/train/noisy/0197.png"
        string_val: "./data/train/original/0197.png"
        string_val: "./data/train/noisy/0395.png"
        string_val: "./data/train/original/0395.png"
        string_val: "./data/train/noisy/0380.png"
        string_val: "./data/train/original/0380.png"
        string_val: "./data/train/noisy/0126.png"
        string_val: "./data/train/original/0126.png"
        string_val: "./data/train/noisy/0286.png"
        string_val: "./data/train/original/0286.png"
        string_val: "./data/train/noisy/0238.png"
        string_val: "./data/train/original/0238.png"
        string_val: "./data/train/noisy/0080.png"
        string_val: "./data/train/original/0080.png"
        string_val: "./data/train/noisy/0242.png"
        string_val: "./data/train/original/0242.png"
        string_val: "./data/train/noisy/0183.png"
        string_val: "./data/train/original/0183.png"
        string_val: "./data/train/noisy/0363.png"
        string_val: "./data/train/original/0363.png"
        string_val: "./data/train/noisy/0037.png"
        string_val: "./data/train/original/0037.png"
        string_val: "./data/train/noisy/0289.png"
        string_val: "./data/train/original/0289.png"
        string_val: "./data/train/noisy/0018.png"
        string_val: "./data/train/original/0018.png"
        string_val: "./data/train/noisy/0060.png"
        string_val: "./data/train/original/0060.png"
        string_val: "./data/train/noisy/0371.png"
        string_val: "./data/train/original/0371.png"
        string_val: "./data/train/noisy/0149.png"
        string_val: "./data/train/original/0149.png"
        string_val: "./data/train/noisy/0323.png"
        string_val: "./data/train/original/0323.png"
        string_val: "./data/train/noisy/0275.png"
        string_val: "./data/train/original/0275.png"
        string_val: "./data/train/noisy/0074.png"
        string_val: "./data/train/original/0074.png"
        string_val: "./data/train/noisy/0240.png"
        string_val: "./data/train/original/0240.png"
        string_val: "./data/train/noisy/0316.png"
        string_val: "./data/train/original/0316.png"
        string_val: "./data/train/noisy/0295.png"
        string_val: "./data/train/original/0295.png"
        string_val: "./data/train/noisy/0384.png"
        string_val: "./data/train/original/0384.png"
        string_val: "./data/train/noisy/0358.png"
        string_val: "./data/train/original/0358.png"
        string_val: "./data/train/noisy/0283.png"
        string_val: "./data/train/original/0283.png"
        string_val: "./data/train/noisy/0051.png"
        string_val: "./data/train/original/0051.png"
      }
    }
  }
}
node {
  name: "num_parallel_calls"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "num_parallel_calls_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 32
      }
    }
  }
}
node {
  name: "OneShotIterator"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_3d17727e"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext"
  op: "IteratorGetNext"
  input: "OneShotIterator"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/mul_grad/Shape"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_grad/Shape_1"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/mul_grad/Shape"
  input: "gradients/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mul_grad/mul"
  op: "Mul"
  input: "gradients/Fill"
  input: "L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/mul_grad/Sum"
  op: "Sum"
  input: "gradients/mul_grad/mul"
  input: "gradients/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_grad/Sum"
  input: "gradients/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mul_grad/mul_1"
  op: "Mul"
  input: "mul/x"
  input: "gradients/Fill"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/mul_grad/mul_1"
  input: "gradients/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/mul_grad/Sum_1"
  input: "gradients/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/mul_grad/Reshape"
  input: "^gradients/mul_grad/Reshape_1"
}
node {
  name: "gradients/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_grad/Reshape"
  input: "^gradients/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_grad/Reshape_1"
  input: "^gradients/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/L2Loss_grad/mul"
  op: "Mul"
  input: "sub_1"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sub_1_grad/Shape"
  op: "Shape"
  input: "clean_image"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sub_1_grad/Shape_1"
  op: "Shape"
  input: "sub"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sub_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sub_1_grad/Shape"
  input: "gradients/sub_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sub_1_grad/Sum"
  op: "Sum"
  input: "gradients/L2Loss_grad/mul"
  input: "gradients/sub_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sub_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/sub_1_grad/Sum"
  input: "gradients/sub_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sub_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/L2Loss_grad/mul"
  input: "gradients/sub_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sub_1_grad/Neg"
  op: "Neg"
  input: "gradients/sub_1_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sub_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sub_1_grad/Neg"
  input: "gradients/sub_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sub_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/sub_1_grad/Reshape"
  input: "^gradients/sub_1_grad/Reshape_1"
}
node {
  name: "gradients/sub_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sub_1_grad/Reshape"
  input: "^gradients/sub_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sub_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/sub_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sub_1_grad/Reshape_1"
  input: "^gradients/sub_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sub_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/sub_grad/Shape"
  op: "Shape"
  input: "Placeholder"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sub_grad/Shape_1"
  op: "Shape"
  input: "block17_1/conv2d/Conv2D"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sub_grad/Shape"
  input: "gradients/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sub_grad/Sum"
  op: "Sum"
  input: "gradients/sub_1_grad/tuple/control_dependency_1"
  input: "gradients/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/sub_grad/Sum"
  input: "gradients/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/sub_1_grad/tuple/control_dependency_1"
  input: "gradients/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sub_grad/Neg"
  op: "Neg"
  input: "gradients/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sub_grad/Neg"
  input: "gradients/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/sub_grad/Reshape"
  input: "^gradients/sub_grad/Reshape_1"
}
node {
  name: "gradients/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sub_grad/Reshape"
  input: "^gradients/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sub_grad/Reshape_1"
  input: "^gradients/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sub_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/block17_1/conv2d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "block19/Relu"
  input: "block17/conv2d/kernel/read"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/block17_1/conv2d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/block17_1/conv2d/Conv2D_grad/ShapeN"
  input: "block17/conv2d/kernel/read"
  input: "gradients/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block17_1/conv2d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "block19/Relu"
  input: "gradients/block17_1/conv2d/Conv2D_grad/ShapeN:1"
  input: "gradients/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block17_1/conv2d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block17_1/conv2d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/block17_1/conv2d/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/block17_1/conv2d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block17_1/conv2d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/block17_1/conv2d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block17_1/conv2d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/block17_1/conv2d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block17_1/conv2d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/block17_1/conv2d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block17_1/conv2d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/block19/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/block17_1/conv2d/Conv2D_grad/tuple/control_dependency"
  input: "block19/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block19/batch_normalization/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "gradients/block19/Relu_grad/ReluGrad"
  input: "block19/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block19/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/block19/batch_normalization/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block19/batch_normalization/cond/Merge_grad/cond_grad"
}
node {
  name: "gradients/block19/batch_normalization/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block19/batch_normalization/cond/Merge_grad/cond_grad"
  input: "^gradients/block19/batch_normalization/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block19/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/block19/batch_normalization/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block19/batch_normalization/cond/Merge_grad/cond_grad:1"
  input: "^gradients/block19/batch_normalization/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block19/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like"
  op: "ZerosLike"
  input: "block19/batch_normalization/cond/FusedBatchNorm_1:1"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_1"
  op: "ZerosLike"
  input: "block19/batch_normalization/cond/FusedBatchNorm_1:2"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_2"
  op: "ZerosLike"
  input: "block19/batch_normalization/cond/FusedBatchNorm_1:3"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_3"
  op: "ZerosLike"
  input: "block19/batch_normalization/cond/FusedBatchNorm_1:4"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block19/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/block19/batch_normalization/cond/Merge_grad/tuple/control_dependency"
  input: "block19/batch_normalization/cond/FusedBatchNorm_1/Switch"
  input: "block19/batch_normalization/cond/FusedBatchNorm_1/Switch_1"
  input: "block19/batch_normalization/cond/FusedBatchNorm_1/Switch_3"
  input: "block19/batch_normalization/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/block19/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block19/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/block19/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block19/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^gradients/block19/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block19/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block19/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block19/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^gradients/block19/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block19/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block19/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/block19/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^gradients/block19/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block19/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_4"
  op: "ZerosLike"
  input: "block19/batch_normalization/cond/FusedBatchNorm:1"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_5"
  op: "ZerosLike"
  input: "block19/batch_normalization/cond/FusedBatchNorm:2"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_6"
  op: "ZerosLike"
  input: "block19/batch_normalization/cond/FusedBatchNorm:3"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_7"
  op: "ZerosLike"
  input: "block19/batch_normalization/cond/FusedBatchNorm:4"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block19/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/block19/batch_normalization/cond/Merge_grad/tuple/control_dependency_1"
  input: "block19/batch_normalization/cond/FusedBatchNorm/Switch:1"
  input: "block19/batch_normalization/cond/FusedBatchNorm/Switch_1:1"
  input: "block19/batch_normalization/cond/FusedBatchNorm:3"
  input: "block19/batch_normalization/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block19/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block19/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/block19/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block19/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/block19/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block19/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block19/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block19/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/block19/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block19/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block19/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/block19/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/block19/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block19/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block19/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/block19/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/block19/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block19/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block19/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/block19/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/block19/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block19/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/Switch"
  op: "Switch"
  input: "block19/conv19/Conv2D"
  input: "block19/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_1"
  op: "Shape"
  input: "gradients/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros"
  op: "Fill"
  input: "gradients/Shape_1"
  input: "gradients/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block19/batch_normalization/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/block19/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "gradients/zeros"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_1"
  op: "Switch"
  input: "block19/batch_normalization/gamma/read"
  input: "block19/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_2"
  op: "Shape"
  input: "gradients/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_1/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_1"
  op: "Fill"
  input: "gradients/Shape_2"
  input: "gradients/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block19/batch_normalization/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/block19/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  input: "gradients/zeros_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_2"
  op: "Switch"
  input: "block19/batch_normalization/beta/read"
  input: "block19/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_3"
  op: "Shape"
  input: "gradients/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_2/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_2"
  op: "Fill"
  input: "gradients/Shape_3"
  input: "gradients/zeros_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block19/batch_normalization/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/block19/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "gradients/zeros_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_3"
  op: "Switch"
  input: "block19/conv19/Conv2D"
  input: "block19/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_4"
  op: "Shape"
  input: "gradients/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_3/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_3"
  op: "Fill"
  input: "gradients/Shape_4"
  input: "gradients/zeros_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block19/batch_normalization/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/block19/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency"
  input: "gradients/zeros_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_4"
  op: "Switch"
  input: "block19/batch_normalization/gamma/read"
  input: "block19/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_5"
  op: "Shape"
  input: "gradients/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_4/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_4"
  op: "Fill"
  input: "gradients/Shape_5"
  input: "gradients/zeros_4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block19/batch_normalization/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/block19/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "gradients/zeros_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_5"
  op: "Switch"
  input: "block19/batch_normalization/beta/read"
  input: "block19/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_6"
  op: "Shape"
  input: "gradients/Switch_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_5/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_5"
  op: "Fill"
  input: "gradients/Shape_6"
  input: "gradients/zeros_5/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block19/batch_normalization/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/block19/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "gradients/zeros_5"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN"
  op: "AddN"
  input: "gradients/block19/batch_normalization/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "gradients/block19/batch_normalization/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block19/batch_normalization/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/block19/conv19/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "block18/Relu"
  input: "block19/conv19/kernel/read"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/block19/conv19/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/block19/conv19/Conv2D_grad/ShapeN"
  input: "block19/conv19/kernel/read"
  input: "gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block19/conv19/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "block18/Relu"
  input: "gradients/block19/conv19/Conv2D_grad/ShapeN:1"
  input: "gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block19/conv19/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block19/conv19/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/block19/conv19/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/block19/conv19/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block19/conv19/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/block19/conv19/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block19/conv19/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/block19/conv19/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block19/conv19/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/block19/conv19/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block19/conv19/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/AddN_1"
  op: "AddN"
  input: "gradients/block19/batch_normalization/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  input: "gradients/block19/batch_normalization/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block19/batch_normalization/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/AddN_2"
  op: "AddN"
  input: "gradients/block19/batch_normalization/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  input: "gradients/block19/batch_normalization/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block19/batch_normalization/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/block18/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/block19/conv19/Conv2D_grad/tuple/control_dependency"
  input: "block18/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block18/batch_normalization/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "gradients/block18/Relu_grad/ReluGrad"
  input: "block18/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block18/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/block18/batch_normalization/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block18/batch_normalization/cond/Merge_grad/cond_grad"
}
node {
  name: "gradients/block18/batch_normalization/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block18/batch_normalization/cond/Merge_grad/cond_grad"
  input: "^gradients/block18/batch_normalization/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block18/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/block18/batch_normalization/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block18/batch_normalization/cond/Merge_grad/cond_grad:1"
  input: "^gradients/block18/batch_normalization/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block18/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_8"
  op: "ZerosLike"
  input: "block18/batch_normalization/cond/FusedBatchNorm_1:1"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_9"
  op: "ZerosLike"
  input: "block18/batch_normalization/cond/FusedBatchNorm_1:2"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_10"
  op: "ZerosLike"
  input: "block18/batch_normalization/cond/FusedBatchNorm_1:3"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_11"
  op: "ZerosLike"
  input: "block18/batch_normalization/cond/FusedBatchNorm_1:4"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block18/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/block18/batch_normalization/cond/Merge_grad/tuple/control_dependency"
  input: "block18/batch_normalization/cond/FusedBatchNorm_1/Switch"
  input: "block18/batch_normalization/cond/FusedBatchNorm_1/Switch_1"
  input: "block18/batch_normalization/cond/FusedBatchNorm_1/Switch_3"
  input: "block18/batch_normalization/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/block18/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block18/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/block18/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block18/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^gradients/block18/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block18/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block18/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block18/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^gradients/block18/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block18/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block18/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/block18/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^gradients/block18/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block18/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_12"
  op: "ZerosLike"
  input: "block18/batch_normalization/cond/FusedBatchNorm:1"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_13"
  op: "ZerosLike"
  input: "block18/batch_normalization/cond/FusedBatchNorm:2"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_14"
  op: "ZerosLike"
  input: "block18/batch_normalization/cond/FusedBatchNorm:3"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_15"
  op: "ZerosLike"
  input: "block18/batch_normalization/cond/FusedBatchNorm:4"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block18/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/block18/batch_normalization/cond/Merge_grad/tuple/control_dependency_1"
  input: "block18/batch_normalization/cond/FusedBatchNorm/Switch:1"
  input: "block18/batch_normalization/cond/FusedBatchNorm/Switch_1:1"
  input: "block18/batch_normalization/cond/FusedBatchNorm:3"
  input: "block18/batch_normalization/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block18/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block18/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/block18/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block18/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/block18/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block18/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block18/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block18/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/block18/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block18/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block18/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/block18/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/block18/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block18/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block18/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/block18/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/block18/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block18/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block18/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/block18/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/block18/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block18/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/Switch_6"
  op: "Switch"
  input: "block18/conv18/Conv2D"
  input: "block18/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_7"
  op: "Shape"
  input: "gradients/Switch_6:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_6/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_6"
  op: "Fill"
  input: "gradients/Shape_7"
  input: "gradients/zeros_6/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block18/batch_normalization/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/block18/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "gradients/zeros_6"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_7"
  op: "Switch"
  input: "block18/batch_normalization/gamma/read"
  input: "block18/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_8"
  op: "Shape"
  input: "gradients/Switch_7:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_7/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_7"
  op: "Fill"
  input: "gradients/Shape_8"
  input: "gradients/zeros_7/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block18/batch_normalization/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/block18/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  input: "gradients/zeros_7"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_8"
  op: "Switch"
  input: "block18/batch_normalization/beta/read"
  input: "block18/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_9"
  op: "Shape"
  input: "gradients/Switch_8:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_8/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_8"
  op: "Fill"
  input: "gradients/Shape_9"
  input: "gradients/zeros_8/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block18/batch_normalization/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/block18/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "gradients/zeros_8"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_9"
  op: "Switch"
  input: "block18/conv18/Conv2D"
  input: "block18/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_10"
  op: "Shape"
  input: "gradients/Switch_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_9/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_9"
  op: "Fill"
  input: "gradients/Shape_10"
  input: "gradients/zeros_9/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block18/batch_normalization/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/block18/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency"
  input: "gradients/zeros_9"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_10"
  op: "Switch"
  input: "block18/batch_normalization/gamma/read"
  input: "block18/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_11"
  op: "Shape"
  input: "gradients/Switch_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_10/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_10"
  op: "Fill"
  input: "gradients/Shape_11"
  input: "gradients/zeros_10/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block18/batch_normalization/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/block18/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "gradients/zeros_10"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_11"
  op: "Switch"
  input: "block18/batch_normalization/beta/read"
  input: "block18/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_12"
  op: "Shape"
  input: "gradients/Switch_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_11/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_11"
  op: "Fill"
  input: "gradients/Shape_12"
  input: "gradients/zeros_11/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block18/batch_normalization/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/block18/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "gradients/zeros_11"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_3"
  op: "AddN"
  input: "gradients/block18/batch_normalization/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "gradients/block18/batch_normalization/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block18/batch_normalization/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/block18/conv18/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "block17/Relu"
  input: "block18/conv18/kernel/read"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/block18/conv18/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/block18/conv18/Conv2D_grad/ShapeN"
  input: "block18/conv18/kernel/read"
  input: "gradients/AddN_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block18/conv18/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "block17/Relu"
  input: "gradients/block18/conv18/Conv2D_grad/ShapeN:1"
  input: "gradients/AddN_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block18/conv18/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block18/conv18/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/block18/conv18/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/block18/conv18/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block18/conv18/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/block18/conv18/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block18/conv18/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/block18/conv18/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block18/conv18/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/block18/conv18/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block18/conv18/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/AddN_4"
  op: "AddN"
  input: "gradients/block18/batch_normalization/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  input: "gradients/block18/batch_normalization/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block18/batch_normalization/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/AddN_5"
  op: "AddN"
  input: "gradients/block18/batch_normalization/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  input: "gradients/block18/batch_normalization/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block18/batch_normalization/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/block17/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/block18/conv18/Conv2D_grad/tuple/control_dependency"
  input: "block17/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block17/batch_normalization/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "gradients/block17/Relu_grad/ReluGrad"
  input: "block17/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block17/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/block17/batch_normalization/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block17/batch_normalization/cond/Merge_grad/cond_grad"
}
node {
  name: "gradients/block17/batch_normalization/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block17/batch_normalization/cond/Merge_grad/cond_grad"
  input: "^gradients/block17/batch_normalization/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block17/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/block17/batch_normalization/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block17/batch_normalization/cond/Merge_grad/cond_grad:1"
  input: "^gradients/block17/batch_normalization/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block17/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_16"
  op: "ZerosLike"
  input: "block17/batch_normalization/cond/FusedBatchNorm_1:1"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_17"
  op: "ZerosLike"
  input: "block17/batch_normalization/cond/FusedBatchNorm_1:2"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_18"
  op: "ZerosLike"
  input: "block17/batch_normalization/cond/FusedBatchNorm_1:3"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_19"
  op: "ZerosLike"
  input: "block17/batch_normalization/cond/FusedBatchNorm_1:4"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block17/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/block17/batch_normalization/cond/Merge_grad/tuple/control_dependency"
  input: "block17/batch_normalization/cond/FusedBatchNorm_1/Switch"
  input: "block17/batch_normalization/cond/FusedBatchNorm_1/Switch_1"
  input: "block17/batch_normalization/cond/FusedBatchNorm_1/Switch_3"
  input: "block17/batch_normalization/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/block17/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block17/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/block17/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block17/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^gradients/block17/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block17/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block17/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block17/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^gradients/block17/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block17/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block17/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/block17/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^gradients/block17/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block17/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_20"
  op: "ZerosLike"
  input: "block17/batch_normalization/cond/FusedBatchNorm:1"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_21"
  op: "ZerosLike"
  input: "block17/batch_normalization/cond/FusedBatchNorm:2"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_22"
  op: "ZerosLike"
  input: "block17/batch_normalization/cond/FusedBatchNorm:3"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_23"
  op: "ZerosLike"
  input: "block17/batch_normalization/cond/FusedBatchNorm:4"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block17/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/block17/batch_normalization/cond/Merge_grad/tuple/control_dependency_1"
  input: "block17/batch_normalization/cond/FusedBatchNorm/Switch:1"
  input: "block17/batch_normalization/cond/FusedBatchNorm/Switch_1:1"
  input: "block17/batch_normalization/cond/FusedBatchNorm:3"
  input: "block17/batch_normalization/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block17/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block17/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/block17/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block17/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/block17/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block17/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block17/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block17/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/block17/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block17/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block17/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/block17/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/block17/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block17/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block17/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/block17/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/block17/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block17/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block17/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/block17/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/block17/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block17/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/Switch_12"
  op: "Switch"
  input: "block17/conv17/Conv2D"
  input: "block17/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_13"
  op: "Shape"
  input: "gradients/Switch_12:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_12/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_12"
  op: "Fill"
  input: "gradients/Shape_13"
  input: "gradients/zeros_12/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block17/batch_normalization/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/block17/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "gradients/zeros_12"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_13"
  op: "Switch"
  input: "block17/batch_normalization/gamma/read"
  input: "block17/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_14"
  op: "Shape"
  input: "gradients/Switch_13:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_13/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_13"
  op: "Fill"
  input: "gradients/Shape_14"
  input: "gradients/zeros_13/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block17/batch_normalization/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/block17/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  input: "gradients/zeros_13"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_14"
  op: "Switch"
  input: "block17/batch_normalization/beta/read"
  input: "block17/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_15"
  op: "Shape"
  input: "gradients/Switch_14:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_14/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_14"
  op: "Fill"
  input: "gradients/Shape_15"
  input: "gradients/zeros_14/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block17/batch_normalization/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/block17/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "gradients/zeros_14"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_15"
  op: "Switch"
  input: "block17/conv17/Conv2D"
  input: "block17/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_16"
  op: "Shape"
  input: "gradients/Switch_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_15/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_15"
  op: "Fill"
  input: "gradients/Shape_16"
  input: "gradients/zeros_15/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block17/batch_normalization/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/block17/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency"
  input: "gradients/zeros_15"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_16"
  op: "Switch"
  input: "block17/batch_normalization/gamma/read"
  input: "block17/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_17"
  op: "Shape"
  input: "gradients/Switch_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_16/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_16"
  op: "Fill"
  input: "gradients/Shape_17"
  input: "gradients/zeros_16/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block17/batch_normalization/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/block17/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "gradients/zeros_16"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_17"
  op: "Switch"
  input: "block17/batch_normalization/beta/read"
  input: "block17/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_18"
  op: "Shape"
  input: "gradients/Switch_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_17/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_17"
  op: "Fill"
  input: "gradients/Shape_18"
  input: "gradients/zeros_17/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block17/batch_normalization/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/block17/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "gradients/zeros_17"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_6"
  op: "AddN"
  input: "gradients/block17/batch_normalization/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "gradients/block17/batch_normalization/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block17/batch_normalization/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/block17/conv17/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "block16/Relu"
  input: "block17/conv17/kernel/read"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/block17/conv17/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/block17/conv17/Conv2D_grad/ShapeN"
  input: "block17/conv17/kernel/read"
  input: "gradients/AddN_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block17/conv17/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "block16/Relu"
  input: "gradients/block17/conv17/Conv2D_grad/ShapeN:1"
  input: "gradients/AddN_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block17/conv17/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block17/conv17/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/block17/conv17/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/block17/conv17/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block17/conv17/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/block17/conv17/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block17/conv17/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/block17/conv17/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block17/conv17/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/block17/conv17/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block17/conv17/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/AddN_7"
  op: "AddN"
  input: "gradients/block17/batch_normalization/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  input: "gradients/block17/batch_normalization/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block17/batch_normalization/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/AddN_8"
  op: "AddN"
  input: "gradients/block17/batch_normalization/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  input: "gradients/block17/batch_normalization/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block17/batch_normalization/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/block16/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/block17/conv17/Conv2D_grad/tuple/control_dependency"
  input: "block16/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block16/batch_normalization/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "gradients/block16/Relu_grad/ReluGrad"
  input: "block16/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block16/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/block16/batch_normalization/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block16/batch_normalization/cond/Merge_grad/cond_grad"
}
node {
  name: "gradients/block16/batch_normalization/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block16/batch_normalization/cond/Merge_grad/cond_grad"
  input: "^gradients/block16/batch_normalization/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block16/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/block16/batch_normalization/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block16/batch_normalization/cond/Merge_grad/cond_grad:1"
  input: "^gradients/block16/batch_normalization/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block16/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_24"
  op: "ZerosLike"
  input: "block16/batch_normalization/cond/FusedBatchNorm_1:1"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_25"
  op: "ZerosLike"
  input: "block16/batch_normalization/cond/FusedBatchNorm_1:2"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_26"
  op: "ZerosLike"
  input: "block16/batch_normalization/cond/FusedBatchNorm_1:3"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_27"
  op: "ZerosLike"
  input: "block16/batch_normalization/cond/FusedBatchNorm_1:4"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block16/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/block16/batch_normalization/cond/Merge_grad/tuple/control_dependency"
  input: "block16/batch_normalization/cond/FusedBatchNorm_1/Switch"
  input: "block16/batch_normalization/cond/FusedBatchNorm_1/Switch_1"
  input: "block16/batch_normalization/cond/FusedBatchNorm_1/Switch_3"
  input: "block16/batch_normalization/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/block16/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block16/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/block16/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block16/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^gradients/block16/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block16/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block16/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block16/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^gradients/block16/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block16/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block16/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/block16/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^gradients/block16/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block16/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_28"
  op: "ZerosLike"
  input: "block16/batch_normalization/cond/FusedBatchNorm:1"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_29"
  op: "ZerosLike"
  input: "block16/batch_normalization/cond/FusedBatchNorm:2"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_30"
  op: "ZerosLike"
  input: "block16/batch_normalization/cond/FusedBatchNorm:3"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_31"
  op: "ZerosLike"
  input: "block16/batch_normalization/cond/FusedBatchNorm:4"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block16/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/block16/batch_normalization/cond/Merge_grad/tuple/control_dependency_1"
  input: "block16/batch_normalization/cond/FusedBatchNorm/Switch:1"
  input: "block16/batch_normalization/cond/FusedBatchNorm/Switch_1:1"
  input: "block16/batch_normalization/cond/FusedBatchNorm:3"
  input: "block16/batch_normalization/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block16/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block16/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/block16/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block16/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/block16/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block16/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block16/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block16/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/block16/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block16/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block16/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/block16/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/block16/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block16/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block16/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/block16/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/block16/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block16/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block16/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/block16/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/block16/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block16/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/Switch_18"
  op: "Switch"
  input: "block16/conv16/Conv2D"
  input: "block16/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_19"
  op: "Shape"
  input: "gradients/Switch_18:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_18/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_18"
  op: "Fill"
  input: "gradients/Shape_19"
  input: "gradients/zeros_18/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block16/batch_normalization/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/block16/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "gradients/zeros_18"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_19"
  op: "Switch"
  input: "block16/batch_normalization/gamma/read"
  input: "block16/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_20"
  op: "Shape"
  input: "gradients/Switch_19:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_19/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_19"
  op: "Fill"
  input: "gradients/Shape_20"
  input: "gradients/zeros_19/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block16/batch_normalization/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/block16/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  input: "gradients/zeros_19"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_20"
  op: "Switch"
  input: "block16/batch_normalization/beta/read"
  input: "block16/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_21"
  op: "Shape"
  input: "gradients/Switch_20:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_20/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_20"
  op: "Fill"
  input: "gradients/Shape_21"
  input: "gradients/zeros_20/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block16/batch_normalization/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/block16/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "gradients/zeros_20"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_21"
  op: "Switch"
  input: "block16/conv16/Conv2D"
  input: "block16/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_22"
  op: "Shape"
  input: "gradients/Switch_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_21/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_21"
  op: "Fill"
  input: "gradients/Shape_22"
  input: "gradients/zeros_21/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block16/batch_normalization/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/block16/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency"
  input: "gradients/zeros_21"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_22"
  op: "Switch"
  input: "block16/batch_normalization/gamma/read"
  input: "block16/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_23"
  op: "Shape"
  input: "gradients/Switch_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_22/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_22"
  op: "Fill"
  input: "gradients/Shape_23"
  input: "gradients/zeros_22/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block16/batch_normalization/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/block16/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "gradients/zeros_22"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_23"
  op: "Switch"
  input: "block16/batch_normalization/beta/read"
  input: "block16/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_24"
  op: "Shape"
  input: "gradients/Switch_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_23/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_23"
  op: "Fill"
  input: "gradients/Shape_24"
  input: "gradients/zeros_23/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block16/batch_normalization/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/block16/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "gradients/zeros_23"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_9"
  op: "AddN"
  input: "gradients/block16/batch_normalization/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "gradients/block16/batch_normalization/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block16/batch_normalization/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/block16/conv16/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "block15/Relu"
  input: "block16/conv16/kernel/read"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/block16/conv16/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/block16/conv16/Conv2D_grad/ShapeN"
  input: "block16/conv16/kernel/read"
  input: "gradients/AddN_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block16/conv16/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "block15/Relu"
  input: "gradients/block16/conv16/Conv2D_grad/ShapeN:1"
  input: "gradients/AddN_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block16/conv16/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block16/conv16/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/block16/conv16/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/block16/conv16/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block16/conv16/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/block16/conv16/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block16/conv16/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/block16/conv16/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block16/conv16/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/block16/conv16/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block16/conv16/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/AddN_10"
  op: "AddN"
  input: "gradients/block16/batch_normalization/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  input: "gradients/block16/batch_normalization/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block16/batch_normalization/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/AddN_11"
  op: "AddN"
  input: "gradients/block16/batch_normalization/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  input: "gradients/block16/batch_normalization/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block16/batch_normalization/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/block15/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/block16/conv16/Conv2D_grad/tuple/control_dependency"
  input: "block15/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block15/batch_normalization/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "gradients/block15/Relu_grad/ReluGrad"
  input: "block15/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block15/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/block15/batch_normalization/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block15/batch_normalization/cond/Merge_grad/cond_grad"
}
node {
  name: "gradients/block15/batch_normalization/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block15/batch_normalization/cond/Merge_grad/cond_grad"
  input: "^gradients/block15/batch_normalization/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block15/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/block15/batch_normalization/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block15/batch_normalization/cond/Merge_grad/cond_grad:1"
  input: "^gradients/block15/batch_normalization/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block15/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_32"
  op: "ZerosLike"
  input: "block15/batch_normalization/cond/FusedBatchNorm_1:1"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_33"
  op: "ZerosLike"
  input: "block15/batch_normalization/cond/FusedBatchNorm_1:2"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_34"
  op: "ZerosLike"
  input: "block15/batch_normalization/cond/FusedBatchNorm_1:3"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_35"
  op: "ZerosLike"
  input: "block15/batch_normalization/cond/FusedBatchNorm_1:4"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block15/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/block15/batch_normalization/cond/Merge_grad/tuple/control_dependency"
  input: "block15/batch_normalization/cond/FusedBatchNorm_1/Switch"
  input: "block15/batch_normalization/cond/FusedBatchNorm_1/Switch_1"
  input: "block15/batch_normalization/cond/FusedBatchNorm_1/Switch_3"
  input: "block15/batch_normalization/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/block15/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block15/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/block15/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block15/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^gradients/block15/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block15/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block15/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block15/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^gradients/block15/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block15/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block15/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/block15/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^gradients/block15/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block15/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_36"
  op: "ZerosLike"
  input: "block15/batch_normalization/cond/FusedBatchNorm:1"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_37"
  op: "ZerosLike"
  input: "block15/batch_normalization/cond/FusedBatchNorm:2"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_38"
  op: "ZerosLike"
  input: "block15/batch_normalization/cond/FusedBatchNorm:3"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_39"
  op: "ZerosLike"
  input: "block15/batch_normalization/cond/FusedBatchNorm:4"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block15/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/block15/batch_normalization/cond/Merge_grad/tuple/control_dependency_1"
  input: "block15/batch_normalization/cond/FusedBatchNorm/Switch:1"
  input: "block15/batch_normalization/cond/FusedBatchNorm/Switch_1:1"
  input: "block15/batch_normalization/cond/FusedBatchNorm:3"
  input: "block15/batch_normalization/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block15/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block15/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/block15/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block15/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/block15/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block15/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block15/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block15/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/block15/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block15/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block15/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/block15/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/block15/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block15/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block15/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/block15/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/block15/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block15/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block15/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/block15/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/block15/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block15/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/Switch_24"
  op: "Switch"
  input: "block15/conv15/Conv2D"
  input: "block15/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_25"
  op: "Shape"
  input: "gradients/Switch_24:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_24/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_24"
  op: "Fill"
  input: "gradients/Shape_25"
  input: "gradients/zeros_24/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block15/batch_normalization/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/block15/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "gradients/zeros_24"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_25"
  op: "Switch"
  input: "block15/batch_normalization/gamma/read"
  input: "block15/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_26"
  op: "Shape"
  input: "gradients/Switch_25:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_25/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_25"
  op: "Fill"
  input: "gradients/Shape_26"
  input: "gradients/zeros_25/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block15/batch_normalization/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/block15/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  input: "gradients/zeros_25"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_26"
  op: "Switch"
  input: "block15/batch_normalization/beta/read"
  input: "block15/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_27"
  op: "Shape"
  input: "gradients/Switch_26:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_26/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_26"
  op: "Fill"
  input: "gradients/Shape_27"
  input: "gradients/zeros_26/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block15/batch_normalization/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/block15/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "gradients/zeros_26"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_27"
  op: "Switch"
  input: "block15/conv15/Conv2D"
  input: "block15/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_28"
  op: "Shape"
  input: "gradients/Switch_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_27/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_27"
  op: "Fill"
  input: "gradients/Shape_28"
  input: "gradients/zeros_27/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block15/batch_normalization/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/block15/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency"
  input: "gradients/zeros_27"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_28"
  op: "Switch"
  input: "block15/batch_normalization/gamma/read"
  input: "block15/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_29"
  op: "Shape"
  input: "gradients/Switch_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_28/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_28"
  op: "Fill"
  input: "gradients/Shape_29"
  input: "gradients/zeros_28/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block15/batch_normalization/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/block15/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "gradients/zeros_28"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_29"
  op: "Switch"
  input: "block15/batch_normalization/beta/read"
  input: "block15/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_30"
  op: "Shape"
  input: "gradients/Switch_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_29/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_29"
  op: "Fill"
  input: "gradients/Shape_30"
  input: "gradients/zeros_29/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block15/batch_normalization/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/block15/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "gradients/zeros_29"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_12"
  op: "AddN"
  input: "gradients/block15/batch_normalization/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "gradients/block15/batch_normalization/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block15/batch_normalization/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/block15/conv15/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "block14/Relu"
  input: "block15/conv15/kernel/read"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/block15/conv15/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/block15/conv15/Conv2D_grad/ShapeN"
  input: "block15/conv15/kernel/read"
  input: "gradients/AddN_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block15/conv15/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "block14/Relu"
  input: "gradients/block15/conv15/Conv2D_grad/ShapeN:1"
  input: "gradients/AddN_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block15/conv15/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block15/conv15/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/block15/conv15/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/block15/conv15/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block15/conv15/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/block15/conv15/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block15/conv15/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/block15/conv15/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block15/conv15/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/block15/conv15/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block15/conv15/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/AddN_13"
  op: "AddN"
  input: "gradients/block15/batch_normalization/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  input: "gradients/block15/batch_normalization/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block15/batch_normalization/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/AddN_14"
  op: "AddN"
  input: "gradients/block15/batch_normalization/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  input: "gradients/block15/batch_normalization/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block15/batch_normalization/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/block14/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/block15/conv15/Conv2D_grad/tuple/control_dependency"
  input: "block14/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block14/batch_normalization/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "gradients/block14/Relu_grad/ReluGrad"
  input: "block14/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block14/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/block14/batch_normalization/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block14/batch_normalization/cond/Merge_grad/cond_grad"
}
node {
  name: "gradients/block14/batch_normalization/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block14/batch_normalization/cond/Merge_grad/cond_grad"
  input: "^gradients/block14/batch_normalization/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block14/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/block14/batch_normalization/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block14/batch_normalization/cond/Merge_grad/cond_grad:1"
  input: "^gradients/block14/batch_normalization/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block14/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_40"
  op: "ZerosLike"
  input: "block14/batch_normalization/cond/FusedBatchNorm_1:1"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_41"
  op: "ZerosLike"
  input: "block14/batch_normalization/cond/FusedBatchNorm_1:2"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_42"
  op: "ZerosLike"
  input: "block14/batch_normalization/cond/FusedBatchNorm_1:3"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_43"
  op: "ZerosLike"
  input: "block14/batch_normalization/cond/FusedBatchNorm_1:4"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block14/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/block14/batch_normalization/cond/Merge_grad/tuple/control_dependency"
  input: "block14/batch_normalization/cond/FusedBatchNorm_1/Switch"
  input: "block14/batch_normalization/cond/FusedBatchNorm_1/Switch_1"
  input: "block14/batch_normalization/cond/FusedBatchNorm_1/Switch_3"
  input: "block14/batch_normalization/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/block14/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block14/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/block14/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block14/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^gradients/block14/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block14/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block14/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block14/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^gradients/block14/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block14/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block14/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/block14/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^gradients/block14/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block14/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_44"
  op: "ZerosLike"
  input: "block14/batch_normalization/cond/FusedBatchNorm:1"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_45"
  op: "ZerosLike"
  input: "block14/batch_normalization/cond/FusedBatchNorm:2"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_46"
  op: "ZerosLike"
  input: "block14/batch_normalization/cond/FusedBatchNorm:3"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_47"
  op: "ZerosLike"
  input: "block14/batch_normalization/cond/FusedBatchNorm:4"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block14/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/block14/batch_normalization/cond/Merge_grad/tuple/control_dependency_1"
  input: "block14/batch_normalization/cond/FusedBatchNorm/Switch:1"
  input: "block14/batch_normalization/cond/FusedBatchNorm/Switch_1:1"
  input: "block14/batch_normalization/cond/FusedBatchNorm:3"
  input: "block14/batch_normalization/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block14/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block14/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/block14/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block14/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/block14/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block14/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block14/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block14/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/block14/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block14/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block14/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/block14/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/block14/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block14/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block14/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/block14/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/block14/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block14/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block14/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/block14/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/block14/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block14/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/Switch_30"
  op: "Switch"
  input: "block14/conv14/Conv2D"
  input: "block14/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_31"
  op: "Shape"
  input: "gradients/Switch_30:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_30/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_30"
  op: "Fill"
  input: "gradients/Shape_31"
  input: "gradients/zeros_30/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block14/batch_normalization/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/block14/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "gradients/zeros_30"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_31"
  op: "Switch"
  input: "block14/batch_normalization/gamma/read"
  input: "block14/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_32"
  op: "Shape"
  input: "gradients/Switch_31:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_31/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_31"
  op: "Fill"
  input: "gradients/Shape_32"
  input: "gradients/zeros_31/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block14/batch_normalization/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/block14/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  input: "gradients/zeros_31"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_32"
  op: "Switch"
  input: "block14/batch_normalization/beta/read"
  input: "block14/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_33"
  op: "Shape"
  input: "gradients/Switch_32:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_32/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_32"
  op: "Fill"
  input: "gradients/Shape_33"
  input: "gradients/zeros_32/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block14/batch_normalization/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/block14/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "gradients/zeros_32"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_33"
  op: "Switch"
  input: "block14/conv14/Conv2D"
  input: "block14/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_34"
  op: "Shape"
  input: "gradients/Switch_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_33/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_33"
  op: "Fill"
  input: "gradients/Shape_34"
  input: "gradients/zeros_33/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block14/batch_normalization/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/block14/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency"
  input: "gradients/zeros_33"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_34"
  op: "Switch"
  input: "block14/batch_normalization/gamma/read"
  input: "block14/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_35"
  op: "Shape"
  input: "gradients/Switch_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_34/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_34"
  op: "Fill"
  input: "gradients/Shape_35"
  input: "gradients/zeros_34/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block14/batch_normalization/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/block14/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "gradients/zeros_34"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_35"
  op: "Switch"
  input: "block14/batch_normalization/beta/read"
  input: "block14/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_36"
  op: "Shape"
  input: "gradients/Switch_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_35/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_35"
  op: "Fill"
  input: "gradients/Shape_36"
  input: "gradients/zeros_35/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block14/batch_normalization/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/block14/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "gradients/zeros_35"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_15"
  op: "AddN"
  input: "gradients/block14/batch_normalization/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "gradients/block14/batch_normalization/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block14/batch_normalization/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/block14/conv14/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "block13/Relu"
  input: "block14/conv14/kernel/read"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/block14/conv14/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/block14/conv14/Conv2D_grad/ShapeN"
  input: "block14/conv14/kernel/read"
  input: "gradients/AddN_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block14/conv14/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "block13/Relu"
  input: "gradients/block14/conv14/Conv2D_grad/ShapeN:1"
  input: "gradients/AddN_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block14/conv14/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block14/conv14/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/block14/conv14/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/block14/conv14/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block14/conv14/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/block14/conv14/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block14/conv14/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/block14/conv14/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block14/conv14/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/block14/conv14/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block14/conv14/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/AddN_16"
  op: "AddN"
  input: "gradients/block14/batch_normalization/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  input: "gradients/block14/batch_normalization/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block14/batch_normalization/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/AddN_17"
  op: "AddN"
  input: "gradients/block14/batch_normalization/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  input: "gradients/block14/batch_normalization/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block14/batch_normalization/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/block13/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/block14/conv14/Conv2D_grad/tuple/control_dependency"
  input: "block13/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block13/batch_normalization/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "gradients/block13/Relu_grad/ReluGrad"
  input: "block13/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block13/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/block13/batch_normalization/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block13/batch_normalization/cond/Merge_grad/cond_grad"
}
node {
  name: "gradients/block13/batch_normalization/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block13/batch_normalization/cond/Merge_grad/cond_grad"
  input: "^gradients/block13/batch_normalization/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block13/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/block13/batch_normalization/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block13/batch_normalization/cond/Merge_grad/cond_grad:1"
  input: "^gradients/block13/batch_normalization/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block13/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_48"
  op: "ZerosLike"
  input: "block13/batch_normalization/cond/FusedBatchNorm_1:1"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_49"
  op: "ZerosLike"
  input: "block13/batch_normalization/cond/FusedBatchNorm_1:2"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_50"
  op: "ZerosLike"
  input: "block13/batch_normalization/cond/FusedBatchNorm_1:3"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_51"
  op: "ZerosLike"
  input: "block13/batch_normalization/cond/FusedBatchNorm_1:4"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block13/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/block13/batch_normalization/cond/Merge_grad/tuple/control_dependency"
  input: "block13/batch_normalization/cond/FusedBatchNorm_1/Switch"
  input: "block13/batch_normalization/cond/FusedBatchNorm_1/Switch_1"
  input: "block13/batch_normalization/cond/FusedBatchNorm_1/Switch_3"
  input: "block13/batch_normalization/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/block13/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block13/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/block13/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block13/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^gradients/block13/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block13/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block13/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block13/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^gradients/block13/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block13/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block13/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/block13/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^gradients/block13/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block13/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_52"
  op: "ZerosLike"
  input: "block13/batch_normalization/cond/FusedBatchNorm:1"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_53"
  op: "ZerosLike"
  input: "block13/batch_normalization/cond/FusedBatchNorm:2"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_54"
  op: "ZerosLike"
  input: "block13/batch_normalization/cond/FusedBatchNorm:3"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_55"
  op: "ZerosLike"
  input: "block13/batch_normalization/cond/FusedBatchNorm:4"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block13/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/block13/batch_normalization/cond/Merge_grad/tuple/control_dependency_1"
  input: "block13/batch_normalization/cond/FusedBatchNorm/Switch:1"
  input: "block13/batch_normalization/cond/FusedBatchNorm/Switch_1:1"
  input: "block13/batch_normalization/cond/FusedBatchNorm:3"
  input: "block13/batch_normalization/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block13/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block13/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/block13/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block13/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/block13/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block13/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block13/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block13/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/block13/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block13/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block13/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/block13/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/block13/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block13/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block13/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/block13/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/block13/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block13/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block13/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/block13/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/block13/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block13/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/Switch_36"
  op: "Switch"
  input: "block13/conv13/Conv2D"
  input: "block13/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_37"
  op: "Shape"
  input: "gradients/Switch_36:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_36/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_36"
  op: "Fill"
  input: "gradients/Shape_37"
  input: "gradients/zeros_36/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block13/batch_normalization/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/block13/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "gradients/zeros_36"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_37"
  op: "Switch"
  input: "block13/batch_normalization/gamma/read"
  input: "block13/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_38"
  op: "Shape"
  input: "gradients/Switch_37:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_37/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_37"
  op: "Fill"
  input: "gradients/Shape_38"
  input: "gradients/zeros_37/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block13/batch_normalization/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/block13/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  input: "gradients/zeros_37"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_38"
  op: "Switch"
  input: "block13/batch_normalization/beta/read"
  input: "block13/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_39"
  op: "Shape"
  input: "gradients/Switch_38:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_38/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_38"
  op: "Fill"
  input: "gradients/Shape_39"
  input: "gradients/zeros_38/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block13/batch_normalization/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/block13/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "gradients/zeros_38"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_39"
  op: "Switch"
  input: "block13/conv13/Conv2D"
  input: "block13/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_40"
  op: "Shape"
  input: "gradients/Switch_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_39/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_39"
  op: "Fill"
  input: "gradients/Shape_40"
  input: "gradients/zeros_39/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block13/batch_normalization/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/block13/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency"
  input: "gradients/zeros_39"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_40"
  op: "Switch"
  input: "block13/batch_normalization/gamma/read"
  input: "block13/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_41"
  op: "Shape"
  input: "gradients/Switch_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_40/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_40"
  op: "Fill"
  input: "gradients/Shape_41"
  input: "gradients/zeros_40/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block13/batch_normalization/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/block13/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "gradients/zeros_40"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_41"
  op: "Switch"
  input: "block13/batch_normalization/beta/read"
  input: "block13/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_42"
  op: "Shape"
  input: "gradients/Switch_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_41/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_41"
  op: "Fill"
  input: "gradients/Shape_42"
  input: "gradients/zeros_41/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block13/batch_normalization/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/block13/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "gradients/zeros_41"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_18"
  op: "AddN"
  input: "gradients/block13/batch_normalization/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "gradients/block13/batch_normalization/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block13/batch_normalization/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/block13/conv13/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "block12/Relu"
  input: "block13/conv13/kernel/read"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/block13/conv13/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/block13/conv13/Conv2D_grad/ShapeN"
  input: "block13/conv13/kernel/read"
  input: "gradients/AddN_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block13/conv13/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "block12/Relu"
  input: "gradients/block13/conv13/Conv2D_grad/ShapeN:1"
  input: "gradients/AddN_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block13/conv13/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block13/conv13/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/block13/conv13/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/block13/conv13/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block13/conv13/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/block13/conv13/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block13/conv13/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/block13/conv13/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block13/conv13/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/block13/conv13/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block13/conv13/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/AddN_19"
  op: "AddN"
  input: "gradients/block13/batch_normalization/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  input: "gradients/block13/batch_normalization/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block13/batch_normalization/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/AddN_20"
  op: "AddN"
  input: "gradients/block13/batch_normalization/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  input: "gradients/block13/batch_normalization/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block13/batch_normalization/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/block12/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/block13/conv13/Conv2D_grad/tuple/control_dependency"
  input: "block12/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block12/batch_normalization/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "gradients/block12/Relu_grad/ReluGrad"
  input: "block12/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block12/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/block12/batch_normalization/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block12/batch_normalization/cond/Merge_grad/cond_grad"
}
node {
  name: "gradients/block12/batch_normalization/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block12/batch_normalization/cond/Merge_grad/cond_grad"
  input: "^gradients/block12/batch_normalization/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block12/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/block12/batch_normalization/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block12/batch_normalization/cond/Merge_grad/cond_grad:1"
  input: "^gradients/block12/batch_normalization/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block12/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_56"
  op: "ZerosLike"
  input: "block12/batch_normalization/cond/FusedBatchNorm_1:1"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_57"
  op: "ZerosLike"
  input: "block12/batch_normalization/cond/FusedBatchNorm_1:2"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_58"
  op: "ZerosLike"
  input: "block12/batch_normalization/cond/FusedBatchNorm_1:3"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_59"
  op: "ZerosLike"
  input: "block12/batch_normalization/cond/FusedBatchNorm_1:4"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block12/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/block12/batch_normalization/cond/Merge_grad/tuple/control_dependency"
  input: "block12/batch_normalization/cond/FusedBatchNorm_1/Switch"
  input: "block12/batch_normalization/cond/FusedBatchNorm_1/Switch_1"
  input: "block12/batch_normalization/cond/FusedBatchNorm_1/Switch_3"
  input: "block12/batch_normalization/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/block12/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block12/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/block12/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block12/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^gradients/block12/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block12/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block12/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block12/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^gradients/block12/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block12/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block12/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/block12/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^gradients/block12/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block12/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_60"
  op: "ZerosLike"
  input: "block12/batch_normalization/cond/FusedBatchNorm:1"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_61"
  op: "ZerosLike"
  input: "block12/batch_normalization/cond/FusedBatchNorm:2"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_62"
  op: "ZerosLike"
  input: "block12/batch_normalization/cond/FusedBatchNorm:3"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_63"
  op: "ZerosLike"
  input: "block12/batch_normalization/cond/FusedBatchNorm:4"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block12/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/block12/batch_normalization/cond/Merge_grad/tuple/control_dependency_1"
  input: "block12/batch_normalization/cond/FusedBatchNorm/Switch:1"
  input: "block12/batch_normalization/cond/FusedBatchNorm/Switch_1:1"
  input: "block12/batch_normalization/cond/FusedBatchNorm:3"
  input: "block12/batch_normalization/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block12/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block12/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/block12/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block12/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/block12/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block12/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block12/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block12/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/block12/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block12/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block12/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/block12/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/block12/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block12/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block12/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/block12/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/block12/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block12/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block12/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/block12/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/block12/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block12/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/Switch_42"
  op: "Switch"
  input: "block12/conv12/Conv2D"
  input: "block12/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_43"
  op: "Shape"
  input: "gradients/Switch_42:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_42/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_42"
  op: "Fill"
  input: "gradients/Shape_43"
  input: "gradients/zeros_42/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block12/batch_normalization/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/block12/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "gradients/zeros_42"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_43"
  op: "Switch"
  input: "block12/batch_normalization/gamma/read"
  input: "block12/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_44"
  op: "Shape"
  input: "gradients/Switch_43:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_43/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_43"
  op: "Fill"
  input: "gradients/Shape_44"
  input: "gradients/zeros_43/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block12/batch_normalization/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/block12/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  input: "gradients/zeros_43"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_44"
  op: "Switch"
  input: "block12/batch_normalization/beta/read"
  input: "block12/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_45"
  op: "Shape"
  input: "gradients/Switch_44:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_44/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_44"
  op: "Fill"
  input: "gradients/Shape_45"
  input: "gradients/zeros_44/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block12/batch_normalization/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/block12/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "gradients/zeros_44"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_45"
  op: "Switch"
  input: "block12/conv12/Conv2D"
  input: "block12/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_46"
  op: "Shape"
  input: "gradients/Switch_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_45/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_45"
  op: "Fill"
  input: "gradients/Shape_46"
  input: "gradients/zeros_45/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block12/batch_normalization/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/block12/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency"
  input: "gradients/zeros_45"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_46"
  op: "Switch"
  input: "block12/batch_normalization/gamma/read"
  input: "block12/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_47"
  op: "Shape"
  input: "gradients/Switch_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_46/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_46"
  op: "Fill"
  input: "gradients/Shape_47"
  input: "gradients/zeros_46/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block12/batch_normalization/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/block12/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "gradients/zeros_46"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_47"
  op: "Switch"
  input: "block12/batch_normalization/beta/read"
  input: "block12/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_48"
  op: "Shape"
  input: "gradients/Switch_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_47/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_47"
  op: "Fill"
  input: "gradients/Shape_48"
  input: "gradients/zeros_47/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block12/batch_normalization/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/block12/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "gradients/zeros_47"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_21"
  op: "AddN"
  input: "gradients/block12/batch_normalization/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "gradients/block12/batch_normalization/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block12/batch_normalization/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/block12/conv12/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "block11/Relu"
  input: "block12/conv12/kernel/read"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/block12/conv12/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/block12/conv12/Conv2D_grad/ShapeN"
  input: "block12/conv12/kernel/read"
  input: "gradients/AddN_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block12/conv12/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "block11/Relu"
  input: "gradients/block12/conv12/Conv2D_grad/ShapeN:1"
  input: "gradients/AddN_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block12/conv12/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block12/conv12/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/block12/conv12/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/block12/conv12/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block12/conv12/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/block12/conv12/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block12/conv12/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/block12/conv12/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block12/conv12/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/block12/conv12/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block12/conv12/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/AddN_22"
  op: "AddN"
  input: "gradients/block12/batch_normalization/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  input: "gradients/block12/batch_normalization/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block12/batch_normalization/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/AddN_23"
  op: "AddN"
  input: "gradients/block12/batch_normalization/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  input: "gradients/block12/batch_normalization/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block12/batch_normalization/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/block11/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/block12/conv12/Conv2D_grad/tuple/control_dependency"
  input: "block11/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block11/batch_normalization/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "gradients/block11/Relu_grad/ReluGrad"
  input: "block11/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block11/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/block11/batch_normalization/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block11/batch_normalization/cond/Merge_grad/cond_grad"
}
node {
  name: "gradients/block11/batch_normalization/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block11/batch_normalization/cond/Merge_grad/cond_grad"
  input: "^gradients/block11/batch_normalization/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block11/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/block11/batch_normalization/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block11/batch_normalization/cond/Merge_grad/cond_grad:1"
  input: "^gradients/block11/batch_normalization/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block11/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_64"
  op: "ZerosLike"
  input: "block11/batch_normalization/cond/FusedBatchNorm_1:1"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_65"
  op: "ZerosLike"
  input: "block11/batch_normalization/cond/FusedBatchNorm_1:2"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_66"
  op: "ZerosLike"
  input: "block11/batch_normalization/cond/FusedBatchNorm_1:3"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_67"
  op: "ZerosLike"
  input: "block11/batch_normalization/cond/FusedBatchNorm_1:4"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block11/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/block11/batch_normalization/cond/Merge_grad/tuple/control_dependency"
  input: "block11/batch_normalization/cond/FusedBatchNorm_1/Switch"
  input: "block11/batch_normalization/cond/FusedBatchNorm_1/Switch_1"
  input: "block11/batch_normalization/cond/FusedBatchNorm_1/Switch_3"
  input: "block11/batch_normalization/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/block11/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block11/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/block11/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block11/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^gradients/block11/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block11/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block11/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block11/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^gradients/block11/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block11/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block11/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/block11/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^gradients/block11/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block11/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_68"
  op: "ZerosLike"
  input: "block11/batch_normalization/cond/FusedBatchNorm:1"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_69"
  op: "ZerosLike"
  input: "block11/batch_normalization/cond/FusedBatchNorm:2"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_70"
  op: "ZerosLike"
  input: "block11/batch_normalization/cond/FusedBatchNorm:3"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_71"
  op: "ZerosLike"
  input: "block11/batch_normalization/cond/FusedBatchNorm:4"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block11/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/block11/batch_normalization/cond/Merge_grad/tuple/control_dependency_1"
  input: "block11/batch_normalization/cond/FusedBatchNorm/Switch:1"
  input: "block11/batch_normalization/cond/FusedBatchNorm/Switch_1:1"
  input: "block11/batch_normalization/cond/FusedBatchNorm:3"
  input: "block11/batch_normalization/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block11/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block11/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/block11/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block11/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/block11/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block11/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block11/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block11/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/block11/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block11/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block11/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/block11/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/block11/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block11/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block11/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/block11/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/block11/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block11/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block11/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/block11/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/block11/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block11/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/Switch_48"
  op: "Switch"
  input: "block11/conv11/Conv2D"
  input: "block11/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_49"
  op: "Shape"
  input: "gradients/Switch_48:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_48/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_48"
  op: "Fill"
  input: "gradients/Shape_49"
  input: "gradients/zeros_48/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block11/batch_normalization/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/block11/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "gradients/zeros_48"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_49"
  op: "Switch"
  input: "block11/batch_normalization/gamma/read"
  input: "block11/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_50"
  op: "Shape"
  input: "gradients/Switch_49:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_49/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_49"
  op: "Fill"
  input: "gradients/Shape_50"
  input: "gradients/zeros_49/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block11/batch_normalization/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/block11/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  input: "gradients/zeros_49"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_50"
  op: "Switch"
  input: "block11/batch_normalization/beta/read"
  input: "block11/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_51"
  op: "Shape"
  input: "gradients/Switch_50:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_50/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_50"
  op: "Fill"
  input: "gradients/Shape_51"
  input: "gradients/zeros_50/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block11/batch_normalization/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/block11/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "gradients/zeros_50"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_51"
  op: "Switch"
  input: "block11/conv11/Conv2D"
  input: "block11/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_52"
  op: "Shape"
  input: "gradients/Switch_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_51/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_51"
  op: "Fill"
  input: "gradients/Shape_52"
  input: "gradients/zeros_51/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block11/batch_normalization/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/block11/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency"
  input: "gradients/zeros_51"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_52"
  op: "Switch"
  input: "block11/batch_normalization/gamma/read"
  input: "block11/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_53"
  op: "Shape"
  input: "gradients/Switch_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_52/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_52"
  op: "Fill"
  input: "gradients/Shape_53"
  input: "gradients/zeros_52/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block11/batch_normalization/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/block11/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "gradients/zeros_52"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_53"
  op: "Switch"
  input: "block11/batch_normalization/beta/read"
  input: "block11/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_54"
  op: "Shape"
  input: "gradients/Switch_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_53/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_53"
  op: "Fill"
  input: "gradients/Shape_54"
  input: "gradients/zeros_53/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block11/batch_normalization/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/block11/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "gradients/zeros_53"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_24"
  op: "AddN"
  input: "gradients/block11/batch_normalization/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "gradients/block11/batch_normalization/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block11/batch_normalization/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/block11/conv11/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "block10/Relu"
  input: "block11/conv11/kernel/read"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/block11/conv11/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/block11/conv11/Conv2D_grad/ShapeN"
  input: "block11/conv11/kernel/read"
  input: "gradients/AddN_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block11/conv11/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "block10/Relu"
  input: "gradients/block11/conv11/Conv2D_grad/ShapeN:1"
  input: "gradients/AddN_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block11/conv11/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block11/conv11/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/block11/conv11/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/block11/conv11/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block11/conv11/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/block11/conv11/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block11/conv11/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/block11/conv11/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block11/conv11/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/block11/conv11/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block11/conv11/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/AddN_25"
  op: "AddN"
  input: "gradients/block11/batch_normalization/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  input: "gradients/block11/batch_normalization/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block11/batch_normalization/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/AddN_26"
  op: "AddN"
  input: "gradients/block11/batch_normalization/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  input: "gradients/block11/batch_normalization/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block11/batch_normalization/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/block10/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/block11/conv11/Conv2D_grad/tuple/control_dependency"
  input: "block10/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block10/batch_normalization/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "gradients/block10/Relu_grad/ReluGrad"
  input: "block10/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block10/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/block10/batch_normalization/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block10/batch_normalization/cond/Merge_grad/cond_grad"
}
node {
  name: "gradients/block10/batch_normalization/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block10/batch_normalization/cond/Merge_grad/cond_grad"
  input: "^gradients/block10/batch_normalization/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block10/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/block10/batch_normalization/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block10/batch_normalization/cond/Merge_grad/cond_grad:1"
  input: "^gradients/block10/batch_normalization/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block10/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_72"
  op: "ZerosLike"
  input: "block10/batch_normalization/cond/FusedBatchNorm_1:1"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_73"
  op: "ZerosLike"
  input: "block10/batch_normalization/cond/FusedBatchNorm_1:2"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_74"
  op: "ZerosLike"
  input: "block10/batch_normalization/cond/FusedBatchNorm_1:3"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_75"
  op: "ZerosLike"
  input: "block10/batch_normalization/cond/FusedBatchNorm_1:4"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block10/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/block10/batch_normalization/cond/Merge_grad/tuple/control_dependency"
  input: "block10/batch_normalization/cond/FusedBatchNorm_1/Switch"
  input: "block10/batch_normalization/cond/FusedBatchNorm_1/Switch_1"
  input: "block10/batch_normalization/cond/FusedBatchNorm_1/Switch_3"
  input: "block10/batch_normalization/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/block10/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block10/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/block10/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block10/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^gradients/block10/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block10/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block10/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block10/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^gradients/block10/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block10/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block10/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/block10/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^gradients/block10/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block10/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_76"
  op: "ZerosLike"
  input: "block10/batch_normalization/cond/FusedBatchNorm:1"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_77"
  op: "ZerosLike"
  input: "block10/batch_normalization/cond/FusedBatchNorm:2"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_78"
  op: "ZerosLike"
  input: "block10/batch_normalization/cond/FusedBatchNorm:3"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_79"
  op: "ZerosLike"
  input: "block10/batch_normalization/cond/FusedBatchNorm:4"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block10/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/block10/batch_normalization/cond/Merge_grad/tuple/control_dependency_1"
  input: "block10/batch_normalization/cond/FusedBatchNorm/Switch:1"
  input: "block10/batch_normalization/cond/FusedBatchNorm/Switch_1:1"
  input: "block10/batch_normalization/cond/FusedBatchNorm:3"
  input: "block10/batch_normalization/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block10/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block10/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/block10/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block10/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/block10/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block10/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block10/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block10/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/block10/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block10/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block10/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/block10/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/block10/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block10/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block10/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/block10/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/block10/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block10/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block10/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/block10/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/block10/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block10/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/Switch_54"
  op: "Switch"
  input: "block10/conv10/Conv2D"
  input: "block10/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_55"
  op: "Shape"
  input: "gradients/Switch_54:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_54/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_54"
  op: "Fill"
  input: "gradients/Shape_55"
  input: "gradients/zeros_54/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block10/batch_normalization/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/block10/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "gradients/zeros_54"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_55"
  op: "Switch"
  input: "block10/batch_normalization/gamma/read"
  input: "block10/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_56"
  op: "Shape"
  input: "gradients/Switch_55:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_55/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_55"
  op: "Fill"
  input: "gradients/Shape_56"
  input: "gradients/zeros_55/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block10/batch_normalization/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/block10/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  input: "gradients/zeros_55"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_56"
  op: "Switch"
  input: "block10/batch_normalization/beta/read"
  input: "block10/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_57"
  op: "Shape"
  input: "gradients/Switch_56:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_56/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_56"
  op: "Fill"
  input: "gradients/Shape_57"
  input: "gradients/zeros_56/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block10/batch_normalization/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/block10/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "gradients/zeros_56"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_57"
  op: "Switch"
  input: "block10/conv10/Conv2D"
  input: "block10/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_58"
  op: "Shape"
  input: "gradients/Switch_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_57/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_57"
  op: "Fill"
  input: "gradients/Shape_58"
  input: "gradients/zeros_57/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block10/batch_normalization/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/block10/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency"
  input: "gradients/zeros_57"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_58"
  op: "Switch"
  input: "block10/batch_normalization/gamma/read"
  input: "block10/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_59"
  op: "Shape"
  input: "gradients/Switch_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_58/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_58"
  op: "Fill"
  input: "gradients/Shape_59"
  input: "gradients/zeros_58/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block10/batch_normalization/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/block10/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "gradients/zeros_58"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_59"
  op: "Switch"
  input: "block10/batch_normalization/beta/read"
  input: "block10/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_60"
  op: "Shape"
  input: "gradients/Switch_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_59/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_59"
  op: "Fill"
  input: "gradients/Shape_60"
  input: "gradients/zeros_59/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block10/batch_normalization/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/block10/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "gradients/zeros_59"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_27"
  op: "AddN"
  input: "gradients/block10/batch_normalization/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "gradients/block10/batch_normalization/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block10/batch_normalization/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/block10/conv10/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "block9/Relu"
  input: "block10/conv10/kernel/read"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/block10/conv10/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/block10/conv10/Conv2D_grad/ShapeN"
  input: "block10/conv10/kernel/read"
  input: "gradients/AddN_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block10/conv10/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "block9/Relu"
  input: "gradients/block10/conv10/Conv2D_grad/ShapeN:1"
  input: "gradients/AddN_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block10/conv10/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block10/conv10/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/block10/conv10/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/block10/conv10/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block10/conv10/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/block10/conv10/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block10/conv10/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/block10/conv10/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block10/conv10/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/block10/conv10/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block10/conv10/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/AddN_28"
  op: "AddN"
  input: "gradients/block10/batch_normalization/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  input: "gradients/block10/batch_normalization/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block10/batch_normalization/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/AddN_29"
  op: "AddN"
  input: "gradients/block10/batch_normalization/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  input: "gradients/block10/batch_normalization/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block10/batch_normalization/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/block9/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/block10/conv10/Conv2D_grad/tuple/control_dependency"
  input: "block9/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block9/batch_normalization/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "gradients/block9/Relu_grad/ReluGrad"
  input: "block9/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block9/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/block9/batch_normalization/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block9/batch_normalization/cond/Merge_grad/cond_grad"
}
node {
  name: "gradients/block9/batch_normalization/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block9/batch_normalization/cond/Merge_grad/cond_grad"
  input: "^gradients/block9/batch_normalization/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block9/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/block9/batch_normalization/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block9/batch_normalization/cond/Merge_grad/cond_grad:1"
  input: "^gradients/block9/batch_normalization/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block9/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_80"
  op: "ZerosLike"
  input: "block9/batch_normalization/cond/FusedBatchNorm_1:1"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_81"
  op: "ZerosLike"
  input: "block9/batch_normalization/cond/FusedBatchNorm_1:2"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_82"
  op: "ZerosLike"
  input: "block9/batch_normalization/cond/FusedBatchNorm_1:3"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_83"
  op: "ZerosLike"
  input: "block9/batch_normalization/cond/FusedBatchNorm_1:4"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block9/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/block9/batch_normalization/cond/Merge_grad/tuple/control_dependency"
  input: "block9/batch_normalization/cond/FusedBatchNorm_1/Switch"
  input: "block9/batch_normalization/cond/FusedBatchNorm_1/Switch_1"
  input: "block9/batch_normalization/cond/FusedBatchNorm_1/Switch_3"
  input: "block9/batch_normalization/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/block9/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block9/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/block9/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block9/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^gradients/block9/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block9/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block9/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block9/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^gradients/block9/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block9/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block9/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/block9/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^gradients/block9/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block9/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_84"
  op: "ZerosLike"
  input: "block9/batch_normalization/cond/FusedBatchNorm:1"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_85"
  op: "ZerosLike"
  input: "block9/batch_normalization/cond/FusedBatchNorm:2"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_86"
  op: "ZerosLike"
  input: "block9/batch_normalization/cond/FusedBatchNorm:3"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_87"
  op: "ZerosLike"
  input: "block9/batch_normalization/cond/FusedBatchNorm:4"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block9/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/block9/batch_normalization/cond/Merge_grad/tuple/control_dependency_1"
  input: "block9/batch_normalization/cond/FusedBatchNorm/Switch:1"
  input: "block9/batch_normalization/cond/FusedBatchNorm/Switch_1:1"
  input: "block9/batch_normalization/cond/FusedBatchNorm:3"
  input: "block9/batch_normalization/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block9/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block9/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/block9/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block9/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/block9/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block9/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block9/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block9/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/block9/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block9/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block9/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/block9/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/block9/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block9/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block9/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/block9/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/block9/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block9/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block9/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/block9/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/block9/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block9/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/Switch_60"
  op: "Switch"
  input: "block9/conv9/Conv2D"
  input: "block9/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_61"
  op: "Shape"
  input: "gradients/Switch_60:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_60/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_60"
  op: "Fill"
  input: "gradients/Shape_61"
  input: "gradients/zeros_60/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block9/batch_normalization/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/block9/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "gradients/zeros_60"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_61"
  op: "Switch"
  input: "block9/batch_normalization/gamma/read"
  input: "block9/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_62"
  op: "Shape"
  input: "gradients/Switch_61:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_61/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_61"
  op: "Fill"
  input: "gradients/Shape_62"
  input: "gradients/zeros_61/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block9/batch_normalization/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/block9/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  input: "gradients/zeros_61"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_62"
  op: "Switch"
  input: "block9/batch_normalization/beta/read"
  input: "block9/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_63"
  op: "Shape"
  input: "gradients/Switch_62:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_62/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_62"
  op: "Fill"
  input: "gradients/Shape_63"
  input: "gradients/zeros_62/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block9/batch_normalization/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/block9/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "gradients/zeros_62"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_63"
  op: "Switch"
  input: "block9/conv9/Conv2D"
  input: "block9/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_64"
  op: "Shape"
  input: "gradients/Switch_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_63/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_63"
  op: "Fill"
  input: "gradients/Shape_64"
  input: "gradients/zeros_63/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block9/batch_normalization/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/block9/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency"
  input: "gradients/zeros_63"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_64"
  op: "Switch"
  input: "block9/batch_normalization/gamma/read"
  input: "block9/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_65"
  op: "Shape"
  input: "gradients/Switch_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_64/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_64"
  op: "Fill"
  input: "gradients/Shape_65"
  input: "gradients/zeros_64/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block9/batch_normalization/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/block9/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "gradients/zeros_64"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_65"
  op: "Switch"
  input: "block9/batch_normalization/beta/read"
  input: "block9/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_66"
  op: "Shape"
  input: "gradients/Switch_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_65/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_65"
  op: "Fill"
  input: "gradients/Shape_66"
  input: "gradients/zeros_65/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block9/batch_normalization/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/block9/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "gradients/zeros_65"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_30"
  op: "AddN"
  input: "gradients/block9/batch_normalization/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "gradients/block9/batch_normalization/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block9/batch_normalization/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/block9/conv9/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "block8/Relu"
  input: "block9/conv9/kernel/read"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/block9/conv9/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/block9/conv9/Conv2D_grad/ShapeN"
  input: "block9/conv9/kernel/read"
  input: "gradients/AddN_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block9/conv9/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "block8/Relu"
  input: "gradients/block9/conv9/Conv2D_grad/ShapeN:1"
  input: "gradients/AddN_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block9/conv9/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block9/conv9/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/block9/conv9/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/block9/conv9/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block9/conv9/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/block9/conv9/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block9/conv9/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/block9/conv9/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block9/conv9/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/block9/conv9/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block9/conv9/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/AddN_31"
  op: "AddN"
  input: "gradients/block9/batch_normalization/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  input: "gradients/block9/batch_normalization/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block9/batch_normalization/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/AddN_32"
  op: "AddN"
  input: "gradients/block9/batch_normalization/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  input: "gradients/block9/batch_normalization/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block9/batch_normalization/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/block8/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/block9/conv9/Conv2D_grad/tuple/control_dependency"
  input: "block8/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block8/batch_normalization/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "gradients/block8/Relu_grad/ReluGrad"
  input: "block8/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block8/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/block8/batch_normalization/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block8/batch_normalization/cond/Merge_grad/cond_grad"
}
node {
  name: "gradients/block8/batch_normalization/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block8/batch_normalization/cond/Merge_grad/cond_grad"
  input: "^gradients/block8/batch_normalization/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block8/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/block8/batch_normalization/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block8/batch_normalization/cond/Merge_grad/cond_grad:1"
  input: "^gradients/block8/batch_normalization/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block8/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_88"
  op: "ZerosLike"
  input: "block8/batch_normalization/cond/FusedBatchNorm_1:1"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_89"
  op: "ZerosLike"
  input: "block8/batch_normalization/cond/FusedBatchNorm_1:2"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_90"
  op: "ZerosLike"
  input: "block8/batch_normalization/cond/FusedBatchNorm_1:3"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_91"
  op: "ZerosLike"
  input: "block8/batch_normalization/cond/FusedBatchNorm_1:4"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block8/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/block8/batch_normalization/cond/Merge_grad/tuple/control_dependency"
  input: "block8/batch_normalization/cond/FusedBatchNorm_1/Switch"
  input: "block8/batch_normalization/cond/FusedBatchNorm_1/Switch_1"
  input: "block8/batch_normalization/cond/FusedBatchNorm_1/Switch_3"
  input: "block8/batch_normalization/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/block8/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block8/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/block8/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block8/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^gradients/block8/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block8/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block8/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block8/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^gradients/block8/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block8/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block8/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/block8/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^gradients/block8/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block8/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_92"
  op: "ZerosLike"
  input: "block8/batch_normalization/cond/FusedBatchNorm:1"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_93"
  op: "ZerosLike"
  input: "block8/batch_normalization/cond/FusedBatchNorm:2"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_94"
  op: "ZerosLike"
  input: "block8/batch_normalization/cond/FusedBatchNorm:3"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_95"
  op: "ZerosLike"
  input: "block8/batch_normalization/cond/FusedBatchNorm:4"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block8/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/block8/batch_normalization/cond/Merge_grad/tuple/control_dependency_1"
  input: "block8/batch_normalization/cond/FusedBatchNorm/Switch:1"
  input: "block8/batch_normalization/cond/FusedBatchNorm/Switch_1:1"
  input: "block8/batch_normalization/cond/FusedBatchNorm:3"
  input: "block8/batch_normalization/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block8/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block8/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/block8/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block8/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/block8/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block8/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block8/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block8/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/block8/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block8/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block8/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/block8/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/block8/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block8/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block8/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/block8/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/block8/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block8/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block8/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/block8/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/block8/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block8/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/Switch_66"
  op: "Switch"
  input: "block8/conv8/Conv2D"
  input: "block8/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_67"
  op: "Shape"
  input: "gradients/Switch_66:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_66/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_66"
  op: "Fill"
  input: "gradients/Shape_67"
  input: "gradients/zeros_66/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block8/batch_normalization/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/block8/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "gradients/zeros_66"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_67"
  op: "Switch"
  input: "block8/batch_normalization/gamma/read"
  input: "block8/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_68"
  op: "Shape"
  input: "gradients/Switch_67:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_67/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_67"
  op: "Fill"
  input: "gradients/Shape_68"
  input: "gradients/zeros_67/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block8/batch_normalization/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/block8/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  input: "gradients/zeros_67"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_68"
  op: "Switch"
  input: "block8/batch_normalization/beta/read"
  input: "block8/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_69"
  op: "Shape"
  input: "gradients/Switch_68:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_68/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_68"
  op: "Fill"
  input: "gradients/Shape_69"
  input: "gradients/zeros_68/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block8/batch_normalization/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/block8/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "gradients/zeros_68"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_69"
  op: "Switch"
  input: "block8/conv8/Conv2D"
  input: "block8/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_70"
  op: "Shape"
  input: "gradients/Switch_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_69/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_69"
  op: "Fill"
  input: "gradients/Shape_70"
  input: "gradients/zeros_69/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block8/batch_normalization/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/block8/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency"
  input: "gradients/zeros_69"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_70"
  op: "Switch"
  input: "block8/batch_normalization/gamma/read"
  input: "block8/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_71"
  op: "Shape"
  input: "gradients/Switch_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_70/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_70"
  op: "Fill"
  input: "gradients/Shape_71"
  input: "gradients/zeros_70/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block8/batch_normalization/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/block8/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "gradients/zeros_70"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_71"
  op: "Switch"
  input: "block8/batch_normalization/beta/read"
  input: "block8/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_72"
  op: "Shape"
  input: "gradients/Switch_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_71/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_71"
  op: "Fill"
  input: "gradients/Shape_72"
  input: "gradients/zeros_71/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block8/batch_normalization/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/block8/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "gradients/zeros_71"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_33"
  op: "AddN"
  input: "gradients/block8/batch_normalization/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "gradients/block8/batch_normalization/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block8/batch_normalization/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/block8/conv8/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "block7/Relu"
  input: "block8/conv8/kernel/read"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/block8/conv8/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/block8/conv8/Conv2D_grad/ShapeN"
  input: "block8/conv8/kernel/read"
  input: "gradients/AddN_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block8/conv8/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "block7/Relu"
  input: "gradients/block8/conv8/Conv2D_grad/ShapeN:1"
  input: "gradients/AddN_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block8/conv8/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block8/conv8/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/block8/conv8/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/block8/conv8/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block8/conv8/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/block8/conv8/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block8/conv8/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/block8/conv8/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block8/conv8/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/block8/conv8/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block8/conv8/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/AddN_34"
  op: "AddN"
  input: "gradients/block8/batch_normalization/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  input: "gradients/block8/batch_normalization/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block8/batch_normalization/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/AddN_35"
  op: "AddN"
  input: "gradients/block8/batch_normalization/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  input: "gradients/block8/batch_normalization/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block8/batch_normalization/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/block7/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/block8/conv8/Conv2D_grad/tuple/control_dependency"
  input: "block7/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block7/batch_normalization/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "gradients/block7/Relu_grad/ReluGrad"
  input: "block7/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block7/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/block7/batch_normalization/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block7/batch_normalization/cond/Merge_grad/cond_grad"
}
node {
  name: "gradients/block7/batch_normalization/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block7/batch_normalization/cond/Merge_grad/cond_grad"
  input: "^gradients/block7/batch_normalization/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block7/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/block7/batch_normalization/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block7/batch_normalization/cond/Merge_grad/cond_grad:1"
  input: "^gradients/block7/batch_normalization/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block7/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_96"
  op: "ZerosLike"
  input: "block7/batch_normalization/cond/FusedBatchNorm_1:1"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_97"
  op: "ZerosLike"
  input: "block7/batch_normalization/cond/FusedBatchNorm_1:2"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_98"
  op: "ZerosLike"
  input: "block7/batch_normalization/cond/FusedBatchNorm_1:3"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_99"
  op: "ZerosLike"
  input: "block7/batch_normalization/cond/FusedBatchNorm_1:4"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block7/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/block7/batch_normalization/cond/Merge_grad/tuple/control_dependency"
  input: "block7/batch_normalization/cond/FusedBatchNorm_1/Switch"
  input: "block7/batch_normalization/cond/FusedBatchNorm_1/Switch_1"
  input: "block7/batch_normalization/cond/FusedBatchNorm_1/Switch_3"
  input: "block7/batch_normalization/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/block7/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block7/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/block7/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block7/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^gradients/block7/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block7/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block7/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block7/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^gradients/block7/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block7/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block7/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/block7/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^gradients/block7/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block7/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_100"
  op: "ZerosLike"
  input: "block7/batch_normalization/cond/FusedBatchNorm:1"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_101"
  op: "ZerosLike"
  input: "block7/batch_normalization/cond/FusedBatchNorm:2"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_102"
  op: "ZerosLike"
  input: "block7/batch_normalization/cond/FusedBatchNorm:3"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_103"
  op: "ZerosLike"
  input: "block7/batch_normalization/cond/FusedBatchNorm:4"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block7/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/block7/batch_normalization/cond/Merge_grad/tuple/control_dependency_1"
  input: "block7/batch_normalization/cond/FusedBatchNorm/Switch:1"
  input: "block7/batch_normalization/cond/FusedBatchNorm/Switch_1:1"
  input: "block7/batch_normalization/cond/FusedBatchNorm:3"
  input: "block7/batch_normalization/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block7/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block7/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/block7/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block7/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/block7/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block7/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block7/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block7/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/block7/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block7/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block7/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/block7/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/block7/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block7/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block7/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/block7/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/block7/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block7/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block7/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/block7/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/block7/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block7/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/Switch_72"
  op: "Switch"
  input: "block7/conv7/Conv2D"
  input: "block7/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_73"
  op: "Shape"
  input: "gradients/Switch_72:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_72/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_72"
  op: "Fill"
  input: "gradients/Shape_73"
  input: "gradients/zeros_72/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block7/batch_normalization/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/block7/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "gradients/zeros_72"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_73"
  op: "Switch"
  input: "block7/batch_normalization/gamma/read"
  input: "block7/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_74"
  op: "Shape"
  input: "gradients/Switch_73:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_73/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_73"
  op: "Fill"
  input: "gradients/Shape_74"
  input: "gradients/zeros_73/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block7/batch_normalization/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/block7/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  input: "gradients/zeros_73"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_74"
  op: "Switch"
  input: "block7/batch_normalization/beta/read"
  input: "block7/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_75"
  op: "Shape"
  input: "gradients/Switch_74:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_74/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_74"
  op: "Fill"
  input: "gradients/Shape_75"
  input: "gradients/zeros_74/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block7/batch_normalization/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/block7/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "gradients/zeros_74"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_75"
  op: "Switch"
  input: "block7/conv7/Conv2D"
  input: "block7/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_76"
  op: "Shape"
  input: "gradients/Switch_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_75/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_75"
  op: "Fill"
  input: "gradients/Shape_76"
  input: "gradients/zeros_75/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block7/batch_normalization/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/block7/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency"
  input: "gradients/zeros_75"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_76"
  op: "Switch"
  input: "block7/batch_normalization/gamma/read"
  input: "block7/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_77"
  op: "Shape"
  input: "gradients/Switch_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_76/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_76"
  op: "Fill"
  input: "gradients/Shape_77"
  input: "gradients/zeros_76/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block7/batch_normalization/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/block7/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "gradients/zeros_76"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_77"
  op: "Switch"
  input: "block7/batch_normalization/beta/read"
  input: "block7/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_78"
  op: "Shape"
  input: "gradients/Switch_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_77/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_77"
  op: "Fill"
  input: "gradients/Shape_78"
  input: "gradients/zeros_77/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block7/batch_normalization/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/block7/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "gradients/zeros_77"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_36"
  op: "AddN"
  input: "gradients/block7/batch_normalization/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "gradients/block7/batch_normalization/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block7/batch_normalization/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/block7/conv7/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "block6/Relu"
  input: "block7/conv7/kernel/read"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/block7/conv7/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/block7/conv7/Conv2D_grad/ShapeN"
  input: "block7/conv7/kernel/read"
  input: "gradients/AddN_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block7/conv7/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "block6/Relu"
  input: "gradients/block7/conv7/Conv2D_grad/ShapeN:1"
  input: "gradients/AddN_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block7/conv7/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block7/conv7/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/block7/conv7/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/block7/conv7/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block7/conv7/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/block7/conv7/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block7/conv7/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/block7/conv7/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block7/conv7/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/block7/conv7/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block7/conv7/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/AddN_37"
  op: "AddN"
  input: "gradients/block7/batch_normalization/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  input: "gradients/block7/batch_normalization/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block7/batch_normalization/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/AddN_38"
  op: "AddN"
  input: "gradients/block7/batch_normalization/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  input: "gradients/block7/batch_normalization/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block7/batch_normalization/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/block6/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/block7/conv7/Conv2D_grad/tuple/control_dependency"
  input: "block6/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block6/batch_normalization/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "gradients/block6/Relu_grad/ReluGrad"
  input: "block6/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block6/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/block6/batch_normalization/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block6/batch_normalization/cond/Merge_grad/cond_grad"
}
node {
  name: "gradients/block6/batch_normalization/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block6/batch_normalization/cond/Merge_grad/cond_grad"
  input: "^gradients/block6/batch_normalization/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block6/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/block6/batch_normalization/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block6/batch_normalization/cond/Merge_grad/cond_grad:1"
  input: "^gradients/block6/batch_normalization/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block6/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_104"
  op: "ZerosLike"
  input: "block6/batch_normalization/cond/FusedBatchNorm_1:1"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_105"
  op: "ZerosLike"
  input: "block6/batch_normalization/cond/FusedBatchNorm_1:2"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_106"
  op: "ZerosLike"
  input: "block6/batch_normalization/cond/FusedBatchNorm_1:3"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_107"
  op: "ZerosLike"
  input: "block6/batch_normalization/cond/FusedBatchNorm_1:4"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block6/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/block6/batch_normalization/cond/Merge_grad/tuple/control_dependency"
  input: "block6/batch_normalization/cond/FusedBatchNorm_1/Switch"
  input: "block6/batch_normalization/cond/FusedBatchNorm_1/Switch_1"
  input: "block6/batch_normalization/cond/FusedBatchNorm_1/Switch_3"
  input: "block6/batch_normalization/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/block6/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block6/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/block6/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block6/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^gradients/block6/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block6/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block6/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block6/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^gradients/block6/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block6/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block6/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/block6/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^gradients/block6/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block6/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_108"
  op: "ZerosLike"
  input: "block6/batch_normalization/cond/FusedBatchNorm:1"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_109"
  op: "ZerosLike"
  input: "block6/batch_normalization/cond/FusedBatchNorm:2"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_110"
  op: "ZerosLike"
  input: "block6/batch_normalization/cond/FusedBatchNorm:3"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_111"
  op: "ZerosLike"
  input: "block6/batch_normalization/cond/FusedBatchNorm:4"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block6/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/block6/batch_normalization/cond/Merge_grad/tuple/control_dependency_1"
  input: "block6/batch_normalization/cond/FusedBatchNorm/Switch:1"
  input: "block6/batch_normalization/cond/FusedBatchNorm/Switch_1:1"
  input: "block6/batch_normalization/cond/FusedBatchNorm:3"
  input: "block6/batch_normalization/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block6/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block6/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/block6/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block6/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/block6/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block6/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block6/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block6/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/block6/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block6/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block6/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/block6/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/block6/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block6/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block6/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/block6/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/block6/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block6/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block6/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/block6/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/block6/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block6/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/Switch_78"
  op: "Switch"
  input: "block6/conv6/Conv2D"
  input: "block6/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_79"
  op: "Shape"
  input: "gradients/Switch_78:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_78/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_78"
  op: "Fill"
  input: "gradients/Shape_79"
  input: "gradients/zeros_78/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block6/batch_normalization/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/block6/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "gradients/zeros_78"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_79"
  op: "Switch"
  input: "block6/batch_normalization/gamma/read"
  input: "block6/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_80"
  op: "Shape"
  input: "gradients/Switch_79:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_79/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_79"
  op: "Fill"
  input: "gradients/Shape_80"
  input: "gradients/zeros_79/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block6/batch_normalization/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/block6/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  input: "gradients/zeros_79"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_80"
  op: "Switch"
  input: "block6/batch_normalization/beta/read"
  input: "block6/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_81"
  op: "Shape"
  input: "gradients/Switch_80:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_80/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_80"
  op: "Fill"
  input: "gradients/Shape_81"
  input: "gradients/zeros_80/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block6/batch_normalization/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/block6/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "gradients/zeros_80"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_81"
  op: "Switch"
  input: "block6/conv6/Conv2D"
  input: "block6/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_82"
  op: "Shape"
  input: "gradients/Switch_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_81/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_81"
  op: "Fill"
  input: "gradients/Shape_82"
  input: "gradients/zeros_81/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block6/batch_normalization/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/block6/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency"
  input: "gradients/zeros_81"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_82"
  op: "Switch"
  input: "block6/batch_normalization/gamma/read"
  input: "block6/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_83"
  op: "Shape"
  input: "gradients/Switch_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_82/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_82"
  op: "Fill"
  input: "gradients/Shape_83"
  input: "gradients/zeros_82/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block6/batch_normalization/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/block6/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "gradients/zeros_82"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_83"
  op: "Switch"
  input: "block6/batch_normalization/beta/read"
  input: "block6/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_84"
  op: "Shape"
  input: "gradients/Switch_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_83/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_83"
  op: "Fill"
  input: "gradients/Shape_84"
  input: "gradients/zeros_83/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block6/batch_normalization/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/block6/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "gradients/zeros_83"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_39"
  op: "AddN"
  input: "gradients/block6/batch_normalization/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "gradients/block6/batch_normalization/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block6/batch_normalization/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/block6/conv6/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "block5/Relu"
  input: "block6/conv6/kernel/read"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/block6/conv6/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/block6/conv6/Conv2D_grad/ShapeN"
  input: "block6/conv6/kernel/read"
  input: "gradients/AddN_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block6/conv6/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "block5/Relu"
  input: "gradients/block6/conv6/Conv2D_grad/ShapeN:1"
  input: "gradients/AddN_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block6/conv6/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block6/conv6/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/block6/conv6/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/block6/conv6/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block6/conv6/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/block6/conv6/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block6/conv6/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/block6/conv6/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block6/conv6/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/block6/conv6/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block6/conv6/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/AddN_40"
  op: "AddN"
  input: "gradients/block6/batch_normalization/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  input: "gradients/block6/batch_normalization/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block6/batch_normalization/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/AddN_41"
  op: "AddN"
  input: "gradients/block6/batch_normalization/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  input: "gradients/block6/batch_normalization/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block6/batch_normalization/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/block5/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/block6/conv6/Conv2D_grad/tuple/control_dependency"
  input: "block5/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block5/batch_normalization/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "gradients/block5/Relu_grad/ReluGrad"
  input: "block5/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block5/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/block5/batch_normalization/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block5/batch_normalization/cond/Merge_grad/cond_grad"
}
node {
  name: "gradients/block5/batch_normalization/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block5/batch_normalization/cond/Merge_grad/cond_grad"
  input: "^gradients/block5/batch_normalization/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block5/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/block5/batch_normalization/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block5/batch_normalization/cond/Merge_grad/cond_grad:1"
  input: "^gradients/block5/batch_normalization/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block5/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_112"
  op: "ZerosLike"
  input: "block5/batch_normalization/cond/FusedBatchNorm_1:1"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_113"
  op: "ZerosLike"
  input: "block5/batch_normalization/cond/FusedBatchNorm_1:2"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_114"
  op: "ZerosLike"
  input: "block5/batch_normalization/cond/FusedBatchNorm_1:3"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_115"
  op: "ZerosLike"
  input: "block5/batch_normalization/cond/FusedBatchNorm_1:4"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block5/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/block5/batch_normalization/cond/Merge_grad/tuple/control_dependency"
  input: "block5/batch_normalization/cond/FusedBatchNorm_1/Switch"
  input: "block5/batch_normalization/cond/FusedBatchNorm_1/Switch_1"
  input: "block5/batch_normalization/cond/FusedBatchNorm_1/Switch_3"
  input: "block5/batch_normalization/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/block5/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block5/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/block5/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block5/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^gradients/block5/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block5/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block5/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block5/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^gradients/block5/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block5/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block5/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/block5/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^gradients/block5/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block5/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_116"
  op: "ZerosLike"
  input: "block5/batch_normalization/cond/FusedBatchNorm:1"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_117"
  op: "ZerosLike"
  input: "block5/batch_normalization/cond/FusedBatchNorm:2"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_118"
  op: "ZerosLike"
  input: "block5/batch_normalization/cond/FusedBatchNorm:3"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_119"
  op: "ZerosLike"
  input: "block5/batch_normalization/cond/FusedBatchNorm:4"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block5/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/block5/batch_normalization/cond/Merge_grad/tuple/control_dependency_1"
  input: "block5/batch_normalization/cond/FusedBatchNorm/Switch:1"
  input: "block5/batch_normalization/cond/FusedBatchNorm/Switch_1:1"
  input: "block5/batch_normalization/cond/FusedBatchNorm:3"
  input: "block5/batch_normalization/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block5/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block5/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/block5/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block5/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/block5/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block5/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block5/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block5/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/block5/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block5/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block5/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/block5/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/block5/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block5/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block5/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/block5/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/block5/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block5/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block5/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/block5/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/block5/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block5/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/Switch_84"
  op: "Switch"
  input: "block5/conv5/Conv2D"
  input: "block5/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_85"
  op: "Shape"
  input: "gradients/Switch_84:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_84/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_84"
  op: "Fill"
  input: "gradients/Shape_85"
  input: "gradients/zeros_84/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block5/batch_normalization/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/block5/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "gradients/zeros_84"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_85"
  op: "Switch"
  input: "block5/batch_normalization/gamma/read"
  input: "block5/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_86"
  op: "Shape"
  input: "gradients/Switch_85:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_85/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_85"
  op: "Fill"
  input: "gradients/Shape_86"
  input: "gradients/zeros_85/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block5/batch_normalization/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/block5/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  input: "gradients/zeros_85"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_86"
  op: "Switch"
  input: "block5/batch_normalization/beta/read"
  input: "block5/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_87"
  op: "Shape"
  input: "gradients/Switch_86:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_86/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_86"
  op: "Fill"
  input: "gradients/Shape_87"
  input: "gradients/zeros_86/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block5/batch_normalization/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/block5/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "gradients/zeros_86"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_87"
  op: "Switch"
  input: "block5/conv5/Conv2D"
  input: "block5/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_88"
  op: "Shape"
  input: "gradients/Switch_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_87/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_87"
  op: "Fill"
  input: "gradients/Shape_88"
  input: "gradients/zeros_87/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block5/batch_normalization/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/block5/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency"
  input: "gradients/zeros_87"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_88"
  op: "Switch"
  input: "block5/batch_normalization/gamma/read"
  input: "block5/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_89"
  op: "Shape"
  input: "gradients/Switch_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_88/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_88"
  op: "Fill"
  input: "gradients/Shape_89"
  input: "gradients/zeros_88/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block5/batch_normalization/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/block5/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "gradients/zeros_88"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_89"
  op: "Switch"
  input: "block5/batch_normalization/beta/read"
  input: "block5/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_90"
  op: "Shape"
  input: "gradients/Switch_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_89/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_89"
  op: "Fill"
  input: "gradients/Shape_90"
  input: "gradients/zeros_89/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block5/batch_normalization/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/block5/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "gradients/zeros_89"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_42"
  op: "AddN"
  input: "gradients/block5/batch_normalization/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "gradients/block5/batch_normalization/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block5/batch_normalization/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/block5/conv5/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "block4/Relu"
  input: "block5/conv5/kernel/read"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/block5/conv5/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/block5/conv5/Conv2D_grad/ShapeN"
  input: "block5/conv5/kernel/read"
  input: "gradients/AddN_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block5/conv5/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "block4/Relu"
  input: "gradients/block5/conv5/Conv2D_grad/ShapeN:1"
  input: "gradients/AddN_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block5/conv5/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block5/conv5/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/block5/conv5/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/block5/conv5/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block5/conv5/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/block5/conv5/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block5/conv5/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/block5/conv5/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block5/conv5/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/block5/conv5/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block5/conv5/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/AddN_43"
  op: "AddN"
  input: "gradients/block5/batch_normalization/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  input: "gradients/block5/batch_normalization/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block5/batch_normalization/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/AddN_44"
  op: "AddN"
  input: "gradients/block5/batch_normalization/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  input: "gradients/block5/batch_normalization/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block5/batch_normalization/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/block4/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/block5/conv5/Conv2D_grad/tuple/control_dependency"
  input: "block4/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block4/batch_normalization/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "gradients/block4/Relu_grad/ReluGrad"
  input: "block4/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block4/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/block4/batch_normalization/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block4/batch_normalization/cond/Merge_grad/cond_grad"
}
node {
  name: "gradients/block4/batch_normalization/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block4/batch_normalization/cond/Merge_grad/cond_grad"
  input: "^gradients/block4/batch_normalization/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block4/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/block4/batch_normalization/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block4/batch_normalization/cond/Merge_grad/cond_grad:1"
  input: "^gradients/block4/batch_normalization/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block4/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_120"
  op: "ZerosLike"
  input: "block4/batch_normalization/cond/FusedBatchNorm_1:1"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_121"
  op: "ZerosLike"
  input: "block4/batch_normalization/cond/FusedBatchNorm_1:2"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_122"
  op: "ZerosLike"
  input: "block4/batch_normalization/cond/FusedBatchNorm_1:3"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_123"
  op: "ZerosLike"
  input: "block4/batch_normalization/cond/FusedBatchNorm_1:4"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block4/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/block4/batch_normalization/cond/Merge_grad/tuple/control_dependency"
  input: "block4/batch_normalization/cond/FusedBatchNorm_1/Switch"
  input: "block4/batch_normalization/cond/FusedBatchNorm_1/Switch_1"
  input: "block4/batch_normalization/cond/FusedBatchNorm_1/Switch_3"
  input: "block4/batch_normalization/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/block4/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block4/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/block4/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block4/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^gradients/block4/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block4/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block4/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block4/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^gradients/block4/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block4/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block4/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/block4/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^gradients/block4/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block4/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_124"
  op: "ZerosLike"
  input: "block4/batch_normalization/cond/FusedBatchNorm:1"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_125"
  op: "ZerosLike"
  input: "block4/batch_normalization/cond/FusedBatchNorm:2"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_126"
  op: "ZerosLike"
  input: "block4/batch_normalization/cond/FusedBatchNorm:3"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_127"
  op: "ZerosLike"
  input: "block4/batch_normalization/cond/FusedBatchNorm:4"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block4/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/block4/batch_normalization/cond/Merge_grad/tuple/control_dependency_1"
  input: "block4/batch_normalization/cond/FusedBatchNorm/Switch:1"
  input: "block4/batch_normalization/cond/FusedBatchNorm/Switch_1:1"
  input: "block4/batch_normalization/cond/FusedBatchNorm:3"
  input: "block4/batch_normalization/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block4/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block4/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/block4/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block4/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/block4/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block4/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block4/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block4/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/block4/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block4/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block4/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/block4/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/block4/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block4/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block4/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/block4/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/block4/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block4/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block4/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/block4/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/block4/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block4/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/Switch_90"
  op: "Switch"
  input: "block4/conv4/Conv2D"
  input: "block4/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_91"
  op: "Shape"
  input: "gradients/Switch_90:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_90/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_90"
  op: "Fill"
  input: "gradients/Shape_91"
  input: "gradients/zeros_90/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block4/batch_normalization/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/block4/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "gradients/zeros_90"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_91"
  op: "Switch"
  input: "block4/batch_normalization/gamma/read"
  input: "block4/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_92"
  op: "Shape"
  input: "gradients/Switch_91:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_91/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_91"
  op: "Fill"
  input: "gradients/Shape_92"
  input: "gradients/zeros_91/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block4/batch_normalization/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/block4/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  input: "gradients/zeros_91"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_92"
  op: "Switch"
  input: "block4/batch_normalization/beta/read"
  input: "block4/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_93"
  op: "Shape"
  input: "gradients/Switch_92:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_92/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_92"
  op: "Fill"
  input: "gradients/Shape_93"
  input: "gradients/zeros_92/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block4/batch_normalization/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/block4/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "gradients/zeros_92"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_93"
  op: "Switch"
  input: "block4/conv4/Conv2D"
  input: "block4/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_94"
  op: "Shape"
  input: "gradients/Switch_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_93/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_93"
  op: "Fill"
  input: "gradients/Shape_94"
  input: "gradients/zeros_93/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block4/batch_normalization/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/block4/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency"
  input: "gradients/zeros_93"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_94"
  op: "Switch"
  input: "block4/batch_normalization/gamma/read"
  input: "block4/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_95"
  op: "Shape"
  input: "gradients/Switch_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_94/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_94"
  op: "Fill"
  input: "gradients/Shape_95"
  input: "gradients/zeros_94/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block4/batch_normalization/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/block4/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "gradients/zeros_94"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_95"
  op: "Switch"
  input: "block4/batch_normalization/beta/read"
  input: "block4/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_96"
  op: "Shape"
  input: "gradients/Switch_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_95/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_95"
  op: "Fill"
  input: "gradients/Shape_96"
  input: "gradients/zeros_95/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block4/batch_normalization/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/block4/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "gradients/zeros_95"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_45"
  op: "AddN"
  input: "gradients/block4/batch_normalization/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "gradients/block4/batch_normalization/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block4/batch_normalization/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/block4/conv4/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "block3/Relu"
  input: "block4/conv4/kernel/read"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/block4/conv4/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/block4/conv4/Conv2D_grad/ShapeN"
  input: "block4/conv4/kernel/read"
  input: "gradients/AddN_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block4/conv4/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "block3/Relu"
  input: "gradients/block4/conv4/Conv2D_grad/ShapeN:1"
  input: "gradients/AddN_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block4/conv4/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block4/conv4/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/block4/conv4/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/block4/conv4/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block4/conv4/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/block4/conv4/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block4/conv4/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/block4/conv4/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block4/conv4/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/block4/conv4/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block4/conv4/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/AddN_46"
  op: "AddN"
  input: "gradients/block4/batch_normalization/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  input: "gradients/block4/batch_normalization/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block4/batch_normalization/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/AddN_47"
  op: "AddN"
  input: "gradients/block4/batch_normalization/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  input: "gradients/block4/batch_normalization/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block4/batch_normalization/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/block3/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/block4/conv4/Conv2D_grad/tuple/control_dependency"
  input: "block3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block3/batch_normalization/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "gradients/block3/Relu_grad/ReluGrad"
  input: "block3/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block3/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/block3/batch_normalization/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block3/batch_normalization/cond/Merge_grad/cond_grad"
}
node {
  name: "gradients/block3/batch_normalization/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block3/batch_normalization/cond/Merge_grad/cond_grad"
  input: "^gradients/block3/batch_normalization/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block3/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/block3/batch_normalization/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block3/batch_normalization/cond/Merge_grad/cond_grad:1"
  input: "^gradients/block3/batch_normalization/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block3/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_128"
  op: "ZerosLike"
  input: "block3/batch_normalization/cond/FusedBatchNorm_1:1"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_129"
  op: "ZerosLike"
  input: "block3/batch_normalization/cond/FusedBatchNorm_1:2"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_130"
  op: "ZerosLike"
  input: "block3/batch_normalization/cond/FusedBatchNorm_1:3"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_131"
  op: "ZerosLike"
  input: "block3/batch_normalization/cond/FusedBatchNorm_1:4"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block3/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/block3/batch_normalization/cond/Merge_grad/tuple/control_dependency"
  input: "block3/batch_normalization/cond/FusedBatchNorm_1/Switch"
  input: "block3/batch_normalization/cond/FusedBatchNorm_1/Switch_1"
  input: "block3/batch_normalization/cond/FusedBatchNorm_1/Switch_3"
  input: "block3/batch_normalization/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/block3/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block3/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/block3/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block3/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^gradients/block3/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block3/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block3/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block3/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^gradients/block3/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block3/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block3/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/block3/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^gradients/block3/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block3/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_132"
  op: "ZerosLike"
  input: "block3/batch_normalization/cond/FusedBatchNorm:1"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_133"
  op: "ZerosLike"
  input: "block3/batch_normalization/cond/FusedBatchNorm:2"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_134"
  op: "ZerosLike"
  input: "block3/batch_normalization/cond/FusedBatchNorm:3"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_135"
  op: "ZerosLike"
  input: "block3/batch_normalization/cond/FusedBatchNorm:4"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block3/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/block3/batch_normalization/cond/Merge_grad/tuple/control_dependency_1"
  input: "block3/batch_normalization/cond/FusedBatchNorm/Switch:1"
  input: "block3/batch_normalization/cond/FusedBatchNorm/Switch_1:1"
  input: "block3/batch_normalization/cond/FusedBatchNorm:3"
  input: "block3/batch_normalization/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block3/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block3/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/block3/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block3/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/block3/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block3/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block3/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block3/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/block3/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block3/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block3/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/block3/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/block3/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block3/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block3/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/block3/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/block3/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block3/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block3/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/block3/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/block3/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block3/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/Switch_96"
  op: "Switch"
  input: "block3/conv3/Conv2D"
  input: "block3/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_97"
  op: "Shape"
  input: "gradients/Switch_96:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_96/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_96"
  op: "Fill"
  input: "gradients/Shape_97"
  input: "gradients/zeros_96/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block3/batch_normalization/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/block3/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "gradients/zeros_96"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_97"
  op: "Switch"
  input: "block3/batch_normalization/gamma/read"
  input: "block3/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_98"
  op: "Shape"
  input: "gradients/Switch_97:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_97/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_97"
  op: "Fill"
  input: "gradients/Shape_98"
  input: "gradients/zeros_97/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block3/batch_normalization/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/block3/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  input: "gradients/zeros_97"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_98"
  op: "Switch"
  input: "block3/batch_normalization/beta/read"
  input: "block3/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_99"
  op: "Shape"
  input: "gradients/Switch_98:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_98/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_98"
  op: "Fill"
  input: "gradients/Shape_99"
  input: "gradients/zeros_98/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block3/batch_normalization/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/block3/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "gradients/zeros_98"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_99"
  op: "Switch"
  input: "block3/conv3/Conv2D"
  input: "block3/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_100"
  op: "Shape"
  input: "gradients/Switch_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_99/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_99"
  op: "Fill"
  input: "gradients/Shape_100"
  input: "gradients/zeros_99/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block3/batch_normalization/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/block3/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency"
  input: "gradients/zeros_99"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_100"
  op: "Switch"
  input: "block3/batch_normalization/gamma/read"
  input: "block3/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_101"
  op: "Shape"
  input: "gradients/Switch_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_100/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_100"
  op: "Fill"
  input: "gradients/Shape_101"
  input: "gradients/zeros_100/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block3/batch_normalization/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/block3/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "gradients/zeros_100"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_101"
  op: "Switch"
  input: "block3/batch_normalization/beta/read"
  input: "block3/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_102"
  op: "Shape"
  input: "gradients/Switch_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_101/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_101"
  op: "Fill"
  input: "gradients/Shape_102"
  input: "gradients/zeros_101/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block3/batch_normalization/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/block3/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "gradients/zeros_101"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_48"
  op: "AddN"
  input: "gradients/block3/batch_normalization/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "gradients/block3/batch_normalization/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block3/batch_normalization/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/block3/conv3/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "block2/Relu"
  input: "block3/conv3/kernel/read"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/block3/conv3/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/block3/conv3/Conv2D_grad/ShapeN"
  input: "block3/conv3/kernel/read"
  input: "gradients/AddN_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block3/conv3/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "block2/Relu"
  input: "gradients/block3/conv3/Conv2D_grad/ShapeN:1"
  input: "gradients/AddN_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block3/conv3/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block3/conv3/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/block3/conv3/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/block3/conv3/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block3/conv3/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/block3/conv3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block3/conv3/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/block3/conv3/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block3/conv3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/block3/conv3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block3/conv3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/AddN_49"
  op: "AddN"
  input: "gradients/block3/batch_normalization/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  input: "gradients/block3/batch_normalization/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block3/batch_normalization/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/AddN_50"
  op: "AddN"
  input: "gradients/block3/batch_normalization/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  input: "gradients/block3/batch_normalization/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block3/batch_normalization/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/block2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/block3/conv3/Conv2D_grad/tuple/control_dependency"
  input: "block2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block2/batch_normalization/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "gradients/block2/Relu_grad/ReluGrad"
  input: "block2/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block2/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/block2/batch_normalization/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block2/batch_normalization/cond/Merge_grad/cond_grad"
}
node {
  name: "gradients/block2/batch_normalization/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block2/batch_normalization/cond/Merge_grad/cond_grad"
  input: "^gradients/block2/batch_normalization/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block2/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/block2/batch_normalization/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block2/batch_normalization/cond/Merge_grad/cond_grad:1"
  input: "^gradients/block2/batch_normalization/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block2/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_136"
  op: "ZerosLike"
  input: "block2/batch_normalization/cond/FusedBatchNorm_1:1"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_137"
  op: "ZerosLike"
  input: "block2/batch_normalization/cond/FusedBatchNorm_1:2"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_138"
  op: "ZerosLike"
  input: "block2/batch_normalization/cond/FusedBatchNorm_1:3"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_139"
  op: "ZerosLike"
  input: "block2/batch_normalization/cond/FusedBatchNorm_1:4"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block2/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/block2/batch_normalization/cond/Merge_grad/tuple/control_dependency"
  input: "block2/batch_normalization/cond/FusedBatchNorm_1/Switch"
  input: "block2/batch_normalization/cond/FusedBatchNorm_1/Switch_1"
  input: "block2/batch_normalization/cond/FusedBatchNorm_1/Switch_3"
  input: "block2/batch_normalization/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/block2/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block2/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/block2/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block2/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^gradients/block2/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block2/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block2/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block2/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^gradients/block2/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block2/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block2/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/block2/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^gradients/block2/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block2/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_140"
  op: "ZerosLike"
  input: "block2/batch_normalization/cond/FusedBatchNorm:1"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_141"
  op: "ZerosLike"
  input: "block2/batch_normalization/cond/FusedBatchNorm:2"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_142"
  op: "ZerosLike"
  input: "block2/batch_normalization/cond/FusedBatchNorm:3"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_143"
  op: "ZerosLike"
  input: "block2/batch_normalization/cond/FusedBatchNorm:4"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block2/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/block2/batch_normalization/cond/Merge_grad/tuple/control_dependency_1"
  input: "block2/batch_normalization/cond/FusedBatchNorm/Switch:1"
  input: "block2/batch_normalization/cond/FusedBatchNorm/Switch_1:1"
  input: "block2/batch_normalization/cond/FusedBatchNorm:3"
  input: "block2/batch_normalization/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block2/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block2/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/block2/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block2/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/block2/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block2/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block2/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block2/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/block2/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block2/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block2/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/block2/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/block2/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block2/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block2/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/block2/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/block2/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block2/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/block2/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/block2/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/block2/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block2/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/Switch_102"
  op: "Switch"
  input: "block2/conv2/Conv2D"
  input: "block2/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_103"
  op: "Shape"
  input: "gradients/Switch_102:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_102/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_102"
  op: "Fill"
  input: "gradients/Shape_103"
  input: "gradients/zeros_102/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block2/batch_normalization/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/block2/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "gradients/zeros_102"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_103"
  op: "Switch"
  input: "block2/batch_normalization/gamma/read"
  input: "block2/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_104"
  op: "Shape"
  input: "gradients/Switch_103:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_103/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_103"
  op: "Fill"
  input: "gradients/Shape_104"
  input: "gradients/zeros_103/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block2/batch_normalization/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/block2/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  input: "gradients/zeros_103"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_104"
  op: "Switch"
  input: "block2/batch_normalization/beta/read"
  input: "block2/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_105"
  op: "Shape"
  input: "gradients/Switch_104:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_104/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_104"
  op: "Fill"
  input: "gradients/Shape_105"
  input: "gradients/zeros_104/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block2/batch_normalization/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/block2/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "gradients/zeros_104"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_105"
  op: "Switch"
  input: "block2/conv2/Conv2D"
  input: "block2/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_106"
  op: "Shape"
  input: "gradients/Switch_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_105/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_105"
  op: "Fill"
  input: "gradients/Shape_106"
  input: "gradients/zeros_105/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block2/batch_normalization/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/block2/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency"
  input: "gradients/zeros_105"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_106"
  op: "Switch"
  input: "block2/batch_normalization/gamma/read"
  input: "block2/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_107"
  op: "Shape"
  input: "gradients/Switch_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_106/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_106"
  op: "Fill"
  input: "gradients/Shape_107"
  input: "gradients/zeros_106/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block2/batch_normalization/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/block2/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "gradients/zeros_106"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_107"
  op: "Switch"
  input: "block2/batch_normalization/beta/read"
  input: "block2/batch_normalization/cond/pred_id"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_108"
  op: "Shape"
  input: "gradients/Switch_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_107/Const"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_107"
  op: "Fill"
  input: "gradients/Shape_108"
  input: "gradients/zeros_107/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block2/batch_normalization/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/block2/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "gradients/zeros_107"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_51"
  op: "AddN"
  input: "gradients/block2/batch_normalization/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "gradients/block2/batch_normalization/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block2/batch_normalization/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/block2/conv2/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "block1/conv2d/Relu"
  input: "block2/conv2/kernel/read"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/block2/conv2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/block2/conv2/Conv2D_grad/ShapeN"
  input: "block2/conv2/kernel/read"
  input: "gradients/AddN_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block2/conv2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "block1/conv2d/Relu"
  input: "gradients/block2/conv2/Conv2D_grad/ShapeN:1"
  input: "gradients/AddN_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block2/conv2/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block2/conv2/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/block2/conv2/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/block2/conv2/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block2/conv2/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/block2/conv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block2/conv2/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/block2/conv2/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block2/conv2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/block2/conv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block2/conv2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/AddN_52"
  op: "AddN"
  input: "gradients/block2/batch_normalization/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  input: "gradients/block2/batch_normalization/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block2/batch_normalization/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/AddN_53"
  op: "AddN"
  input: "gradients/block2/batch_normalization/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  input: "gradients/block2/batch_normalization/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block2/batch_normalization/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/block1/conv2d/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/block2/conv2/Conv2D_grad/tuple/control_dependency"
  input: "block1/conv2d/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/block1/conv2d/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/block1/conv2d/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/block1/conv2d/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block1/conv2d/Relu_grad/ReluGrad"
  input: "^gradients/block1/conv2d/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/block1/conv2d/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block1/conv2d/Relu_grad/ReluGrad"
  input: "^gradients/block1/conv2d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block1/conv2d/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/block1/conv2d/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block1/conv2d/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/block1/conv2d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block1/conv2d/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/block1/conv2d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Placeholder"
  input: "block1/conv2d/kernel/read"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/block1/conv2d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/block1/conv2d/Conv2D_grad/ShapeN"
  input: "block1/conv2d/kernel/read"
  input: "gradients/block1/conv2d/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block1/conv2d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Placeholder"
  input: "gradients/block1/conv2d/Conv2D_grad/ShapeN:1"
  input: "gradients/block1/conv2d/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block1/conv2d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^gradients/block1/conv2d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/block1/conv2d/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/block1/conv2d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block1/conv2d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/block1/conv2d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block1/conv2d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/block1/conv2d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block1/conv2d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/block1/conv2d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block1/conv2d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "beta1_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1/conv2d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.89999998
      }
    }
  }
}
node {
  name: "beta1_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1/conv2d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta1_power/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1/conv2d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta1_power/read"
  op: "Identity"
  input: "beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1/conv2d/bias"
      }
    }
  }
}
node {
  name: "beta2_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1/conv2d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.99900001
      }
    }
  }
}
node {
  name: "beta2_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1/conv2d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta2_power/Assign"
  op: "Assign"
  input: "beta2_power"
  input: "beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1/conv2d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta2_power/read"
  op: "Identity"
  input: "beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1/conv2d/bias"
      }
    }
  }
}
node {
  name: "block1/conv2d/kernel/AdamOptimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1/conv2d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block1/conv2d/kernel/AdamOptimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1/conv2d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block1/conv2d/kernel/AdamOptimizer/Assign"
  op: "Assign"
  input: "block1/conv2d/kernel/AdamOptimizer"
  input: "block1/conv2d/kernel/AdamOptimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1/conv2d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block1/conv2d/kernel/AdamOptimizer/read"
  op: "Identity"
  input: "block1/conv2d/kernel/AdamOptimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1/conv2d/kernel"
      }
    }
  }
}
node {
  name: "block1/conv2d/kernel/AdamOptimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1/conv2d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block1/conv2d/kernel/AdamOptimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1/conv2d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block1/conv2d/kernel/AdamOptimizer_1/Assign"
  op: "Assign"
  input: "block1/conv2d/kernel/AdamOptimizer_1"
  input: "block1/conv2d/kernel/AdamOptimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1/conv2d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block1/conv2d/kernel/AdamOptimizer_1/read"
  op: "Identity"
  input: "block1/conv2d/kernel/AdamOptimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1/conv2d/kernel"
      }
    }
  }
}
node {
  name: "block1/conv2d/bias/AdamOptimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1/conv2d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block1/conv2d/bias/AdamOptimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1/conv2d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block1/conv2d/bias/AdamOptimizer/Assign"
  op: "Assign"
  input: "block1/conv2d/bias/AdamOptimizer"
  input: "block1/conv2d/bias/AdamOptimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1/conv2d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block1/conv2d/bias/AdamOptimizer/read"
  op: "Identity"
  input: "block1/conv2d/bias/AdamOptimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1/conv2d/bias"
      }
    }
  }
}
node {
  name: "block1/conv2d/bias/AdamOptimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1/conv2d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block1/conv2d/bias/AdamOptimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1/conv2d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block1/conv2d/bias/AdamOptimizer_1/Assign"
  op: "Assign"
  input: "block1/conv2d/bias/AdamOptimizer_1"
  input: "block1/conv2d/bias/AdamOptimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1/conv2d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block1/conv2d/bias/AdamOptimizer_1/read"
  op: "Identity"
  input: "block1/conv2d/bias/AdamOptimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1/conv2d/bias"
      }
    }
  }
}
node {
  name: "block2/conv2/kernel/AdamOptimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block2/conv2/kernel/AdamOptimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/conv2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block2/conv2/kernel/AdamOptimizer/Assign"
  op: "Assign"
  input: "block2/conv2/kernel/AdamOptimizer"
  input: "block2/conv2/kernel/AdamOptimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block2/conv2/kernel/AdamOptimizer/read"
  op: "Identity"
  input: "block2/conv2/kernel/AdamOptimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/conv2/kernel"
      }
    }
  }
}
node {
  name: "block2/conv2/kernel/AdamOptimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block2/conv2/kernel/AdamOptimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/conv2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block2/conv2/kernel/AdamOptimizer_1/Assign"
  op: "Assign"
  input: "block2/conv2/kernel/AdamOptimizer_1"
  input: "block2/conv2/kernel/AdamOptimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block2/conv2/kernel/AdamOptimizer_1/read"
  op: "Identity"
  input: "block2/conv2/kernel/AdamOptimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/conv2/kernel"
      }
    }
  }
}
node {
  name: "block2/batch_normalization/gamma/AdamOptimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block2/batch_normalization/gamma/AdamOptimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block2/batch_normalization/gamma/AdamOptimizer/Assign"
  op: "Assign"
  input: "block2/batch_normalization/gamma/AdamOptimizer"
  input: "block2/batch_normalization/gamma/AdamOptimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block2/batch_normalization/gamma/AdamOptimizer/read"
  op: "Identity"
  input: "block2/batch_normalization/gamma/AdamOptimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block2/batch_normalization/gamma/AdamOptimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block2/batch_normalization/gamma/AdamOptimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block2/batch_normalization/gamma/AdamOptimizer_1/Assign"
  op: "Assign"
  input: "block2/batch_normalization/gamma/AdamOptimizer_1"
  input: "block2/batch_normalization/gamma/AdamOptimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block2/batch_normalization/gamma/AdamOptimizer_1/read"
  op: "Identity"
  input: "block2/batch_normalization/gamma/AdamOptimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block2/batch_normalization/beta/AdamOptimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block2/batch_normalization/beta/AdamOptimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block2/batch_normalization/beta/AdamOptimizer/Assign"
  op: "Assign"
  input: "block2/batch_normalization/beta/AdamOptimizer"
  input: "block2/batch_normalization/beta/AdamOptimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block2/batch_normalization/beta/AdamOptimizer/read"
  op: "Identity"
  input: "block2/batch_normalization/beta/AdamOptimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block2/batch_normalization/beta/AdamOptimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block2/batch_normalization/beta/AdamOptimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block2/batch_normalization/beta/AdamOptimizer_1/Assign"
  op: "Assign"
  input: "block2/batch_normalization/beta/AdamOptimizer_1"
  input: "block2/batch_normalization/beta/AdamOptimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block2/batch_normalization/beta/AdamOptimizer_1/read"
  op: "Identity"
  input: "block2/batch_normalization/beta/AdamOptimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block3/conv3/kernel/AdamOptimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/conv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block3/conv3/kernel/AdamOptimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/conv3/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block3/conv3/kernel/AdamOptimizer/Assign"
  op: "Assign"
  input: "block3/conv3/kernel/AdamOptimizer"
  input: "block3/conv3/kernel/AdamOptimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/conv3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block3/conv3/kernel/AdamOptimizer/read"
  op: "Identity"
  input: "block3/conv3/kernel/AdamOptimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/conv3/kernel"
      }
    }
  }
}
node {
  name: "block3/conv3/kernel/AdamOptimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/conv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block3/conv3/kernel/AdamOptimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/conv3/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block3/conv3/kernel/AdamOptimizer_1/Assign"
  op: "Assign"
  input: "block3/conv3/kernel/AdamOptimizer_1"
  input: "block3/conv3/kernel/AdamOptimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/conv3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block3/conv3/kernel/AdamOptimizer_1/read"
  op: "Identity"
  input: "block3/conv3/kernel/AdamOptimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/conv3/kernel"
      }
    }
  }
}
node {
  name: "block3/batch_normalization/gamma/AdamOptimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block3/batch_normalization/gamma/AdamOptimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block3/batch_normalization/gamma/AdamOptimizer/Assign"
  op: "Assign"
  input: "block3/batch_normalization/gamma/AdamOptimizer"
  input: "block3/batch_normalization/gamma/AdamOptimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block3/batch_normalization/gamma/AdamOptimizer/read"
  op: "Identity"
  input: "block3/batch_normalization/gamma/AdamOptimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block3/batch_normalization/gamma/AdamOptimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block3/batch_normalization/gamma/AdamOptimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block3/batch_normalization/gamma/AdamOptimizer_1/Assign"
  op: "Assign"
  input: "block3/batch_normalization/gamma/AdamOptimizer_1"
  input: "block3/batch_normalization/gamma/AdamOptimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block3/batch_normalization/gamma/AdamOptimizer_1/read"
  op: "Identity"
  input: "block3/batch_normalization/gamma/AdamOptimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block3/batch_normalization/beta/AdamOptimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block3/batch_normalization/beta/AdamOptimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block3/batch_normalization/beta/AdamOptimizer/Assign"
  op: "Assign"
  input: "block3/batch_normalization/beta/AdamOptimizer"
  input: "block3/batch_normalization/beta/AdamOptimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block3/batch_normalization/beta/AdamOptimizer/read"
  op: "Identity"
  input: "block3/batch_normalization/beta/AdamOptimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block3/batch_normalization/beta/AdamOptimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block3/batch_normalization/beta/AdamOptimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block3/batch_normalization/beta/AdamOptimizer_1/Assign"
  op: "Assign"
  input: "block3/batch_normalization/beta/AdamOptimizer_1"
  input: "block3/batch_normalization/beta/AdamOptimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block3/batch_normalization/beta/AdamOptimizer_1/read"
  op: "Identity"
  input: "block3/batch_normalization/beta/AdamOptimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block4/conv4/kernel/AdamOptimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/conv4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block4/conv4/kernel/AdamOptimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/conv4/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block4/conv4/kernel/AdamOptimizer/Assign"
  op: "Assign"
  input: "block4/conv4/kernel/AdamOptimizer"
  input: "block4/conv4/kernel/AdamOptimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/conv4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block4/conv4/kernel/AdamOptimizer/read"
  op: "Identity"
  input: "block4/conv4/kernel/AdamOptimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/conv4/kernel"
      }
    }
  }
}
node {
  name: "block4/conv4/kernel/AdamOptimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/conv4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block4/conv4/kernel/AdamOptimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/conv4/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block4/conv4/kernel/AdamOptimizer_1/Assign"
  op: "Assign"
  input: "block4/conv4/kernel/AdamOptimizer_1"
  input: "block4/conv4/kernel/AdamOptimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/conv4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block4/conv4/kernel/AdamOptimizer_1/read"
  op: "Identity"
  input: "block4/conv4/kernel/AdamOptimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/conv4/kernel"
      }
    }
  }
}
node {
  name: "block4/batch_normalization/gamma/AdamOptimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block4/batch_normalization/gamma/AdamOptimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block4/batch_normalization/gamma/AdamOptimizer/Assign"
  op: "Assign"
  input: "block4/batch_normalization/gamma/AdamOptimizer"
  input: "block4/batch_normalization/gamma/AdamOptimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block4/batch_normalization/gamma/AdamOptimizer/read"
  op: "Identity"
  input: "block4/batch_normalization/gamma/AdamOptimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block4/batch_normalization/gamma/AdamOptimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block4/batch_normalization/gamma/AdamOptimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block4/batch_normalization/gamma/AdamOptimizer_1/Assign"
  op: "Assign"
  input: "block4/batch_normalization/gamma/AdamOptimizer_1"
  input: "block4/batch_normalization/gamma/AdamOptimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block4/batch_normalization/gamma/AdamOptimizer_1/read"
  op: "Identity"
  input: "block4/batch_normalization/gamma/AdamOptimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block4/batch_normalization/beta/AdamOptimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block4/batch_normalization/beta/AdamOptimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block4/batch_normalization/beta/AdamOptimizer/Assign"
  op: "Assign"
  input: "block4/batch_normalization/beta/AdamOptimizer"
  input: "block4/batch_normalization/beta/AdamOptimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block4/batch_normalization/beta/AdamOptimizer/read"
  op: "Identity"
  input: "block4/batch_normalization/beta/AdamOptimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block4/batch_normalization/beta/AdamOptimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block4/batch_normalization/beta/AdamOptimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block4/batch_normalization/beta/AdamOptimizer_1/Assign"
  op: "Assign"
  input: "block4/batch_normalization/beta/AdamOptimizer_1"
  input: "block4/batch_normalization/beta/AdamOptimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block4/batch_normalization/beta/AdamOptimizer_1/read"
  op: "Identity"
  input: "block4/batch_normalization/beta/AdamOptimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block5/conv5/kernel/AdamOptimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/conv5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block5/conv5/kernel/AdamOptimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/conv5/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block5/conv5/kernel/AdamOptimizer/Assign"
  op: "Assign"
  input: "block5/conv5/kernel/AdamOptimizer"
  input: "block5/conv5/kernel/AdamOptimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/conv5/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block5/conv5/kernel/AdamOptimizer/read"
  op: "Identity"
  input: "block5/conv5/kernel/AdamOptimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/conv5/kernel"
      }
    }
  }
}
node {
  name: "block5/conv5/kernel/AdamOptimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/conv5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block5/conv5/kernel/AdamOptimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/conv5/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block5/conv5/kernel/AdamOptimizer_1/Assign"
  op: "Assign"
  input: "block5/conv5/kernel/AdamOptimizer_1"
  input: "block5/conv5/kernel/AdamOptimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/conv5/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block5/conv5/kernel/AdamOptimizer_1/read"
  op: "Identity"
  input: "block5/conv5/kernel/AdamOptimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/conv5/kernel"
      }
    }
  }
}
node {
  name: "block5/batch_normalization/gamma/AdamOptimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block5/batch_normalization/gamma/AdamOptimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block5/batch_normalization/gamma/AdamOptimizer/Assign"
  op: "Assign"
  input: "block5/batch_normalization/gamma/AdamOptimizer"
  input: "block5/batch_normalization/gamma/AdamOptimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block5/batch_normalization/gamma/AdamOptimizer/read"
  op: "Identity"
  input: "block5/batch_normalization/gamma/AdamOptimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block5/batch_normalization/gamma/AdamOptimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block5/batch_normalization/gamma/AdamOptimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block5/batch_normalization/gamma/AdamOptimizer_1/Assign"
  op: "Assign"
  input: "block5/batch_normalization/gamma/AdamOptimizer_1"
  input: "block5/batch_normalization/gamma/AdamOptimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block5/batch_normalization/gamma/AdamOptimizer_1/read"
  op: "Identity"
  input: "block5/batch_normalization/gamma/AdamOptimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block5/batch_normalization/beta/AdamOptimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block5/batch_normalization/beta/AdamOptimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block5/batch_normalization/beta/AdamOptimizer/Assign"
  op: "Assign"
  input: "block5/batch_normalization/beta/AdamOptimizer"
  input: "block5/batch_normalization/beta/AdamOptimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block5/batch_normalization/beta/AdamOptimizer/read"
  op: "Identity"
  input: "block5/batch_normalization/beta/AdamOptimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block5/batch_normalization/beta/AdamOptimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block5/batch_normalization/beta/AdamOptimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block5/batch_normalization/beta/AdamOptimizer_1/Assign"
  op: "Assign"
  input: "block5/batch_normalization/beta/AdamOptimizer_1"
  input: "block5/batch_normalization/beta/AdamOptimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block5/batch_normalization/beta/AdamOptimizer_1/read"
  op: "Identity"
  input: "block5/batch_normalization/beta/AdamOptimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block6/conv6/kernel/AdamOptimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/conv6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block6/conv6/kernel/AdamOptimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/conv6/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block6/conv6/kernel/AdamOptimizer/Assign"
  op: "Assign"
  input: "block6/conv6/kernel/AdamOptimizer"
  input: "block6/conv6/kernel/AdamOptimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/conv6/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block6/conv6/kernel/AdamOptimizer/read"
  op: "Identity"
  input: "block6/conv6/kernel/AdamOptimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/conv6/kernel"
      }
    }
  }
}
node {
  name: "block6/conv6/kernel/AdamOptimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/conv6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block6/conv6/kernel/AdamOptimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/conv6/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block6/conv6/kernel/AdamOptimizer_1/Assign"
  op: "Assign"
  input: "block6/conv6/kernel/AdamOptimizer_1"
  input: "block6/conv6/kernel/AdamOptimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/conv6/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block6/conv6/kernel/AdamOptimizer_1/read"
  op: "Identity"
  input: "block6/conv6/kernel/AdamOptimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/conv6/kernel"
      }
    }
  }
}
node {
  name: "block6/batch_normalization/gamma/AdamOptimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block6/batch_normalization/gamma/AdamOptimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block6/batch_normalization/gamma/AdamOptimizer/Assign"
  op: "Assign"
  input: "block6/batch_normalization/gamma/AdamOptimizer"
  input: "block6/batch_normalization/gamma/AdamOptimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block6/batch_normalization/gamma/AdamOptimizer/read"
  op: "Identity"
  input: "block6/batch_normalization/gamma/AdamOptimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block6/batch_normalization/gamma/AdamOptimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block6/batch_normalization/gamma/AdamOptimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block6/batch_normalization/gamma/AdamOptimizer_1/Assign"
  op: "Assign"
  input: "block6/batch_normalization/gamma/AdamOptimizer_1"
  input: "block6/batch_normalization/gamma/AdamOptimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block6/batch_normalization/gamma/AdamOptimizer_1/read"
  op: "Identity"
  input: "block6/batch_normalization/gamma/AdamOptimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block6/batch_normalization/beta/AdamOptimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block6/batch_normalization/beta/AdamOptimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block6/batch_normalization/beta/AdamOptimizer/Assign"
  op: "Assign"
  input: "block6/batch_normalization/beta/AdamOptimizer"
  input: "block6/batch_normalization/beta/AdamOptimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block6/batch_normalization/beta/AdamOptimizer/read"
  op: "Identity"
  input: "block6/batch_normalization/beta/AdamOptimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block6/batch_normalization/beta/AdamOptimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block6/batch_normalization/beta/AdamOptimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block6/batch_normalization/beta/AdamOptimizer_1/Assign"
  op: "Assign"
  input: "block6/batch_normalization/beta/AdamOptimizer_1"
  input: "block6/batch_normalization/beta/AdamOptimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block6/batch_normalization/beta/AdamOptimizer_1/read"
  op: "Identity"
  input: "block6/batch_normalization/beta/AdamOptimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block7/conv7/kernel/AdamOptimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/conv7/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block7/conv7/kernel/AdamOptimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/conv7/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block7/conv7/kernel/AdamOptimizer/Assign"
  op: "Assign"
  input: "block7/conv7/kernel/AdamOptimizer"
  input: "block7/conv7/kernel/AdamOptimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/conv7/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block7/conv7/kernel/AdamOptimizer/read"
  op: "Identity"
  input: "block7/conv7/kernel/AdamOptimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/conv7/kernel"
      }
    }
  }
}
node {
  name: "block7/conv7/kernel/AdamOptimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/conv7/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block7/conv7/kernel/AdamOptimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/conv7/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block7/conv7/kernel/AdamOptimizer_1/Assign"
  op: "Assign"
  input: "block7/conv7/kernel/AdamOptimizer_1"
  input: "block7/conv7/kernel/AdamOptimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/conv7/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block7/conv7/kernel/AdamOptimizer_1/read"
  op: "Identity"
  input: "block7/conv7/kernel/AdamOptimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/conv7/kernel"
      }
    }
  }
}
node {
  name: "block7/batch_normalization/gamma/AdamOptimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block7/batch_normalization/gamma/AdamOptimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block7/batch_normalization/gamma/AdamOptimizer/Assign"
  op: "Assign"
  input: "block7/batch_normalization/gamma/AdamOptimizer"
  input: "block7/batch_normalization/gamma/AdamOptimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block7/batch_normalization/gamma/AdamOptimizer/read"
  op: "Identity"
  input: "block7/batch_normalization/gamma/AdamOptimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block7/batch_normalization/gamma/AdamOptimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block7/batch_normalization/gamma/AdamOptimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block7/batch_normalization/gamma/AdamOptimizer_1/Assign"
  op: "Assign"
  input: "block7/batch_normalization/gamma/AdamOptimizer_1"
  input: "block7/batch_normalization/gamma/AdamOptimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block7/batch_normalization/gamma/AdamOptimizer_1/read"
  op: "Identity"
  input: "block7/batch_normalization/gamma/AdamOptimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block7/batch_normalization/beta/AdamOptimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block7/batch_normalization/beta/AdamOptimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block7/batch_normalization/beta/AdamOptimizer/Assign"
  op: "Assign"
  input: "block7/batch_normalization/beta/AdamOptimizer"
  input: "block7/batch_normalization/beta/AdamOptimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block7/batch_normalization/beta/AdamOptimizer/read"
  op: "Identity"
  input: "block7/batch_normalization/beta/AdamOptimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block7/batch_normalization/beta/AdamOptimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block7/batch_normalization/beta/AdamOptimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block7/batch_normalization/beta/AdamOptimizer_1/Assign"
  op: "Assign"
  input: "block7/batch_normalization/beta/AdamOptimizer_1"
  input: "block7/batch_normalization/beta/AdamOptimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block7/batch_normalization/beta/AdamOptimizer_1/read"
  op: "Identity"
  input: "block7/batch_normalization/beta/AdamOptimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block8/conv8/kernel/AdamOptimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/conv8/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block8/conv8/kernel/AdamOptimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/conv8/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block8/conv8/kernel/AdamOptimizer/Assign"
  op: "Assign"
  input: "block8/conv8/kernel/AdamOptimizer"
  input: "block8/conv8/kernel/AdamOptimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/conv8/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block8/conv8/kernel/AdamOptimizer/read"
  op: "Identity"
  input: "block8/conv8/kernel/AdamOptimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/conv8/kernel"
      }
    }
  }
}
node {
  name: "block8/conv8/kernel/AdamOptimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/conv8/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block8/conv8/kernel/AdamOptimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/conv8/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block8/conv8/kernel/AdamOptimizer_1/Assign"
  op: "Assign"
  input: "block8/conv8/kernel/AdamOptimizer_1"
  input: "block8/conv8/kernel/AdamOptimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/conv8/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block8/conv8/kernel/AdamOptimizer_1/read"
  op: "Identity"
  input: "block8/conv8/kernel/AdamOptimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/conv8/kernel"
      }
    }
  }
}
node {
  name: "block8/batch_normalization/gamma/AdamOptimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block8/batch_normalization/gamma/AdamOptimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block8/batch_normalization/gamma/AdamOptimizer/Assign"
  op: "Assign"
  input: "block8/batch_normalization/gamma/AdamOptimizer"
  input: "block8/batch_normalization/gamma/AdamOptimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block8/batch_normalization/gamma/AdamOptimizer/read"
  op: "Identity"
  input: "block8/batch_normalization/gamma/AdamOptimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block8/batch_normalization/gamma/AdamOptimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block8/batch_normalization/gamma/AdamOptimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block8/batch_normalization/gamma/AdamOptimizer_1/Assign"
  op: "Assign"
  input: "block8/batch_normalization/gamma/AdamOptimizer_1"
  input: "block8/batch_normalization/gamma/AdamOptimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block8/batch_normalization/gamma/AdamOptimizer_1/read"
  op: "Identity"
  input: "block8/batch_normalization/gamma/AdamOptimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block8/batch_normalization/beta/AdamOptimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block8/batch_normalization/beta/AdamOptimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block8/batch_normalization/beta/AdamOptimizer/Assign"
  op: "Assign"
  input: "block8/batch_normalization/beta/AdamOptimizer"
  input: "block8/batch_normalization/beta/AdamOptimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block8/batch_normalization/beta/AdamOptimizer/read"
  op: "Identity"
  input: "block8/batch_normalization/beta/AdamOptimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block8/batch_normalization/beta/AdamOptimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block8/batch_normalization/beta/AdamOptimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block8/batch_normalization/beta/AdamOptimizer_1/Assign"
  op: "Assign"
  input: "block8/batch_normalization/beta/AdamOptimizer_1"
  input: "block8/batch_normalization/beta/AdamOptimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block8/batch_normalization/beta/AdamOptimizer_1/read"
  op: "Identity"
  input: "block8/batch_normalization/beta/AdamOptimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block9/conv9/kernel/AdamOptimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/conv9/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block9/conv9/kernel/AdamOptimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/conv9/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block9/conv9/kernel/AdamOptimizer/Assign"
  op: "Assign"
  input: "block9/conv9/kernel/AdamOptimizer"
  input: "block9/conv9/kernel/AdamOptimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/conv9/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block9/conv9/kernel/AdamOptimizer/read"
  op: "Identity"
  input: "block9/conv9/kernel/AdamOptimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/conv9/kernel"
      }
    }
  }
}
node {
  name: "block9/conv9/kernel/AdamOptimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/conv9/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block9/conv9/kernel/AdamOptimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/conv9/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block9/conv9/kernel/AdamOptimizer_1/Assign"
  op: "Assign"
  input: "block9/conv9/kernel/AdamOptimizer_1"
  input: "block9/conv9/kernel/AdamOptimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/conv9/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block9/conv9/kernel/AdamOptimizer_1/read"
  op: "Identity"
  input: "block9/conv9/kernel/AdamOptimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/conv9/kernel"
      }
    }
  }
}
node {
  name: "block9/batch_normalization/gamma/AdamOptimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block9/batch_normalization/gamma/AdamOptimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block9/batch_normalization/gamma/AdamOptimizer/Assign"
  op: "Assign"
  input: "block9/batch_normalization/gamma/AdamOptimizer"
  input: "block9/batch_normalization/gamma/AdamOptimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block9/batch_normalization/gamma/AdamOptimizer/read"
  op: "Identity"
  input: "block9/batch_normalization/gamma/AdamOptimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block9/batch_normalization/gamma/AdamOptimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block9/batch_normalization/gamma/AdamOptimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block9/batch_normalization/gamma/AdamOptimizer_1/Assign"
  op: "Assign"
  input: "block9/batch_normalization/gamma/AdamOptimizer_1"
  input: "block9/batch_normalization/gamma/AdamOptimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block9/batch_normalization/gamma/AdamOptimizer_1/read"
  op: "Identity"
  input: "block9/batch_normalization/gamma/AdamOptimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block9/batch_normalization/beta/AdamOptimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block9/batch_normalization/beta/AdamOptimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block9/batch_normalization/beta/AdamOptimizer/Assign"
  op: "Assign"
  input: "block9/batch_normalization/beta/AdamOptimizer"
  input: "block9/batch_normalization/beta/AdamOptimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block9/batch_normalization/beta/AdamOptimizer/read"
  op: "Identity"
  input: "block9/batch_normalization/beta/AdamOptimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block9/batch_normalization/beta/AdamOptimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block9/batch_normalization/beta/AdamOptimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block9/batch_normalization/beta/AdamOptimizer_1/Assign"
  op: "Assign"
  input: "block9/batch_normalization/beta/AdamOptimizer_1"
  input: "block9/batch_normalization/beta/AdamOptimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block9/batch_normalization/beta/AdamOptimizer_1/read"
  op: "Identity"
  input: "block9/batch_normalization/beta/AdamOptimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block10/conv10/kernel/AdamOptimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/conv10/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block10/conv10/kernel/AdamOptimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/conv10/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block10/conv10/kernel/AdamOptimizer/Assign"
  op: "Assign"
  input: "block10/conv10/kernel/AdamOptimizer"
  input: "block10/conv10/kernel/AdamOptimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/conv10/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block10/conv10/kernel/AdamOptimizer/read"
  op: "Identity"
  input: "block10/conv10/kernel/AdamOptimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/conv10/kernel"
      }
    }
  }
}
node {
  name: "block10/conv10/kernel/AdamOptimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/conv10/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block10/conv10/kernel/AdamOptimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/conv10/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block10/conv10/kernel/AdamOptimizer_1/Assign"
  op: "Assign"
  input: "block10/conv10/kernel/AdamOptimizer_1"
  input: "block10/conv10/kernel/AdamOptimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/conv10/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block10/conv10/kernel/AdamOptimizer_1/read"
  op: "Identity"
  input: "block10/conv10/kernel/AdamOptimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/conv10/kernel"
      }
    }
  }
}
node {
  name: "block10/batch_normalization/gamma/AdamOptimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block10/batch_normalization/gamma/AdamOptimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block10/batch_normalization/gamma/AdamOptimizer/Assign"
  op: "Assign"
  input: "block10/batch_normalization/gamma/AdamOptimizer"
  input: "block10/batch_normalization/gamma/AdamOptimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block10/batch_normalization/gamma/AdamOptimizer/read"
  op: "Identity"
  input: "block10/batch_normalization/gamma/AdamOptimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block10/batch_normalization/gamma/AdamOptimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block10/batch_normalization/gamma/AdamOptimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block10/batch_normalization/gamma/AdamOptimizer_1/Assign"
  op: "Assign"
  input: "block10/batch_normalization/gamma/AdamOptimizer_1"
  input: "block10/batch_normalization/gamma/AdamOptimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block10/batch_normalization/gamma/AdamOptimizer_1/read"
  op: "Identity"
  input: "block10/batch_normalization/gamma/AdamOptimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block10/batch_normalization/beta/AdamOptimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block10/batch_normalization/beta/AdamOptimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block10/batch_normalization/beta/AdamOptimizer/Assign"
  op: "Assign"
  input: "block10/batch_normalization/beta/AdamOptimizer"
  input: "block10/batch_normalization/beta/AdamOptimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block10/batch_normalization/beta/AdamOptimizer/read"
  op: "Identity"
  input: "block10/batch_normalization/beta/AdamOptimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block10/batch_normalization/beta/AdamOptimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block10/batch_normalization/beta/AdamOptimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block10/batch_normalization/beta/AdamOptimizer_1/Assign"
  op: "Assign"
  input: "block10/batch_normalization/beta/AdamOptimizer_1"
  input: "block10/batch_normalization/beta/AdamOptimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block10/batch_normalization/beta/AdamOptimizer_1/read"
  op: "Identity"
  input: "block10/batch_normalization/beta/AdamOptimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block11/conv11/kernel/AdamOptimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/conv11/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block11/conv11/kernel/AdamOptimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/conv11/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block11/conv11/kernel/AdamOptimizer/Assign"
  op: "Assign"
  input: "block11/conv11/kernel/AdamOptimizer"
  input: "block11/conv11/kernel/AdamOptimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/conv11/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block11/conv11/kernel/AdamOptimizer/read"
  op: "Identity"
  input: "block11/conv11/kernel/AdamOptimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/conv11/kernel"
      }
    }
  }
}
node {
  name: "block11/conv11/kernel/AdamOptimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/conv11/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block11/conv11/kernel/AdamOptimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/conv11/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block11/conv11/kernel/AdamOptimizer_1/Assign"
  op: "Assign"
  input: "block11/conv11/kernel/AdamOptimizer_1"
  input: "block11/conv11/kernel/AdamOptimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/conv11/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block11/conv11/kernel/AdamOptimizer_1/read"
  op: "Identity"
  input: "block11/conv11/kernel/AdamOptimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/conv11/kernel"
      }
    }
  }
}
node {
  name: "block11/batch_normalization/gamma/AdamOptimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block11/batch_normalization/gamma/AdamOptimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block11/batch_normalization/gamma/AdamOptimizer/Assign"
  op: "Assign"
  input: "block11/batch_normalization/gamma/AdamOptimizer"
  input: "block11/batch_normalization/gamma/AdamOptimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block11/batch_normalization/gamma/AdamOptimizer/read"
  op: "Identity"
  input: "block11/batch_normalization/gamma/AdamOptimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block11/batch_normalization/gamma/AdamOptimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block11/batch_normalization/gamma/AdamOptimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block11/batch_normalization/gamma/AdamOptimizer_1/Assign"
  op: "Assign"
  input: "block11/batch_normalization/gamma/AdamOptimizer_1"
  input: "block11/batch_normalization/gamma/AdamOptimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block11/batch_normalization/gamma/AdamOptimizer_1/read"
  op: "Identity"
  input: "block11/batch_normalization/gamma/AdamOptimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block11/batch_normalization/beta/AdamOptimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block11/batch_normalization/beta/AdamOptimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block11/batch_normalization/beta/AdamOptimizer/Assign"
  op: "Assign"
  input: "block11/batch_normalization/beta/AdamOptimizer"
  input: "block11/batch_normalization/beta/AdamOptimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block11/batch_normalization/beta/AdamOptimizer/read"
  op: "Identity"
  input: "block11/batch_normalization/beta/AdamOptimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block11/batch_normalization/beta/AdamOptimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block11/batch_normalization/beta/AdamOptimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block11/batch_normalization/beta/AdamOptimizer_1/Assign"
  op: "Assign"
  input: "block11/batch_normalization/beta/AdamOptimizer_1"
  input: "block11/batch_normalization/beta/AdamOptimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block11/batch_normalization/beta/AdamOptimizer_1/read"
  op: "Identity"
  input: "block11/batch_normalization/beta/AdamOptimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block12/conv12/kernel/AdamOptimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/conv12/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block12/conv12/kernel/AdamOptimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/conv12/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block12/conv12/kernel/AdamOptimizer/Assign"
  op: "Assign"
  input: "block12/conv12/kernel/AdamOptimizer"
  input: "block12/conv12/kernel/AdamOptimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/conv12/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block12/conv12/kernel/AdamOptimizer/read"
  op: "Identity"
  input: "block12/conv12/kernel/AdamOptimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/conv12/kernel"
      }
    }
  }
}
node {
  name: "block12/conv12/kernel/AdamOptimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/conv12/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block12/conv12/kernel/AdamOptimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/conv12/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block12/conv12/kernel/AdamOptimizer_1/Assign"
  op: "Assign"
  input: "block12/conv12/kernel/AdamOptimizer_1"
  input: "block12/conv12/kernel/AdamOptimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/conv12/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block12/conv12/kernel/AdamOptimizer_1/read"
  op: "Identity"
  input: "block12/conv12/kernel/AdamOptimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/conv12/kernel"
      }
    }
  }
}
node {
  name: "block12/batch_normalization/gamma/AdamOptimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block12/batch_normalization/gamma/AdamOptimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block12/batch_normalization/gamma/AdamOptimizer/Assign"
  op: "Assign"
  input: "block12/batch_normalization/gamma/AdamOptimizer"
  input: "block12/batch_normalization/gamma/AdamOptimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block12/batch_normalization/gamma/AdamOptimizer/read"
  op: "Identity"
  input: "block12/batch_normalization/gamma/AdamOptimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block12/batch_normalization/gamma/AdamOptimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block12/batch_normalization/gamma/AdamOptimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block12/batch_normalization/gamma/AdamOptimizer_1/Assign"
  op: "Assign"
  input: "block12/batch_normalization/gamma/AdamOptimizer_1"
  input: "block12/batch_normalization/gamma/AdamOptimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block12/batch_normalization/gamma/AdamOptimizer_1/read"
  op: "Identity"
  input: "block12/batch_normalization/gamma/AdamOptimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block12/batch_normalization/beta/AdamOptimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block12/batch_normalization/beta/AdamOptimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block12/batch_normalization/beta/AdamOptimizer/Assign"
  op: "Assign"
  input: "block12/batch_normalization/beta/AdamOptimizer"
  input: "block12/batch_normalization/beta/AdamOptimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block12/batch_normalization/beta/AdamOptimizer/read"
  op: "Identity"
  input: "block12/batch_normalization/beta/AdamOptimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block12/batch_normalization/beta/AdamOptimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block12/batch_normalization/beta/AdamOptimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block12/batch_normalization/beta/AdamOptimizer_1/Assign"
  op: "Assign"
  input: "block12/batch_normalization/beta/AdamOptimizer_1"
  input: "block12/batch_normalization/beta/AdamOptimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block12/batch_normalization/beta/AdamOptimizer_1/read"
  op: "Identity"
  input: "block12/batch_normalization/beta/AdamOptimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block13/conv13/kernel/AdamOptimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/conv13/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block13/conv13/kernel/AdamOptimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/conv13/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block13/conv13/kernel/AdamOptimizer/Assign"
  op: "Assign"
  input: "block13/conv13/kernel/AdamOptimizer"
  input: "block13/conv13/kernel/AdamOptimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/conv13/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block13/conv13/kernel/AdamOptimizer/read"
  op: "Identity"
  input: "block13/conv13/kernel/AdamOptimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/conv13/kernel"
      }
    }
  }
}
node {
  name: "block13/conv13/kernel/AdamOptimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/conv13/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block13/conv13/kernel/AdamOptimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/conv13/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block13/conv13/kernel/AdamOptimizer_1/Assign"
  op: "Assign"
  input: "block13/conv13/kernel/AdamOptimizer_1"
  input: "block13/conv13/kernel/AdamOptimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/conv13/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block13/conv13/kernel/AdamOptimizer_1/read"
  op: "Identity"
  input: "block13/conv13/kernel/AdamOptimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/conv13/kernel"
      }
    }
  }
}
node {
  name: "block13/batch_normalization/gamma/AdamOptimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block13/batch_normalization/gamma/AdamOptimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block13/batch_normalization/gamma/AdamOptimizer/Assign"
  op: "Assign"
  input: "block13/batch_normalization/gamma/AdamOptimizer"
  input: "block13/batch_normalization/gamma/AdamOptimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block13/batch_normalization/gamma/AdamOptimizer/read"
  op: "Identity"
  input: "block13/batch_normalization/gamma/AdamOptimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block13/batch_normalization/gamma/AdamOptimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block13/batch_normalization/gamma/AdamOptimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block13/batch_normalization/gamma/AdamOptimizer_1/Assign"
  op: "Assign"
  input: "block13/batch_normalization/gamma/AdamOptimizer_1"
  input: "block13/batch_normalization/gamma/AdamOptimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block13/batch_normalization/gamma/AdamOptimizer_1/read"
  op: "Identity"
  input: "block13/batch_normalization/gamma/AdamOptimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block13/batch_normalization/beta/AdamOptimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block13/batch_normalization/beta/AdamOptimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block13/batch_normalization/beta/AdamOptimizer/Assign"
  op: "Assign"
  input: "block13/batch_normalization/beta/AdamOptimizer"
  input: "block13/batch_normalization/beta/AdamOptimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block13/batch_normalization/beta/AdamOptimizer/read"
  op: "Identity"
  input: "block13/batch_normalization/beta/AdamOptimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block13/batch_normalization/beta/AdamOptimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block13/batch_normalization/beta/AdamOptimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block13/batch_normalization/beta/AdamOptimizer_1/Assign"
  op: "Assign"
  input: "block13/batch_normalization/beta/AdamOptimizer_1"
  input: "block13/batch_normalization/beta/AdamOptimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block13/batch_normalization/beta/AdamOptimizer_1/read"
  op: "Identity"
  input: "block13/batch_normalization/beta/AdamOptimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block14/conv14/kernel/AdamOptimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/conv14/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block14/conv14/kernel/AdamOptimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/conv14/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block14/conv14/kernel/AdamOptimizer/Assign"
  op: "Assign"
  input: "block14/conv14/kernel/AdamOptimizer"
  input: "block14/conv14/kernel/AdamOptimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/conv14/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block14/conv14/kernel/AdamOptimizer/read"
  op: "Identity"
  input: "block14/conv14/kernel/AdamOptimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/conv14/kernel"
      }
    }
  }
}
node {
  name: "block14/conv14/kernel/AdamOptimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/conv14/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block14/conv14/kernel/AdamOptimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/conv14/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block14/conv14/kernel/AdamOptimizer_1/Assign"
  op: "Assign"
  input: "block14/conv14/kernel/AdamOptimizer_1"
  input: "block14/conv14/kernel/AdamOptimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/conv14/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block14/conv14/kernel/AdamOptimizer_1/read"
  op: "Identity"
  input: "block14/conv14/kernel/AdamOptimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/conv14/kernel"
      }
    }
  }
}
node {
  name: "block14/batch_normalization/gamma/AdamOptimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block14/batch_normalization/gamma/AdamOptimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block14/batch_normalization/gamma/AdamOptimizer/Assign"
  op: "Assign"
  input: "block14/batch_normalization/gamma/AdamOptimizer"
  input: "block14/batch_normalization/gamma/AdamOptimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block14/batch_normalization/gamma/AdamOptimizer/read"
  op: "Identity"
  input: "block14/batch_normalization/gamma/AdamOptimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block14/batch_normalization/gamma/AdamOptimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block14/batch_normalization/gamma/AdamOptimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block14/batch_normalization/gamma/AdamOptimizer_1/Assign"
  op: "Assign"
  input: "block14/batch_normalization/gamma/AdamOptimizer_1"
  input: "block14/batch_normalization/gamma/AdamOptimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block14/batch_normalization/gamma/AdamOptimizer_1/read"
  op: "Identity"
  input: "block14/batch_normalization/gamma/AdamOptimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block14/batch_normalization/beta/AdamOptimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block14/batch_normalization/beta/AdamOptimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block14/batch_normalization/beta/AdamOptimizer/Assign"
  op: "Assign"
  input: "block14/batch_normalization/beta/AdamOptimizer"
  input: "block14/batch_normalization/beta/AdamOptimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block14/batch_normalization/beta/AdamOptimizer/read"
  op: "Identity"
  input: "block14/batch_normalization/beta/AdamOptimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block14/batch_normalization/beta/AdamOptimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block14/batch_normalization/beta/AdamOptimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block14/batch_normalization/beta/AdamOptimizer_1/Assign"
  op: "Assign"
  input: "block14/batch_normalization/beta/AdamOptimizer_1"
  input: "block14/batch_normalization/beta/AdamOptimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block14/batch_normalization/beta/AdamOptimizer_1/read"
  op: "Identity"
  input: "block14/batch_normalization/beta/AdamOptimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block15/conv15/kernel/AdamOptimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/conv15/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block15/conv15/kernel/AdamOptimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/conv15/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block15/conv15/kernel/AdamOptimizer/Assign"
  op: "Assign"
  input: "block15/conv15/kernel/AdamOptimizer"
  input: "block15/conv15/kernel/AdamOptimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/conv15/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block15/conv15/kernel/AdamOptimizer/read"
  op: "Identity"
  input: "block15/conv15/kernel/AdamOptimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/conv15/kernel"
      }
    }
  }
}
node {
  name: "block15/conv15/kernel/AdamOptimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/conv15/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block15/conv15/kernel/AdamOptimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/conv15/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block15/conv15/kernel/AdamOptimizer_1/Assign"
  op: "Assign"
  input: "block15/conv15/kernel/AdamOptimizer_1"
  input: "block15/conv15/kernel/AdamOptimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/conv15/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block15/conv15/kernel/AdamOptimizer_1/read"
  op: "Identity"
  input: "block15/conv15/kernel/AdamOptimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/conv15/kernel"
      }
    }
  }
}
node {
  name: "block15/batch_normalization/gamma/AdamOptimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block15/batch_normalization/gamma/AdamOptimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block15/batch_normalization/gamma/AdamOptimizer/Assign"
  op: "Assign"
  input: "block15/batch_normalization/gamma/AdamOptimizer"
  input: "block15/batch_normalization/gamma/AdamOptimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block15/batch_normalization/gamma/AdamOptimizer/read"
  op: "Identity"
  input: "block15/batch_normalization/gamma/AdamOptimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block15/batch_normalization/gamma/AdamOptimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block15/batch_normalization/gamma/AdamOptimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block15/batch_normalization/gamma/AdamOptimizer_1/Assign"
  op: "Assign"
  input: "block15/batch_normalization/gamma/AdamOptimizer_1"
  input: "block15/batch_normalization/gamma/AdamOptimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block15/batch_normalization/gamma/AdamOptimizer_1/read"
  op: "Identity"
  input: "block15/batch_normalization/gamma/AdamOptimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block15/batch_normalization/beta/AdamOptimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block15/batch_normalization/beta/AdamOptimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block15/batch_normalization/beta/AdamOptimizer/Assign"
  op: "Assign"
  input: "block15/batch_normalization/beta/AdamOptimizer"
  input: "block15/batch_normalization/beta/AdamOptimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block15/batch_normalization/beta/AdamOptimizer/read"
  op: "Identity"
  input: "block15/batch_normalization/beta/AdamOptimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block15/batch_normalization/beta/AdamOptimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block15/batch_normalization/beta/AdamOptimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block15/batch_normalization/beta/AdamOptimizer_1/Assign"
  op: "Assign"
  input: "block15/batch_normalization/beta/AdamOptimizer_1"
  input: "block15/batch_normalization/beta/AdamOptimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block15/batch_normalization/beta/AdamOptimizer_1/read"
  op: "Identity"
  input: "block15/batch_normalization/beta/AdamOptimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block16/conv16/kernel/AdamOptimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/conv16/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block16/conv16/kernel/AdamOptimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/conv16/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block16/conv16/kernel/AdamOptimizer/Assign"
  op: "Assign"
  input: "block16/conv16/kernel/AdamOptimizer"
  input: "block16/conv16/kernel/AdamOptimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/conv16/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block16/conv16/kernel/AdamOptimizer/read"
  op: "Identity"
  input: "block16/conv16/kernel/AdamOptimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/conv16/kernel"
      }
    }
  }
}
node {
  name: "block16/conv16/kernel/AdamOptimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/conv16/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block16/conv16/kernel/AdamOptimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/conv16/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block16/conv16/kernel/AdamOptimizer_1/Assign"
  op: "Assign"
  input: "block16/conv16/kernel/AdamOptimizer_1"
  input: "block16/conv16/kernel/AdamOptimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/conv16/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block16/conv16/kernel/AdamOptimizer_1/read"
  op: "Identity"
  input: "block16/conv16/kernel/AdamOptimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/conv16/kernel"
      }
    }
  }
}
node {
  name: "block16/batch_normalization/gamma/AdamOptimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block16/batch_normalization/gamma/AdamOptimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block16/batch_normalization/gamma/AdamOptimizer/Assign"
  op: "Assign"
  input: "block16/batch_normalization/gamma/AdamOptimizer"
  input: "block16/batch_normalization/gamma/AdamOptimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block16/batch_normalization/gamma/AdamOptimizer/read"
  op: "Identity"
  input: "block16/batch_normalization/gamma/AdamOptimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block16/batch_normalization/gamma/AdamOptimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block16/batch_normalization/gamma/AdamOptimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block16/batch_normalization/gamma/AdamOptimizer_1/Assign"
  op: "Assign"
  input: "block16/batch_normalization/gamma/AdamOptimizer_1"
  input: "block16/batch_normalization/gamma/AdamOptimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block16/batch_normalization/gamma/AdamOptimizer_1/read"
  op: "Identity"
  input: "block16/batch_normalization/gamma/AdamOptimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block16/batch_normalization/beta/AdamOptimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block16/batch_normalization/beta/AdamOptimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block16/batch_normalization/beta/AdamOptimizer/Assign"
  op: "Assign"
  input: "block16/batch_normalization/beta/AdamOptimizer"
  input: "block16/batch_normalization/beta/AdamOptimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block16/batch_normalization/beta/AdamOptimizer/read"
  op: "Identity"
  input: "block16/batch_normalization/beta/AdamOptimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block16/batch_normalization/beta/AdamOptimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block16/batch_normalization/beta/AdamOptimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block16/batch_normalization/beta/AdamOptimizer_1/Assign"
  op: "Assign"
  input: "block16/batch_normalization/beta/AdamOptimizer_1"
  input: "block16/batch_normalization/beta/AdamOptimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block16/batch_normalization/beta/AdamOptimizer_1/read"
  op: "Identity"
  input: "block16/batch_normalization/beta/AdamOptimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block17/conv17/kernel/AdamOptimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/conv17/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block17/conv17/kernel/AdamOptimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/conv17/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block17/conv17/kernel/AdamOptimizer/Assign"
  op: "Assign"
  input: "block17/conv17/kernel/AdamOptimizer"
  input: "block17/conv17/kernel/AdamOptimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/conv17/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block17/conv17/kernel/AdamOptimizer/read"
  op: "Identity"
  input: "block17/conv17/kernel/AdamOptimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/conv17/kernel"
      }
    }
  }
}
node {
  name: "block17/conv17/kernel/AdamOptimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/conv17/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block17/conv17/kernel/AdamOptimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/conv17/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block17/conv17/kernel/AdamOptimizer_1/Assign"
  op: "Assign"
  input: "block17/conv17/kernel/AdamOptimizer_1"
  input: "block17/conv17/kernel/AdamOptimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/conv17/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block17/conv17/kernel/AdamOptimizer_1/read"
  op: "Identity"
  input: "block17/conv17/kernel/AdamOptimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/conv17/kernel"
      }
    }
  }
}
node {
  name: "block17/batch_normalization/gamma/AdamOptimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block17/batch_normalization/gamma/AdamOptimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block17/batch_normalization/gamma/AdamOptimizer/Assign"
  op: "Assign"
  input: "block17/batch_normalization/gamma/AdamOptimizer"
  input: "block17/batch_normalization/gamma/AdamOptimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block17/batch_normalization/gamma/AdamOptimizer/read"
  op: "Identity"
  input: "block17/batch_normalization/gamma/AdamOptimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block17/batch_normalization/gamma/AdamOptimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block17/batch_normalization/gamma/AdamOptimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block17/batch_normalization/gamma/AdamOptimizer_1/Assign"
  op: "Assign"
  input: "block17/batch_normalization/gamma/AdamOptimizer_1"
  input: "block17/batch_normalization/gamma/AdamOptimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block17/batch_normalization/gamma/AdamOptimizer_1/read"
  op: "Identity"
  input: "block17/batch_normalization/gamma/AdamOptimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block17/batch_normalization/beta/AdamOptimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block17/batch_normalization/beta/AdamOptimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block17/batch_normalization/beta/AdamOptimizer/Assign"
  op: "Assign"
  input: "block17/batch_normalization/beta/AdamOptimizer"
  input: "block17/batch_normalization/beta/AdamOptimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block17/batch_normalization/beta/AdamOptimizer/read"
  op: "Identity"
  input: "block17/batch_normalization/beta/AdamOptimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block17/batch_normalization/beta/AdamOptimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block17/batch_normalization/beta/AdamOptimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block17/batch_normalization/beta/AdamOptimizer_1/Assign"
  op: "Assign"
  input: "block17/batch_normalization/beta/AdamOptimizer_1"
  input: "block17/batch_normalization/beta/AdamOptimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block17/batch_normalization/beta/AdamOptimizer_1/read"
  op: "Identity"
  input: "block17/batch_normalization/beta/AdamOptimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block18/conv18/kernel/AdamOptimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/conv18/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block18/conv18/kernel/AdamOptimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/conv18/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block18/conv18/kernel/AdamOptimizer/Assign"
  op: "Assign"
  input: "block18/conv18/kernel/AdamOptimizer"
  input: "block18/conv18/kernel/AdamOptimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/conv18/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block18/conv18/kernel/AdamOptimizer/read"
  op: "Identity"
  input: "block18/conv18/kernel/AdamOptimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/conv18/kernel"
      }
    }
  }
}
node {
  name: "block18/conv18/kernel/AdamOptimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/conv18/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block18/conv18/kernel/AdamOptimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/conv18/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block18/conv18/kernel/AdamOptimizer_1/Assign"
  op: "Assign"
  input: "block18/conv18/kernel/AdamOptimizer_1"
  input: "block18/conv18/kernel/AdamOptimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/conv18/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block18/conv18/kernel/AdamOptimizer_1/read"
  op: "Identity"
  input: "block18/conv18/kernel/AdamOptimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/conv18/kernel"
      }
    }
  }
}
node {
  name: "block18/batch_normalization/gamma/AdamOptimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block18/batch_normalization/gamma/AdamOptimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block18/batch_normalization/gamma/AdamOptimizer/Assign"
  op: "Assign"
  input: "block18/batch_normalization/gamma/AdamOptimizer"
  input: "block18/batch_normalization/gamma/AdamOptimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block18/batch_normalization/gamma/AdamOptimizer/read"
  op: "Identity"
  input: "block18/batch_normalization/gamma/AdamOptimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block18/batch_normalization/gamma/AdamOptimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block18/batch_normalization/gamma/AdamOptimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block18/batch_normalization/gamma/AdamOptimizer_1/Assign"
  op: "Assign"
  input: "block18/batch_normalization/gamma/AdamOptimizer_1"
  input: "block18/batch_normalization/gamma/AdamOptimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block18/batch_normalization/gamma/AdamOptimizer_1/read"
  op: "Identity"
  input: "block18/batch_normalization/gamma/AdamOptimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block18/batch_normalization/beta/AdamOptimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block18/batch_normalization/beta/AdamOptimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block18/batch_normalization/beta/AdamOptimizer/Assign"
  op: "Assign"
  input: "block18/batch_normalization/beta/AdamOptimizer"
  input: "block18/batch_normalization/beta/AdamOptimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block18/batch_normalization/beta/AdamOptimizer/read"
  op: "Identity"
  input: "block18/batch_normalization/beta/AdamOptimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block18/batch_normalization/beta/AdamOptimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block18/batch_normalization/beta/AdamOptimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block18/batch_normalization/beta/AdamOptimizer_1/Assign"
  op: "Assign"
  input: "block18/batch_normalization/beta/AdamOptimizer_1"
  input: "block18/batch_normalization/beta/AdamOptimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block18/batch_normalization/beta/AdamOptimizer_1/read"
  op: "Identity"
  input: "block18/batch_normalization/beta/AdamOptimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block19/conv19/kernel/AdamOptimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/conv19/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block19/conv19/kernel/AdamOptimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/conv19/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block19/conv19/kernel/AdamOptimizer/Assign"
  op: "Assign"
  input: "block19/conv19/kernel/AdamOptimizer"
  input: "block19/conv19/kernel/AdamOptimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/conv19/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block19/conv19/kernel/AdamOptimizer/read"
  op: "Identity"
  input: "block19/conv19/kernel/AdamOptimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/conv19/kernel"
      }
    }
  }
}
node {
  name: "block19/conv19/kernel/AdamOptimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/conv19/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block19/conv19/kernel/AdamOptimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/conv19/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block19/conv19/kernel/AdamOptimizer_1/Assign"
  op: "Assign"
  input: "block19/conv19/kernel/AdamOptimizer_1"
  input: "block19/conv19/kernel/AdamOptimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/conv19/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block19/conv19/kernel/AdamOptimizer_1/read"
  op: "Identity"
  input: "block19/conv19/kernel/AdamOptimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/conv19/kernel"
      }
    }
  }
}
node {
  name: "block19/batch_normalization/gamma/AdamOptimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block19/batch_normalization/gamma/AdamOptimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block19/batch_normalization/gamma/AdamOptimizer/Assign"
  op: "Assign"
  input: "block19/batch_normalization/gamma/AdamOptimizer"
  input: "block19/batch_normalization/gamma/AdamOptimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block19/batch_normalization/gamma/AdamOptimizer/read"
  op: "Identity"
  input: "block19/batch_normalization/gamma/AdamOptimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block19/batch_normalization/gamma/AdamOptimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block19/batch_normalization/gamma/AdamOptimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block19/batch_normalization/gamma/AdamOptimizer_1/Assign"
  op: "Assign"
  input: "block19/batch_normalization/gamma/AdamOptimizer_1"
  input: "block19/batch_normalization/gamma/AdamOptimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block19/batch_normalization/gamma/AdamOptimizer_1/read"
  op: "Identity"
  input: "block19/batch_normalization/gamma/AdamOptimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "block19/batch_normalization/beta/AdamOptimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block19/batch_normalization/beta/AdamOptimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block19/batch_normalization/beta/AdamOptimizer/Assign"
  op: "Assign"
  input: "block19/batch_normalization/beta/AdamOptimizer"
  input: "block19/batch_normalization/beta/AdamOptimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block19/batch_normalization/beta/AdamOptimizer/read"
  op: "Identity"
  input: "block19/batch_normalization/beta/AdamOptimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block19/batch_normalization/beta/AdamOptimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block19/batch_normalization/beta/AdamOptimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block19/batch_normalization/beta/AdamOptimizer_1/Assign"
  op: "Assign"
  input: "block19/batch_normalization/beta/AdamOptimizer_1"
  input: "block19/batch_normalization/beta/AdamOptimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block19/batch_normalization/beta/AdamOptimizer_1/read"
  op: "Identity"
  input: "block19/batch_normalization/beta/AdamOptimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "block17/conv2d/kernel/AdamOptimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/conv2d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block17/conv2d/kernel/AdamOptimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/conv2d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block17/conv2d/kernel/AdamOptimizer/Assign"
  op: "Assign"
  input: "block17/conv2d/kernel/AdamOptimizer"
  input: "block17/conv2d/kernel/AdamOptimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/conv2d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block17/conv2d/kernel/AdamOptimizer/read"
  op: "Identity"
  input: "block17/conv2d/kernel/AdamOptimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/conv2d/kernel"
      }
    }
  }
}
node {
  name: "block17/conv2d/kernel/AdamOptimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/conv2d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block17/conv2d/kernel/AdamOptimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/conv2d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "block17/conv2d/kernel/AdamOptimizer_1/Assign"
  op: "Assign"
  input: "block17/conv2d/kernel/AdamOptimizer_1"
  input: "block17/conv2d/kernel/AdamOptimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/conv2d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "block17/conv2d/kernel/AdamOptimizer_1/read"
  op: "Identity"
  input: "block17/conv2d/kernel/AdamOptimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/conv2d/kernel"
      }
    }
  }
}
node {
  name: "AdamOptimizer/beta1"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.89999998
      }
    }
  }
}
node {
  name: "AdamOptimizer/beta2"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.99900001
      }
    }
  }
}
node {
  name: "AdamOptimizer/epsilon"
  op: "Const"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.9999999e-09
      }
    }
  }
}
node {
  name: "AdamOptimizer/update_block1/conv2d/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "block1/conv2d/kernel"
  input: "block1/conv2d/kernel/AdamOptimizer"
  input: "block1/conv2d/kernel/AdamOptimizer_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate"
  input: "AdamOptimizer/beta1"
  input: "AdamOptimizer/beta2"
  input: "AdamOptimizer/epsilon"
  input: "gradients/block1/conv2d/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1/conv2d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "AdamOptimizer/update_block1/conv2d/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "block1/conv2d/bias"
  input: "block1/conv2d/bias/AdamOptimizer"
  input: "block1/conv2d/bias/AdamOptimizer_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate"
  input: "AdamOptimizer/beta1"
  input: "AdamOptimizer/beta2"
  input: "AdamOptimizer/epsilon"
  input: "gradients/block1/conv2d/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1/conv2d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "AdamOptimizer/update_block2/conv2/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "block2/conv2/kernel"
  input: "block2/conv2/kernel/AdamOptimizer"
  input: "block2/conv2/kernel/AdamOptimizer_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate"
  input: "AdamOptimizer/beta1"
  input: "AdamOptimizer/beta2"
  input: "AdamOptimizer/epsilon"
  input: "gradients/block2/conv2/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "AdamOptimizer/update_block2/batch_normalization/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "block2/batch_normalization/gamma"
  input: "block2/batch_normalization/gamma/AdamOptimizer"
  input: "block2/batch_normalization/gamma/AdamOptimizer_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate"
  input: "AdamOptimizer/beta1"
  input: "AdamOptimizer/beta2"
  input: "AdamOptimizer/epsilon"
  input: "gradients/AddN_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "AdamOptimizer/update_block2/batch_normalization/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "block2/batch_normalization/beta"
  input: "block2/batch_normalization/beta/AdamOptimizer"
  input: "block2/batch_normalization/beta/AdamOptimizer_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate"
  input: "AdamOptimizer/beta1"
  input: "AdamOptimizer/beta2"
  input: "AdamOptimizer/epsilon"
  input: "gradients/AddN_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "AdamOptimizer/update_block3/conv3/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "block3/conv3/kernel"
  input: "block3/conv3/kernel/AdamOptimizer"
  input: "block3/conv3/kernel/AdamOptimizer_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate"
  input: "AdamOptimizer/beta1"
  input: "AdamOptimizer/beta2"
  input: "AdamOptimizer/epsilon"
  input: "gradients/block3/conv3/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/conv3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "AdamOptimizer/update_block3/batch_normalization/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "block3/batch_normalization/gamma"
  input: "block3/batch_normalization/gamma/AdamOptimizer"
  input: "block3/batch_normalization/gamma/AdamOptimizer_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate"
  input: "AdamOptimizer/beta1"
  input: "AdamOptimizer/beta2"
  input: "AdamOptimizer/epsilon"
  input: "gradients/AddN_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "AdamOptimizer/update_block3/batch_normalization/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "block3/batch_normalization/beta"
  input: "block3/batch_normalization/beta/AdamOptimizer"
  input: "block3/batch_normalization/beta/AdamOptimizer_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate"
  input: "AdamOptimizer/beta1"
  input: "AdamOptimizer/beta2"
  input: "AdamOptimizer/epsilon"
  input: "gradients/AddN_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "AdamOptimizer/update_block4/conv4/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "block4/conv4/kernel"
  input: "block4/conv4/kernel/AdamOptimizer"
  input: "block4/conv4/kernel/AdamOptimizer_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate"
  input: "AdamOptimizer/beta1"
  input: "AdamOptimizer/beta2"
  input: "AdamOptimizer/epsilon"
  input: "gradients/block4/conv4/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/conv4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "AdamOptimizer/update_block4/batch_normalization/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "block4/batch_normalization/gamma"
  input: "block4/batch_normalization/gamma/AdamOptimizer"
  input: "block4/batch_normalization/gamma/AdamOptimizer_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate"
  input: "AdamOptimizer/beta1"
  input: "AdamOptimizer/beta2"
  input: "AdamOptimizer/epsilon"
  input: "gradients/AddN_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "AdamOptimizer/update_block4/batch_normalization/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "block4/batch_normalization/beta"
  input: "block4/batch_normalization/beta/AdamOptimizer"
  input: "block4/batch_normalization/beta/AdamOptimizer_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate"
  input: "AdamOptimizer/beta1"
  input: "AdamOptimizer/beta2"
  input: "AdamOptimizer/epsilon"
  input: "gradients/AddN_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "AdamOptimizer/update_block5/conv5/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "block5/conv5/kernel"
  input: "block5/conv5/kernel/AdamOptimizer"
  input: "block5/conv5/kernel/AdamOptimizer_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate"
  input: "AdamOptimizer/beta1"
  input: "AdamOptimizer/beta2"
  input: "AdamOptimizer/epsilon"
  input: "gradients/block5/conv5/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/conv5/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "AdamOptimizer/update_block5/batch_normalization/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "block5/batch_normalization/gamma"
  input: "block5/batch_normalization/gamma/AdamOptimizer"
  input: "block5/batch_normalization/gamma/AdamOptimizer_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate"
  input: "AdamOptimizer/beta1"
  input: "AdamOptimizer/beta2"
  input: "AdamOptimizer/epsilon"
  input: "gradients/AddN_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "AdamOptimizer/update_block5/batch_normalization/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "block5/batch_normalization/beta"
  input: "block5/batch_normalization/beta/AdamOptimizer"
  input: "block5/batch_normalization/beta/AdamOptimizer_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate"
  input: "AdamOptimizer/beta1"
  input: "AdamOptimizer/beta2"
  input: "AdamOptimizer/epsilon"
  input: "gradients/AddN_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "AdamOptimizer/update_block6/conv6/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "block6/conv6/kernel"
  input: "block6/conv6/kernel/AdamOptimizer"
  input: "block6/conv6/kernel/AdamOptimizer_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate"
  input: "AdamOptimizer/beta1"
  input: "AdamOptimizer/beta2"
  input: "AdamOptimizer/epsilon"
  input: "gradients/block6/conv6/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/conv6/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "AdamOptimizer/update_block6/batch_normalization/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "block6/batch_normalization/gamma"
  input: "block6/batch_normalization/gamma/AdamOptimizer"
  input: "block6/batch_normalization/gamma/AdamOptimizer_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate"
  input: "AdamOptimizer/beta1"
  input: "AdamOptimizer/beta2"
  input: "AdamOptimizer/epsilon"
  input: "gradients/AddN_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "AdamOptimizer/update_block6/batch_normalization/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "block6/batch_normalization/beta"
  input: "block6/batch_normalization/beta/AdamOptimizer"
  input: "block6/batch_normalization/beta/AdamOptimizer_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate"
  input: "AdamOptimizer/beta1"
  input: "AdamOptimizer/beta2"
  input: "AdamOptimizer/epsilon"
  input: "gradients/AddN_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "AdamOptimizer/update_block7/conv7/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "block7/conv7/kernel"
  input: "block7/conv7/kernel/AdamOptimizer"
  input: "block7/conv7/kernel/AdamOptimizer_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate"
  input: "AdamOptimizer/beta1"
  input: "AdamOptimizer/beta2"
  input: "AdamOptimizer/epsilon"
  input: "gradients/block7/conv7/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/conv7/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "AdamOptimizer/update_block7/batch_normalization/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "block7/batch_normalization/gamma"
  input: "block7/batch_normalization/gamma/AdamOptimizer"
  input: "block7/batch_normalization/gamma/AdamOptimizer_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate"
  input: "AdamOptimizer/beta1"
  input: "AdamOptimizer/beta2"
  input: "AdamOptimizer/epsilon"
  input: "gradients/AddN_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "AdamOptimizer/update_block7/batch_normalization/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "block7/batch_normalization/beta"
  input: "block7/batch_normalization/beta/AdamOptimizer"
  input: "block7/batch_normalization/beta/AdamOptimizer_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate"
  input: "AdamOptimizer/beta1"
  input: "AdamOptimizer/beta2"
  input: "AdamOptimizer/epsilon"
  input: "gradients/AddN_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "AdamOptimizer/update_block8/conv8/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "block8/conv8/kernel"
  input: "block8/conv8/kernel/AdamOptimizer"
  input: "block8/conv8/kernel/AdamOptimizer_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate"
  input: "AdamOptimizer/beta1"
  input: "AdamOptimizer/beta2"
  input: "AdamOptimizer/epsilon"
  input: "gradients/block8/conv8/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/conv8/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "AdamOptimizer/update_block8/batch_normalization/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "block8/batch_normalization/gamma"
  input: "block8/batch_normalization/gamma/AdamOptimizer"
  input: "block8/batch_normalization/gamma/AdamOptimizer_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate"
  input: "AdamOptimizer/beta1"
  input: "AdamOptimizer/beta2"
  input: "AdamOptimizer/epsilon"
  input: "gradients/AddN_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "AdamOptimizer/update_block8/batch_normalization/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "block8/batch_normalization/beta"
  input: "block8/batch_normalization/beta/AdamOptimizer"
  input: "block8/batch_normalization/beta/AdamOptimizer_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate"
  input: "AdamOptimizer/beta1"
  input: "AdamOptimizer/beta2"
  input: "AdamOptimizer/epsilon"
  input: "gradients/AddN_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "AdamOptimizer/update_block9/conv9/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "block9/conv9/kernel"
  input: "block9/conv9/kernel/AdamOptimizer"
  input: "block9/conv9/kernel/AdamOptimizer_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate"
  input: "AdamOptimizer/beta1"
  input: "AdamOptimizer/beta2"
  input: "AdamOptimizer/epsilon"
  input: "gradients/block9/conv9/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/conv9/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "AdamOptimizer/update_block9/batch_normalization/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "block9/batch_normalization/gamma"
  input: "block9/batch_normalization/gamma/AdamOptimizer"
  input: "block9/batch_normalization/gamma/AdamOptimizer_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate"
  input: "AdamOptimizer/beta1"
  input: "AdamOptimizer/beta2"
  input: "AdamOptimizer/epsilon"
  input: "gradients/AddN_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "AdamOptimizer/update_block9/batch_normalization/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "block9/batch_normalization/beta"
  input: "block9/batch_normalization/beta/AdamOptimizer"
  input: "block9/batch_normalization/beta/AdamOptimizer_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate"
  input: "AdamOptimizer/beta1"
  input: "AdamOptimizer/beta2"
  input: "AdamOptimizer/epsilon"
  input: "gradients/AddN_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "AdamOptimizer/update_block10/conv10/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "block10/conv10/kernel"
  input: "block10/conv10/kernel/AdamOptimizer"
  input: "block10/conv10/kernel/AdamOptimizer_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate"
  input: "AdamOptimizer/beta1"
  input: "AdamOptimizer/beta2"
  input: "AdamOptimizer/epsilon"
  input: "gradients/block10/conv10/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/conv10/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "AdamOptimizer/update_block10/batch_normalization/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "block10/batch_normalization/gamma"
  input: "block10/batch_normalization/gamma/AdamOptimizer"
  input: "block10/batch_normalization/gamma/AdamOptimizer_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate"
  input: "AdamOptimizer/beta1"
  input: "AdamOptimizer/beta2"
  input: "AdamOptimizer/epsilon"
  input: "gradients/AddN_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "AdamOptimizer/update_block10/batch_normalization/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "block10/batch_normalization/beta"
  input: "block10/batch_normalization/beta/AdamOptimizer"
  input: "block10/batch_normalization/beta/AdamOptimizer_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate"
  input: "AdamOptimizer/beta1"
  input: "AdamOptimizer/beta2"
  input: "AdamOptimizer/epsilon"
  input: "gradients/AddN_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "AdamOptimizer/update_block11/conv11/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "block11/conv11/kernel"
  input: "block11/conv11/kernel/AdamOptimizer"
  input: "block11/conv11/kernel/AdamOptimizer_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate"
  input: "AdamOptimizer/beta1"
  input: "AdamOptimizer/beta2"
  input: "AdamOptimizer/epsilon"
  input: "gradients/block11/conv11/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/conv11/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "AdamOptimizer/update_block11/batch_normalization/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "block11/batch_normalization/gamma"
  input: "block11/batch_normalization/gamma/AdamOptimizer"
  input: "block11/batch_normalization/gamma/AdamOptimizer_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate"
  input: "AdamOptimizer/beta1"
  input: "AdamOptimizer/beta2"
  input: "AdamOptimizer/epsilon"
  input: "gradients/AddN_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "AdamOptimizer/update_block11/batch_normalization/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "block11/batch_normalization/beta"
  input: "block11/batch_normalization/beta/AdamOptimizer"
  input: "block11/batch_normalization/beta/AdamOptimizer_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate"
  input: "AdamOptimizer/beta1"
  input: "AdamOptimizer/beta2"
  input: "AdamOptimizer/epsilon"
  input: "gradients/AddN_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "AdamOptimizer/update_block12/conv12/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "block12/conv12/kernel"
  input: "block12/conv12/kernel/AdamOptimizer"
  input: "block12/conv12/kernel/AdamOptimizer_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate"
  input: "AdamOptimizer/beta1"
  input: "AdamOptimizer/beta2"
  input: "AdamOptimizer/epsilon"
  input: "gradients/block12/conv12/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/conv12/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "AdamOptimizer/update_block12/batch_normalization/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "block12/batch_normalization/gamma"
  input: "block12/batch_normalization/gamma/AdamOptimizer"
  input: "block12/batch_normalization/gamma/AdamOptimizer_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate"
  input: "AdamOptimizer/beta1"
  input: "AdamOptimizer/beta2"
  input: "AdamOptimizer/epsilon"
  input: "gradients/AddN_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "AdamOptimizer/update_block12/batch_normalization/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "block12/batch_normalization/beta"
  input: "block12/batch_normalization/beta/AdamOptimizer"
  input: "block12/batch_normalization/beta/AdamOptimizer_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate"
  input: "AdamOptimizer/beta1"
  input: "AdamOptimizer/beta2"
  input: "AdamOptimizer/epsilon"
  input: "gradients/AddN_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "AdamOptimizer/update_block13/conv13/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "block13/conv13/kernel"
  input: "block13/conv13/kernel/AdamOptimizer"
  input: "block13/conv13/kernel/AdamOptimizer_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate"
  input: "AdamOptimizer/beta1"
  input: "AdamOptimizer/beta2"
  input: "AdamOptimizer/epsilon"
  input: "gradients/block13/conv13/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/conv13/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "AdamOptimizer/update_block13/batch_normalization/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "block13/batch_normalization/gamma"
  input: "block13/batch_normalization/gamma/AdamOptimizer"
  input: "block13/batch_normalization/gamma/AdamOptimizer_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate"
  input: "AdamOptimizer/beta1"
  input: "AdamOptimizer/beta2"
  input: "AdamOptimizer/epsilon"
  input: "gradients/AddN_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "AdamOptimizer/update_block13/batch_normalization/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "block13/batch_normalization/beta"
  input: "block13/batch_normalization/beta/AdamOptimizer"
  input: "block13/batch_normalization/beta/AdamOptimizer_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate"
  input: "AdamOptimizer/beta1"
  input: "AdamOptimizer/beta2"
  input: "AdamOptimizer/epsilon"
  input: "gradients/AddN_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "AdamOptimizer/update_block14/conv14/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "block14/conv14/kernel"
  input: "block14/conv14/kernel/AdamOptimizer"
  input: "block14/conv14/kernel/AdamOptimizer_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate"
  input: "AdamOptimizer/beta1"
  input: "AdamOptimizer/beta2"
  input: "AdamOptimizer/epsilon"
  input: "gradients/block14/conv14/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/conv14/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "AdamOptimizer/update_block14/batch_normalization/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "block14/batch_normalization/gamma"
  input: "block14/batch_normalization/gamma/AdamOptimizer"
  input: "block14/batch_normalization/gamma/AdamOptimizer_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate"
  input: "AdamOptimizer/beta1"
  input: "AdamOptimizer/beta2"
  input: "AdamOptimizer/epsilon"
  input: "gradients/AddN_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "AdamOptimizer/update_block14/batch_normalization/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "block14/batch_normalization/beta"
  input: "block14/batch_normalization/beta/AdamOptimizer"
  input: "block14/batch_normalization/beta/AdamOptimizer_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate"
  input: "AdamOptimizer/beta1"
  input: "AdamOptimizer/beta2"
  input: "AdamOptimizer/epsilon"
  input: "gradients/AddN_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "AdamOptimizer/update_block15/conv15/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "block15/conv15/kernel"
  input: "block15/conv15/kernel/AdamOptimizer"
  input: "block15/conv15/kernel/AdamOptimizer_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate"
  input: "AdamOptimizer/beta1"
  input: "AdamOptimizer/beta2"
  input: "AdamOptimizer/epsilon"
  input: "gradients/block15/conv15/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/conv15/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "AdamOptimizer/update_block15/batch_normalization/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "block15/batch_normalization/gamma"
  input: "block15/batch_normalization/gamma/AdamOptimizer"
  input: "block15/batch_normalization/gamma/AdamOptimizer_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate"
  input: "AdamOptimizer/beta1"
  input: "AdamOptimizer/beta2"
  input: "AdamOptimizer/epsilon"
  input: "gradients/AddN_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "AdamOptimizer/update_block15/batch_normalization/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "block15/batch_normalization/beta"
  input: "block15/batch_normalization/beta/AdamOptimizer"
  input: "block15/batch_normalization/beta/AdamOptimizer_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate"
  input: "AdamOptimizer/beta1"
  input: "AdamOptimizer/beta2"
  input: "AdamOptimizer/epsilon"
  input: "gradients/AddN_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "AdamOptimizer/update_block16/conv16/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "block16/conv16/kernel"
  input: "block16/conv16/kernel/AdamOptimizer"
  input: "block16/conv16/kernel/AdamOptimizer_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate"
  input: "AdamOptimizer/beta1"
  input: "AdamOptimizer/beta2"
  input: "AdamOptimizer/epsilon"
  input: "gradients/block16/conv16/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/conv16/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "AdamOptimizer/update_block16/batch_normalization/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "block16/batch_normalization/gamma"
  input: "block16/batch_normalization/gamma/AdamOptimizer"
  input: "block16/batch_normalization/gamma/AdamOptimizer_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate"
  input: "AdamOptimizer/beta1"
  input: "AdamOptimizer/beta2"
  input: "AdamOptimizer/epsilon"
  input: "gradients/AddN_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "AdamOptimizer/update_block16/batch_normalization/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "block16/batch_normalization/beta"
  input: "block16/batch_normalization/beta/AdamOptimizer"
  input: "block16/batch_normalization/beta/AdamOptimizer_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate"
  input: "AdamOptimizer/beta1"
  input: "AdamOptimizer/beta2"
  input: "AdamOptimizer/epsilon"
  input: "gradients/AddN_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "AdamOptimizer/update_block17/conv17/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "block17/conv17/kernel"
  input: "block17/conv17/kernel/AdamOptimizer"
  input: "block17/conv17/kernel/AdamOptimizer_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate"
  input: "AdamOptimizer/beta1"
  input: "AdamOptimizer/beta2"
  input: "AdamOptimizer/epsilon"
  input: "gradients/block17/conv17/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/conv17/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "AdamOptimizer/update_block17/batch_normalization/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "block17/batch_normalization/gamma"
  input: "block17/batch_normalization/gamma/AdamOptimizer"
  input: "block17/batch_normalization/gamma/AdamOptimizer_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate"
  input: "AdamOptimizer/beta1"
  input: "AdamOptimizer/beta2"
  input: "AdamOptimizer/epsilon"
  input: "gradients/AddN_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "AdamOptimizer/update_block17/batch_normalization/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "block17/batch_normalization/beta"
  input: "block17/batch_normalization/beta/AdamOptimizer"
  input: "block17/batch_normalization/beta/AdamOptimizer_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate"
  input: "AdamOptimizer/beta1"
  input: "AdamOptimizer/beta2"
  input: "AdamOptimizer/epsilon"
  input: "gradients/AddN_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "AdamOptimizer/update_block18/conv18/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "block18/conv18/kernel"
  input: "block18/conv18/kernel/AdamOptimizer"
  input: "block18/conv18/kernel/AdamOptimizer_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate"
  input: "AdamOptimizer/beta1"
  input: "AdamOptimizer/beta2"
  input: "AdamOptimizer/epsilon"
  input: "gradients/block18/conv18/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/conv18/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "AdamOptimizer/update_block18/batch_normalization/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "block18/batch_normalization/gamma"
  input: "block18/batch_normalization/gamma/AdamOptimizer"
  input: "block18/batch_normalization/gamma/AdamOptimizer_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate"
  input: "AdamOptimizer/beta1"
  input: "AdamOptimizer/beta2"
  input: "AdamOptimizer/epsilon"
  input: "gradients/AddN_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "AdamOptimizer/update_block18/batch_normalization/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "block18/batch_normalization/beta"
  input: "block18/batch_normalization/beta/AdamOptimizer"
  input: "block18/batch_normalization/beta/AdamOptimizer_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate"
  input: "AdamOptimizer/beta1"
  input: "AdamOptimizer/beta2"
  input: "AdamOptimizer/epsilon"
  input: "gradients/AddN_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "AdamOptimizer/update_block19/conv19/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "block19/conv19/kernel"
  input: "block19/conv19/kernel/AdamOptimizer"
  input: "block19/conv19/kernel/AdamOptimizer_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate"
  input: "AdamOptimizer/beta1"
  input: "AdamOptimizer/beta2"
  input: "AdamOptimizer/epsilon"
  input: "gradients/block19/conv19/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/conv19/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "AdamOptimizer/update_block19/batch_normalization/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "block19/batch_normalization/gamma"
  input: "block19/batch_normalization/gamma/AdamOptimizer"
  input: "block19/batch_normalization/gamma/AdamOptimizer_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate"
  input: "AdamOptimizer/beta1"
  input: "AdamOptimizer/beta2"
  input: "AdamOptimizer/epsilon"
  input: "gradients/AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "AdamOptimizer/update_block19/batch_normalization/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "block19/batch_normalization/beta"
  input: "block19/batch_normalization/beta/AdamOptimizer"
  input: "block19/batch_normalization/beta/AdamOptimizer_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate"
  input: "AdamOptimizer/beta1"
  input: "AdamOptimizer/beta2"
  input: "AdamOptimizer/epsilon"
  input: "gradients/AddN_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "AdamOptimizer/update_block17/conv2d/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "block17/conv2d/kernel"
  input: "block17/conv2d/kernel/AdamOptimizer"
  input: "block17/conv2d/kernel/AdamOptimizer_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate"
  input: "AdamOptimizer/beta1"
  input: "AdamOptimizer/beta2"
  input: "AdamOptimizer/epsilon"
  input: "gradients/block17_1/conv2d/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/conv2d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "AdamOptimizer/mul"
  op: "Mul"
  input: "beta1_power/read"
  input: "AdamOptimizer/beta1"
  input: "^AdamOptimizer/update_block1/conv2d/kernel/ApplyAdam"
  input: "^AdamOptimizer/update_block1/conv2d/bias/ApplyAdam"
  input: "^AdamOptimizer/update_block2/conv2/kernel/ApplyAdam"
  input: "^AdamOptimizer/update_block2/batch_normalization/gamma/ApplyAdam"
  input: "^AdamOptimizer/update_block2/batch_normalization/beta/ApplyAdam"
  input: "^AdamOptimizer/update_block3/conv3/kernel/ApplyAdam"
  input: "^AdamOptimizer/update_block3/batch_normalization/gamma/ApplyAdam"
  input: "^AdamOptimizer/update_block3/batch_normalization/beta/ApplyAdam"
  input: "^AdamOptimizer/update_block4/conv4/kernel/ApplyAdam"
  input: "^AdamOptimizer/update_block4/batch_normalization/gamma/ApplyAdam"
  input: "^AdamOptimizer/update_block4/batch_normalization/beta/ApplyAdam"
  input: "^AdamOptimizer/update_block5/conv5/kernel/ApplyAdam"
  input: "^AdamOptimizer/update_block5/batch_normalization/gamma/ApplyAdam"
  input: "^AdamOptimizer/update_block5/batch_normalization/beta/ApplyAdam"
  input: "^AdamOptimizer/update_block6/conv6/kernel/ApplyAdam"
  input: "^AdamOptimizer/update_block6/batch_normalization/gamma/ApplyAdam"
  input: "^AdamOptimizer/update_block6/batch_normalization/beta/ApplyAdam"
  input: "^AdamOptimizer/update_block7/conv7/kernel/ApplyAdam"
  input: "^AdamOptimizer/update_block7/batch_normalization/gamma/ApplyAdam"
  input: "^AdamOptimizer/update_block7/batch_normalization/beta/ApplyAdam"
  input: "^AdamOptimizer/update_block8/conv8/kernel/ApplyAdam"
  input: "^AdamOptimizer/update_block8/batch_normalization/gamma/ApplyAdam"
  input: "^AdamOptimizer/update_block8/batch_normalization/beta/ApplyAdam"
  input: "^AdamOptimizer/update_block9/conv9/kernel/ApplyAdam"
  input: "^AdamOptimizer/update_block9/batch_normalization/gamma/ApplyAdam"
  input: "^AdamOptimizer/update_block9/batch_normalization/beta/ApplyAdam"
  input: "^AdamOptimizer/update_block10/conv10/kernel/ApplyAdam"
  input: "^AdamOptimizer/update_block10/batch_normalization/gamma/ApplyAdam"
  input: "^AdamOptimizer/update_block10/batch_normalization/beta/ApplyAdam"
  input: "^AdamOptimizer/update_block11/conv11/kernel/ApplyAdam"
  input: "^AdamOptimizer/update_block11/batch_normalization/gamma/ApplyAdam"
  input: "^AdamOptimizer/update_block11/batch_normalization/beta/ApplyAdam"
  input: "^AdamOptimizer/update_block12/conv12/kernel/ApplyAdam"
  input: "^AdamOptimizer/update_block12/batch_normalization/gamma/ApplyAdam"
  input: "^AdamOptimizer/update_block12/batch_normalization/beta/ApplyAdam"
  input: "^AdamOptimizer/update_block13/conv13/kernel/ApplyAdam"
  input: "^AdamOptimizer/update_block13/batch_normalization/gamma/ApplyAdam"
  input: "^AdamOptimizer/update_block13/batch_normalization/beta/ApplyAdam"
  input: "^AdamOptimizer/update_block14/conv14/kernel/ApplyAdam"
  input: "^AdamOptimizer/update_block14/batch_normalization/gamma/ApplyAdam"
  input: "^AdamOptimizer/update_block14/batch_normalization/beta/ApplyAdam"
  input: "^AdamOptimizer/update_block15/conv15/kernel/ApplyAdam"
  input: "^AdamOptimizer/update_block15/batch_normalization/gamma/ApplyAdam"
  input: "^AdamOptimizer/update_block15/batch_normalization/beta/ApplyAdam"
  input: "^AdamOptimizer/update_block16/conv16/kernel/ApplyAdam"
  input: "^AdamOptimizer/update_block16/batch_normalization/gamma/ApplyAdam"
  input: "^AdamOptimizer/update_block16/batch_normalization/beta/ApplyAdam"
  input: "^AdamOptimizer/update_block17/conv17/kernel/ApplyAdam"
  input: "^AdamOptimizer/update_block17/batch_normalization/gamma/ApplyAdam"
  input: "^AdamOptimizer/update_block17/batch_normalization/beta/ApplyAdam"
  input: "^AdamOptimizer/update_block18/conv18/kernel/ApplyAdam"
  input: "^AdamOptimizer/update_block18/batch_normalization/gamma/ApplyAdam"
  input: "^AdamOptimizer/update_block18/batch_normalization/beta/ApplyAdam"
  input: "^AdamOptimizer/update_block19/conv19/kernel/ApplyAdam"
  input: "^AdamOptimizer/update_block19/batch_normalization/gamma/ApplyAdam"
  input: "^AdamOptimizer/update_block19/batch_normalization/beta/ApplyAdam"
  input: "^AdamOptimizer/update_block17/conv2d/kernel/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1/conv2d/bias"
      }
    }
  }
}
node {
  name: "AdamOptimizer/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "AdamOptimizer/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1/conv2d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AdamOptimizer/mul_1"
  op: "Mul"
  input: "beta2_power/read"
  input: "AdamOptimizer/beta2"
  input: "^AdamOptimizer/update_block1/conv2d/kernel/ApplyAdam"
  input: "^AdamOptimizer/update_block1/conv2d/bias/ApplyAdam"
  input: "^AdamOptimizer/update_block2/conv2/kernel/ApplyAdam"
  input: "^AdamOptimizer/update_block2/batch_normalization/gamma/ApplyAdam"
  input: "^AdamOptimizer/update_block2/batch_normalization/beta/ApplyAdam"
  input: "^AdamOptimizer/update_block3/conv3/kernel/ApplyAdam"
  input: "^AdamOptimizer/update_block3/batch_normalization/gamma/ApplyAdam"
  input: "^AdamOptimizer/update_block3/batch_normalization/beta/ApplyAdam"
  input: "^AdamOptimizer/update_block4/conv4/kernel/ApplyAdam"
  input: "^AdamOptimizer/update_block4/batch_normalization/gamma/ApplyAdam"
  input: "^AdamOptimizer/update_block4/batch_normalization/beta/ApplyAdam"
  input: "^AdamOptimizer/update_block5/conv5/kernel/ApplyAdam"
  input: "^AdamOptimizer/update_block5/batch_normalization/gamma/ApplyAdam"
  input: "^AdamOptimizer/update_block5/batch_normalization/beta/ApplyAdam"
  input: "^AdamOptimizer/update_block6/conv6/kernel/ApplyAdam"
  input: "^AdamOptimizer/update_block6/batch_normalization/gamma/ApplyAdam"
  input: "^AdamOptimizer/update_block6/batch_normalization/beta/ApplyAdam"
  input: "^AdamOptimizer/update_block7/conv7/kernel/ApplyAdam"
  input: "^AdamOptimizer/update_block7/batch_normalization/gamma/ApplyAdam"
  input: "^AdamOptimizer/update_block7/batch_normalization/beta/ApplyAdam"
  input: "^AdamOptimizer/update_block8/conv8/kernel/ApplyAdam"
  input: "^AdamOptimizer/update_block8/batch_normalization/gamma/ApplyAdam"
  input: "^AdamOptimizer/update_block8/batch_normalization/beta/ApplyAdam"
  input: "^AdamOptimizer/update_block9/conv9/kernel/ApplyAdam"
  input: "^AdamOptimizer/update_block9/batch_normalization/gamma/ApplyAdam"
  input: "^AdamOptimizer/update_block9/batch_normalization/beta/ApplyAdam"
  input: "^AdamOptimizer/update_block10/conv10/kernel/ApplyAdam"
  input: "^AdamOptimizer/update_block10/batch_normalization/gamma/ApplyAdam"
  input: "^AdamOptimizer/update_block10/batch_normalization/beta/ApplyAdam"
  input: "^AdamOptimizer/update_block11/conv11/kernel/ApplyAdam"
  input: "^AdamOptimizer/update_block11/batch_normalization/gamma/ApplyAdam"
  input: "^AdamOptimizer/update_block11/batch_normalization/beta/ApplyAdam"
  input: "^AdamOptimizer/update_block12/conv12/kernel/ApplyAdam"
  input: "^AdamOptimizer/update_block12/batch_normalization/gamma/ApplyAdam"
  input: "^AdamOptimizer/update_block12/batch_normalization/beta/ApplyAdam"
  input: "^AdamOptimizer/update_block13/conv13/kernel/ApplyAdam"
  input: "^AdamOptimizer/update_block13/batch_normalization/gamma/ApplyAdam"
  input: "^AdamOptimizer/update_block13/batch_normalization/beta/ApplyAdam"
  input: "^AdamOptimizer/update_block14/conv14/kernel/ApplyAdam"
  input: "^AdamOptimizer/update_block14/batch_normalization/gamma/ApplyAdam"
  input: "^AdamOptimizer/update_block14/batch_normalization/beta/ApplyAdam"
  input: "^AdamOptimizer/update_block15/conv15/kernel/ApplyAdam"
  input: "^AdamOptimizer/update_block15/batch_normalization/gamma/ApplyAdam"
  input: "^AdamOptimizer/update_block15/batch_normalization/beta/ApplyAdam"
  input: "^AdamOptimizer/update_block16/conv16/kernel/ApplyAdam"
  input: "^AdamOptimizer/update_block16/batch_normalization/gamma/ApplyAdam"
  input: "^AdamOptimizer/update_block16/batch_normalization/beta/ApplyAdam"
  input: "^AdamOptimizer/update_block17/conv17/kernel/ApplyAdam"
  input: "^AdamOptimizer/update_block17/batch_normalization/gamma/ApplyAdam"
  input: "^AdamOptimizer/update_block17/batch_normalization/beta/ApplyAdam"
  input: "^AdamOptimizer/update_block18/conv18/kernel/ApplyAdam"
  input: "^AdamOptimizer/update_block18/batch_normalization/gamma/ApplyAdam"
  input: "^AdamOptimizer/update_block18/batch_normalization/beta/ApplyAdam"
  input: "^AdamOptimizer/update_block19/conv19/kernel/ApplyAdam"
  input: "^AdamOptimizer/update_block19/batch_normalization/gamma/ApplyAdam"
  input: "^AdamOptimizer/update_block19/batch_normalization/beta/ApplyAdam"
  input: "^AdamOptimizer/update_block17/conv2d/kernel/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1/conv2d/bias"
      }
    }
  }
}
node {
  name: "AdamOptimizer/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "AdamOptimizer/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1/conv2d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AdamOptimizer"
  op: "NoOp"
  input: "^block2/batch_normalization/AssignMovingAvg"
  input: "^block2/batch_normalization/AssignMovingAvg_1"
  input: "^block3/batch_normalization/AssignMovingAvg"
  input: "^block3/batch_normalization/AssignMovingAvg_1"
  input: "^block4/batch_normalization/AssignMovingAvg"
  input: "^block4/batch_normalization/AssignMovingAvg_1"
  input: "^block5/batch_normalization/AssignMovingAvg"
  input: "^block5/batch_normalization/AssignMovingAvg_1"
  input: "^block6/batch_normalization/AssignMovingAvg"
  input: "^block6/batch_normalization/AssignMovingAvg_1"
  input: "^block7/batch_normalization/AssignMovingAvg"
  input: "^block7/batch_normalization/AssignMovingAvg_1"
  input: "^block8/batch_normalization/AssignMovingAvg"
  input: "^block8/batch_normalization/AssignMovingAvg_1"
  input: "^block9/batch_normalization/AssignMovingAvg"
  input: "^block9/batch_normalization/AssignMovingAvg_1"
  input: "^block10/batch_normalization/AssignMovingAvg"
  input: "^block10/batch_normalization/AssignMovingAvg_1"
  input: "^block11/batch_normalization/AssignMovingAvg"
  input: "^block11/batch_normalization/AssignMovingAvg_1"
  input: "^block12/batch_normalization/AssignMovingAvg"
  input: "^block12/batch_normalization/AssignMovingAvg_1"
  input: "^block13/batch_normalization/AssignMovingAvg"
  input: "^block13/batch_normalization/AssignMovingAvg_1"
  input: "^block14/batch_normalization/AssignMovingAvg"
  input: "^block14/batch_normalization/AssignMovingAvg_1"
  input: "^block15/batch_normalization/AssignMovingAvg"
  input: "^block15/batch_normalization/AssignMovingAvg_1"
  input: "^block16/batch_normalization/AssignMovingAvg"
  input: "^block16/batch_normalization/AssignMovingAvg_1"
  input: "^block17/batch_normalization/AssignMovingAvg"
  input: "^block17/batch_normalization/AssignMovingAvg_1"
  input: "^block18/batch_normalization/AssignMovingAvg"
  input: "^block18/batch_normalization/AssignMovingAvg_1"
  input: "^block19/batch_normalization/AssignMovingAvg"
  input: "^block19/batch_normalization/AssignMovingAvg_1"
  input: "^AdamOptimizer/update_block1/conv2d/kernel/ApplyAdam"
  input: "^AdamOptimizer/update_block1/conv2d/bias/ApplyAdam"
  input: "^AdamOptimizer/update_block2/conv2/kernel/ApplyAdam"
  input: "^AdamOptimizer/update_block2/batch_normalization/gamma/ApplyAdam"
  input: "^AdamOptimizer/update_block2/batch_normalization/beta/ApplyAdam"
  input: "^AdamOptimizer/update_block3/conv3/kernel/ApplyAdam"
  input: "^AdamOptimizer/update_block3/batch_normalization/gamma/ApplyAdam"
  input: "^AdamOptimizer/update_block3/batch_normalization/beta/ApplyAdam"
  input: "^AdamOptimizer/update_block4/conv4/kernel/ApplyAdam"
  input: "^AdamOptimizer/update_block4/batch_normalization/gamma/ApplyAdam"
  input: "^AdamOptimizer/update_block4/batch_normalization/beta/ApplyAdam"
  input: "^AdamOptimizer/update_block5/conv5/kernel/ApplyAdam"
  input: "^AdamOptimizer/update_block5/batch_normalization/gamma/ApplyAdam"
  input: "^AdamOptimizer/update_block5/batch_normalization/beta/ApplyAdam"
  input: "^AdamOptimizer/update_block6/conv6/kernel/ApplyAdam"
  input: "^AdamOptimizer/update_block6/batch_normalization/gamma/ApplyAdam"
  input: "^AdamOptimizer/update_block6/batch_normalization/beta/ApplyAdam"
  input: "^AdamOptimizer/update_block7/conv7/kernel/ApplyAdam"
  input: "^AdamOptimizer/update_block7/batch_normalization/gamma/ApplyAdam"
  input: "^AdamOptimizer/update_block7/batch_normalization/beta/ApplyAdam"
  input: "^AdamOptimizer/update_block8/conv8/kernel/ApplyAdam"
  input: "^AdamOptimizer/update_block8/batch_normalization/gamma/ApplyAdam"
  input: "^AdamOptimizer/update_block8/batch_normalization/beta/ApplyAdam"
  input: "^AdamOptimizer/update_block9/conv9/kernel/ApplyAdam"
  input: "^AdamOptimizer/update_block9/batch_normalization/gamma/ApplyAdam"
  input: "^AdamOptimizer/update_block9/batch_normalization/beta/ApplyAdam"
  input: "^AdamOptimizer/update_block10/conv10/kernel/ApplyAdam"
  input: "^AdamOptimizer/update_block10/batch_normalization/gamma/ApplyAdam"
  input: "^AdamOptimizer/update_block10/batch_normalization/beta/ApplyAdam"
  input: "^AdamOptimizer/update_block11/conv11/kernel/ApplyAdam"
  input: "^AdamOptimizer/update_block11/batch_normalization/gamma/ApplyAdam"
  input: "^AdamOptimizer/update_block11/batch_normalization/beta/ApplyAdam"
  input: "^AdamOptimizer/update_block12/conv12/kernel/ApplyAdam"
  input: "^AdamOptimizer/update_block12/batch_normalization/gamma/ApplyAdam"
  input: "^AdamOptimizer/update_block12/batch_normalization/beta/ApplyAdam"
  input: "^AdamOptimizer/update_block13/conv13/kernel/ApplyAdam"
  input: "^AdamOptimizer/update_block13/batch_normalization/gamma/ApplyAdam"
  input: "^AdamOptimizer/update_block13/batch_normalization/beta/ApplyAdam"
  input: "^AdamOptimizer/update_block14/conv14/kernel/ApplyAdam"
  input: "^AdamOptimizer/update_block14/batch_normalization/gamma/ApplyAdam"
  input: "^AdamOptimizer/update_block14/batch_normalization/beta/ApplyAdam"
  input: "^AdamOptimizer/update_block15/conv15/kernel/ApplyAdam"
  input: "^AdamOptimizer/update_block15/batch_normalization/gamma/ApplyAdam"
  input: "^AdamOptimizer/update_block15/batch_normalization/beta/ApplyAdam"
  input: "^AdamOptimizer/update_block16/conv16/kernel/ApplyAdam"
  input: "^AdamOptimizer/update_block16/batch_normalization/gamma/ApplyAdam"
  input: "^AdamOptimizer/update_block16/batch_normalization/beta/ApplyAdam"
  input: "^AdamOptimizer/update_block17/conv17/kernel/ApplyAdam"
  input: "^AdamOptimizer/update_block17/batch_normalization/gamma/ApplyAdam"
  input: "^AdamOptimizer/update_block17/batch_normalization/beta/ApplyAdam"
  input: "^AdamOptimizer/update_block18/conv18/kernel/ApplyAdam"
  input: "^AdamOptimizer/update_block18/batch_normalization/gamma/ApplyAdam"
  input: "^AdamOptimizer/update_block18/batch_normalization/beta/ApplyAdam"
  input: "^AdamOptimizer/update_block19/conv19/kernel/ApplyAdam"
  input: "^AdamOptimizer/update_block19/batch_normalization/gamma/ApplyAdam"
  input: "^AdamOptimizer/update_block19/batch_normalization/beta/ApplyAdam"
  input: "^AdamOptimizer/update_block17/conv2d/kernel/ApplyAdam"
  input: "^AdamOptimizer/Assign"
  input: "^AdamOptimizer/Assign_1"
}
node {
  name: "init"
  op: "NoOp"
  input: "^block1/conv2d/kernel/Assign"
  input: "^block1/conv2d/bias/Assign"
  input: "^block2/conv2/kernel/Assign"
  input: "^block2/batch_normalization/gamma/Assign"
  input: "^block2/batch_normalization/beta/Assign"
  input: "^block2/batch_normalization/moving_mean/Assign"
  input: "^block2/batch_normalization/moving_variance/Assign"
  input: "^block3/conv3/kernel/Assign"
  input: "^block3/batch_normalization/gamma/Assign"
  input: "^block3/batch_normalization/beta/Assign"
  input: "^block3/batch_normalization/moving_mean/Assign"
  input: "^block3/batch_normalization/moving_variance/Assign"
  input: "^block4/conv4/kernel/Assign"
  input: "^block4/batch_normalization/gamma/Assign"
  input: "^block4/batch_normalization/beta/Assign"
  input: "^block4/batch_normalization/moving_mean/Assign"
  input: "^block4/batch_normalization/moving_variance/Assign"
  input: "^block5/conv5/kernel/Assign"
  input: "^block5/batch_normalization/gamma/Assign"
  input: "^block5/batch_normalization/beta/Assign"
  input: "^block5/batch_normalization/moving_mean/Assign"
  input: "^block5/batch_normalization/moving_variance/Assign"
  input: "^block6/conv6/kernel/Assign"
  input: "^block6/batch_normalization/gamma/Assign"
  input: "^block6/batch_normalization/beta/Assign"
  input: "^block6/batch_normalization/moving_mean/Assign"
  input: "^block6/batch_normalization/moving_variance/Assign"
  input: "^block7/conv7/kernel/Assign"
  input: "^block7/batch_normalization/gamma/Assign"
  input: "^block7/batch_normalization/beta/Assign"
  input: "^block7/batch_normalization/moving_mean/Assign"
  input: "^block7/batch_normalization/moving_variance/Assign"
  input: "^block8/conv8/kernel/Assign"
  input: "^block8/batch_normalization/gamma/Assign"
  input: "^block8/batch_normalization/beta/Assign"
  input: "^block8/batch_normalization/moving_mean/Assign"
  input: "^block8/batch_normalization/moving_variance/Assign"
  input: "^block9/conv9/kernel/Assign"
  input: "^block9/batch_normalization/gamma/Assign"
  input: "^block9/batch_normalization/beta/Assign"
  input: "^block9/batch_normalization/moving_mean/Assign"
  input: "^block9/batch_normalization/moving_variance/Assign"
  input: "^block10/conv10/kernel/Assign"
  input: "^block10/batch_normalization/gamma/Assign"
  input: "^block10/batch_normalization/beta/Assign"
  input: "^block10/batch_normalization/moving_mean/Assign"
  input: "^block10/batch_normalization/moving_variance/Assign"
  input: "^block11/conv11/kernel/Assign"
  input: "^block11/batch_normalization/gamma/Assign"
  input: "^block11/batch_normalization/beta/Assign"
  input: "^block11/batch_normalization/moving_mean/Assign"
  input: "^block11/batch_normalization/moving_variance/Assign"
  input: "^block12/conv12/kernel/Assign"
  input: "^block12/batch_normalization/gamma/Assign"
  input: "^block12/batch_normalization/beta/Assign"
  input: "^block12/batch_normalization/moving_mean/Assign"
  input: "^block12/batch_normalization/moving_variance/Assign"
  input: "^block13/conv13/kernel/Assign"
  input: "^block13/batch_normalization/gamma/Assign"
  input: "^block13/batch_normalization/beta/Assign"
  input: "^block13/batch_normalization/moving_mean/Assign"
  input: "^block13/batch_normalization/moving_variance/Assign"
  input: "^block14/conv14/kernel/Assign"
  input: "^block14/batch_normalization/gamma/Assign"
  input: "^block14/batch_normalization/beta/Assign"
  input: "^block14/batch_normalization/moving_mean/Assign"
  input: "^block14/batch_normalization/moving_variance/Assign"
  input: "^block15/conv15/kernel/Assign"
  input: "^block15/batch_normalization/gamma/Assign"
  input: "^block15/batch_normalization/beta/Assign"
  input: "^block15/batch_normalization/moving_mean/Assign"
  input: "^block15/batch_normalization/moving_variance/Assign"
  input: "^block16/conv16/kernel/Assign"
  input: "^block16/batch_normalization/gamma/Assign"
  input: "^block16/batch_normalization/beta/Assign"
  input: "^block16/batch_normalization/moving_mean/Assign"
  input: "^block16/batch_normalization/moving_variance/Assign"
  input: "^block17/conv17/kernel/Assign"
  input: "^block17/batch_normalization/gamma/Assign"
  input: "^block17/batch_normalization/beta/Assign"
  input: "^block17/batch_normalization/moving_mean/Assign"
  input: "^block17/batch_normalization/moving_variance/Assign"
  input: "^block18/conv18/kernel/Assign"
  input: "^block18/batch_normalization/gamma/Assign"
  input: "^block18/batch_normalization/beta/Assign"
  input: "^block18/batch_normalization/moving_mean/Assign"
  input: "^block18/batch_normalization/moving_variance/Assign"
  input: "^block19/conv19/kernel/Assign"
  input: "^block19/batch_normalization/gamma/Assign"
  input: "^block19/batch_normalization/beta/Assign"
  input: "^block19/batch_normalization/moving_mean/Assign"
  input: "^block19/batch_normalization/moving_variance/Assign"
  input: "^block17/conv2d/kernel/Assign"
  input: "^beta1_power/Assign"
  input: "^beta2_power/Assign"
  input: "^block1/conv2d/kernel/AdamOptimizer/Assign"
  input: "^block1/conv2d/kernel/AdamOptimizer_1/Assign"
  input: "^block1/conv2d/bias/AdamOptimizer/Assign"
  input: "^block1/conv2d/bias/AdamOptimizer_1/Assign"
  input: "^block2/conv2/kernel/AdamOptimizer/Assign"
  input: "^block2/conv2/kernel/AdamOptimizer_1/Assign"
  input: "^block2/batch_normalization/gamma/AdamOptimizer/Assign"
  input: "^block2/batch_normalization/gamma/AdamOptimizer_1/Assign"
  input: "^block2/batch_normalization/beta/AdamOptimizer/Assign"
  input: "^block2/batch_normalization/beta/AdamOptimizer_1/Assign"
  input: "^block3/conv3/kernel/AdamOptimizer/Assign"
  input: "^block3/conv3/kernel/AdamOptimizer_1/Assign"
  input: "^block3/batch_normalization/gamma/AdamOptimizer/Assign"
  input: "^block3/batch_normalization/gamma/AdamOptimizer_1/Assign"
  input: "^block3/batch_normalization/beta/AdamOptimizer/Assign"
  input: "^block3/batch_normalization/beta/AdamOptimizer_1/Assign"
  input: "^block4/conv4/kernel/AdamOptimizer/Assign"
  input: "^block4/conv4/kernel/AdamOptimizer_1/Assign"
  input: "^block4/batch_normalization/gamma/AdamOptimizer/Assign"
  input: "^block4/batch_normalization/gamma/AdamOptimizer_1/Assign"
  input: "^block4/batch_normalization/beta/AdamOptimizer/Assign"
  input: "^block4/batch_normalization/beta/AdamOptimizer_1/Assign"
  input: "^block5/conv5/kernel/AdamOptimizer/Assign"
  input: "^block5/conv5/kernel/AdamOptimizer_1/Assign"
  input: "^block5/batch_normalization/gamma/AdamOptimizer/Assign"
  input: "^block5/batch_normalization/gamma/AdamOptimizer_1/Assign"
  input: "^block5/batch_normalization/beta/AdamOptimizer/Assign"
  input: "^block5/batch_normalization/beta/AdamOptimizer_1/Assign"
  input: "^block6/conv6/kernel/AdamOptimizer/Assign"
  input: "^block6/conv6/kernel/AdamOptimizer_1/Assign"
  input: "^block6/batch_normalization/gamma/AdamOptimizer/Assign"
  input: "^block6/batch_normalization/gamma/AdamOptimizer_1/Assign"
  input: "^block6/batch_normalization/beta/AdamOptimizer/Assign"
  input: "^block6/batch_normalization/beta/AdamOptimizer_1/Assign"
  input: "^block7/conv7/kernel/AdamOptimizer/Assign"
  input: "^block7/conv7/kernel/AdamOptimizer_1/Assign"
  input: "^block7/batch_normalization/gamma/AdamOptimizer/Assign"
  input: "^block7/batch_normalization/gamma/AdamOptimizer_1/Assign"
  input: "^block7/batch_normalization/beta/AdamOptimizer/Assign"
  input: "^block7/batch_normalization/beta/AdamOptimizer_1/Assign"
  input: "^block8/conv8/kernel/AdamOptimizer/Assign"
  input: "^block8/conv8/kernel/AdamOptimizer_1/Assign"
  input: "^block8/batch_normalization/gamma/AdamOptimizer/Assign"
  input: "^block8/batch_normalization/gamma/AdamOptimizer_1/Assign"
  input: "^block8/batch_normalization/beta/AdamOptimizer/Assign"
  input: "^block8/batch_normalization/beta/AdamOptimizer_1/Assign"
  input: "^block9/conv9/kernel/AdamOptimizer/Assign"
  input: "^block9/conv9/kernel/AdamOptimizer_1/Assign"
  input: "^block9/batch_normalization/gamma/AdamOptimizer/Assign"
  input: "^block9/batch_normalization/gamma/AdamOptimizer_1/Assign"
  input: "^block9/batch_normalization/beta/AdamOptimizer/Assign"
  input: "^block9/batch_normalization/beta/AdamOptimizer_1/Assign"
  input: "^block10/conv10/kernel/AdamOptimizer/Assign"
  input: "^block10/conv10/kernel/AdamOptimizer_1/Assign"
  input: "^block10/batch_normalization/gamma/AdamOptimizer/Assign"
  input: "^block10/batch_normalization/gamma/AdamOptimizer_1/Assign"
  input: "^block10/batch_normalization/beta/AdamOptimizer/Assign"
  input: "^block10/batch_normalization/beta/AdamOptimizer_1/Assign"
  input: "^block11/conv11/kernel/AdamOptimizer/Assign"
  input: "^block11/conv11/kernel/AdamOptimizer_1/Assign"
  input: "^block11/batch_normalization/gamma/AdamOptimizer/Assign"
  input: "^block11/batch_normalization/gamma/AdamOptimizer_1/Assign"
  input: "^block11/batch_normalization/beta/AdamOptimizer/Assign"
  input: "^block11/batch_normalization/beta/AdamOptimizer_1/Assign"
  input: "^block12/conv12/kernel/AdamOptimizer/Assign"
  input: "^block12/conv12/kernel/AdamOptimizer_1/Assign"
  input: "^block12/batch_normalization/gamma/AdamOptimizer/Assign"
  input: "^block12/batch_normalization/gamma/AdamOptimizer_1/Assign"
  input: "^block12/batch_normalization/beta/AdamOptimizer/Assign"
  input: "^block12/batch_normalization/beta/AdamOptimizer_1/Assign"
  input: "^block13/conv13/kernel/AdamOptimizer/Assign"
  input: "^block13/conv13/kernel/AdamOptimizer_1/Assign"
  input: "^block13/batch_normalization/gamma/AdamOptimizer/Assign"
  input: "^block13/batch_normalization/gamma/AdamOptimizer_1/Assign"
  input: "^block13/batch_normalization/beta/AdamOptimizer/Assign"
  input: "^block13/batch_normalization/beta/AdamOptimizer_1/Assign"
  input: "^block14/conv14/kernel/AdamOptimizer/Assign"
  input: "^block14/conv14/kernel/AdamOptimizer_1/Assign"
  input: "^block14/batch_normalization/gamma/AdamOptimizer/Assign"
  input: "^block14/batch_normalization/gamma/AdamOptimizer_1/Assign"
  input: "^block14/batch_normalization/beta/AdamOptimizer/Assign"
  input: "^block14/batch_normalization/beta/AdamOptimizer_1/Assign"
  input: "^block15/conv15/kernel/AdamOptimizer/Assign"
  input: "^block15/conv15/kernel/AdamOptimizer_1/Assign"
  input: "^block15/batch_normalization/gamma/AdamOptimizer/Assign"
  input: "^block15/batch_normalization/gamma/AdamOptimizer_1/Assign"
  input: "^block15/batch_normalization/beta/AdamOptimizer/Assign"
  input: "^block15/batch_normalization/beta/AdamOptimizer_1/Assign"
  input: "^block16/conv16/kernel/AdamOptimizer/Assign"
  input: "^block16/conv16/kernel/AdamOptimizer_1/Assign"
  input: "^block16/batch_normalization/gamma/AdamOptimizer/Assign"
  input: "^block16/batch_normalization/gamma/AdamOptimizer_1/Assign"
  input: "^block16/batch_normalization/beta/AdamOptimizer/Assign"
  input: "^block16/batch_normalization/beta/AdamOptimizer_1/Assign"
  input: "^block17/conv17/kernel/AdamOptimizer/Assign"
  input: "^block17/conv17/kernel/AdamOptimizer_1/Assign"
  input: "^block17/batch_normalization/gamma/AdamOptimizer/Assign"
  input: "^block17/batch_normalization/gamma/AdamOptimizer_1/Assign"
  input: "^block17/batch_normalization/beta/AdamOptimizer/Assign"
  input: "^block17/batch_normalization/beta/AdamOptimizer_1/Assign"
  input: "^block18/conv18/kernel/AdamOptimizer/Assign"
  input: "^block18/conv18/kernel/AdamOptimizer_1/Assign"
  input: "^block18/batch_normalization/gamma/AdamOptimizer/Assign"
  input: "^block18/batch_normalization/gamma/AdamOptimizer_1/Assign"
  input: "^block18/batch_normalization/beta/AdamOptimizer/Assign"
  input: "^block18/batch_normalization/beta/AdamOptimizer_1/Assign"
  input: "^block19/conv19/kernel/AdamOptimizer/Assign"
  input: "^block19/conv19/kernel/AdamOptimizer_1/Assign"
  input: "^block19/batch_normalization/gamma/AdamOptimizer/Assign"
  input: "^block19/batch_normalization/gamma/AdamOptimizer_1/Assign"
  input: "^block19/batch_normalization/beta/AdamOptimizer/Assign"
  input: "^block19/batch_normalization/beta/AdamOptimizer_1/Assign"
  input: "^block17/conv2d/kernel/AdamOptimizer/Assign"
  input: "^block17/conv2d/kernel/AdamOptimizer_1/Assign"
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 209
          }
        }
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "block1/conv2d/bias"
        string_val: "block1/conv2d/bias/AdamOptimizer"
        string_val: "block1/conv2d/bias/AdamOptimizer_1"
        string_val: "block1/conv2d/kernel"
        string_val: "block1/conv2d/kernel/AdamOptimizer"
        string_val: "block1/conv2d/kernel/AdamOptimizer_1"
        string_val: "block10/batch_normalization/beta"
        string_val: "block10/batch_normalization/beta/AdamOptimizer"
        string_val: "block10/batch_normalization/beta/AdamOptimizer_1"
        string_val: "block10/batch_normalization/gamma"
        string_val: "block10/batch_normalization/gamma/AdamOptimizer"
        string_val: "block10/batch_normalization/gamma/AdamOptimizer_1"
        string_val: "block10/batch_normalization/moving_mean"
        string_val: "block10/batch_normalization/moving_variance"
        string_val: "block10/conv10/kernel"
        string_val: "block10/conv10/kernel/AdamOptimizer"
        string_val: "block10/conv10/kernel/AdamOptimizer_1"
        string_val: "block11/batch_normalization/beta"
        string_val: "block11/batch_normalization/beta/AdamOptimizer"
        string_val: "block11/batch_normalization/beta/AdamOptimizer_1"
        string_val: "block11/batch_normalization/gamma"
        string_val: "block11/batch_normalization/gamma/AdamOptimizer"
        string_val: "block11/batch_normalization/gamma/AdamOptimizer_1"
        string_val: "block11/batch_normalization/moving_mean"
        string_val: "block11/batch_normalization/moving_variance"
        string_val: "block11/conv11/kernel"
        string_val: "block11/conv11/kernel/AdamOptimizer"
        string_val: "block11/conv11/kernel/AdamOptimizer_1"
        string_val: "block12/batch_normalization/beta"
        string_val: "block12/batch_normalization/beta/AdamOptimizer"
        string_val: "block12/batch_normalization/beta/AdamOptimizer_1"
        string_val: "block12/batch_normalization/gamma"
        string_val: "block12/batch_normalization/gamma/AdamOptimizer"
        string_val: "block12/batch_normalization/gamma/AdamOptimizer_1"
        string_val: "block12/batch_normalization/moving_mean"
        string_val: "block12/batch_normalization/moving_variance"
        string_val: "block12/conv12/kernel"
        string_val: "block12/conv12/kernel/AdamOptimizer"
        string_val: "block12/conv12/kernel/AdamOptimizer_1"
        string_val: "block13/batch_normalization/beta"
        string_val: "block13/batch_normalization/beta/AdamOptimizer"
        string_val: "block13/batch_normalization/beta/AdamOptimizer_1"
        string_val: "block13/batch_normalization/gamma"
        string_val: "block13/batch_normalization/gamma/AdamOptimizer"
        string_val: "block13/batch_normalization/gamma/AdamOptimizer_1"
        string_val: "block13/batch_normalization/moving_mean"
        string_val: "block13/batch_normalization/moving_variance"
        string_val: "block13/conv13/kernel"
        string_val: "block13/conv13/kernel/AdamOptimizer"
        string_val: "block13/conv13/kernel/AdamOptimizer_1"
        string_val: "block14/batch_normalization/beta"
        string_val: "block14/batch_normalization/beta/AdamOptimizer"
        string_val: "block14/batch_normalization/beta/AdamOptimizer_1"
        string_val: "block14/batch_normalization/gamma"
        string_val: "block14/batch_normalization/gamma/AdamOptimizer"
        string_val: "block14/batch_normalization/gamma/AdamOptimizer_1"
        string_val: "block14/batch_normalization/moving_mean"
        string_val: "block14/batch_normalization/moving_variance"
        string_val: "block14/conv14/kernel"
        string_val: "block14/conv14/kernel/AdamOptimizer"
        string_val: "block14/conv14/kernel/AdamOptimizer_1"
        string_val: "block15/batch_normalization/beta"
        string_val: "block15/batch_normalization/beta/AdamOptimizer"
        string_val: "block15/batch_normalization/beta/AdamOptimizer_1"
        string_val: "block15/batch_normalization/gamma"
        string_val: "block15/batch_normalization/gamma/AdamOptimizer"
        string_val: "block15/batch_normalization/gamma/AdamOptimizer_1"
        string_val: "block15/batch_normalization/moving_mean"
        string_val: "block15/batch_normalization/moving_variance"
        string_val: "block15/conv15/kernel"
        string_val: "block15/conv15/kernel/AdamOptimizer"
        string_val: "block15/conv15/kernel/AdamOptimizer_1"
        string_val: "block16/batch_normalization/beta"
        string_val: "block16/batch_normalization/beta/AdamOptimizer"
        string_val: "block16/batch_normalization/beta/AdamOptimizer_1"
        string_val: "block16/batch_normalization/gamma"
        string_val: "block16/batch_normalization/gamma/AdamOptimizer"
        string_val: "block16/batch_normalization/gamma/AdamOptimizer_1"
        string_val: "block16/batch_normalization/moving_mean"
        string_val: "block16/batch_normalization/moving_variance"
        string_val: "block16/conv16/kernel"
        string_val: "block16/conv16/kernel/AdamOptimizer"
        string_val: "block16/conv16/kernel/AdamOptimizer_1"
        string_val: "block17/batch_normalization/beta"
        string_val: "block17/batch_normalization/beta/AdamOptimizer"
        string_val: "block17/batch_normalization/beta/AdamOptimizer_1"
        string_val: "block17/batch_normalization/gamma"
        string_val: "block17/batch_normalization/gamma/AdamOptimizer"
        string_val: "block17/batch_normalization/gamma/AdamOptimizer_1"
        string_val: "block17/batch_normalization/moving_mean"
        string_val: "block17/batch_normalization/moving_variance"
        string_val: "block17/conv17/kernel"
        string_val: "block17/conv17/kernel/AdamOptimizer"
        string_val: "block17/conv17/kernel/AdamOptimizer_1"
        string_val: "block17/conv2d/kernel"
        string_val: "block17/conv2d/kernel/AdamOptimizer"
        string_val: "block17/conv2d/kernel/AdamOptimizer_1"
        string_val: "block18/batch_normalization/beta"
        string_val: "block18/batch_normalization/beta/AdamOptimizer"
        string_val: "block18/batch_normalization/beta/AdamOptimizer_1"
        string_val: "block18/batch_normalization/gamma"
        string_val: "block18/batch_normalization/gamma/AdamOptimizer"
        string_val: "block18/batch_normalization/gamma/AdamOptimizer_1"
        string_val: "block18/batch_normalization/moving_mean"
        string_val: "block18/batch_normalization/moving_variance"
        string_val: "block18/conv18/kernel"
        string_val: "block18/conv18/kernel/AdamOptimizer"
        string_val: "block18/conv18/kernel/AdamOptimizer_1"
        string_val: "block19/batch_normalization/beta"
        string_val: "block19/batch_normalization/beta/AdamOptimizer"
        string_val: "block19/batch_normalization/beta/AdamOptimizer_1"
        string_val: "block19/batch_normalization/gamma"
        string_val: "block19/batch_normalization/gamma/AdamOptimizer"
        string_val: "block19/batch_normalization/gamma/AdamOptimizer_1"
        string_val: "block19/batch_normalization/moving_mean"
        string_val: "block19/batch_normalization/moving_variance"
        string_val: "block19/conv19/kernel"
        string_val: "block19/conv19/kernel/AdamOptimizer"
        string_val: "block19/conv19/kernel/AdamOptimizer_1"
        string_val: "block2/batch_normalization/beta"
        string_val: "block2/batch_normalization/beta/AdamOptimizer"
        string_val: "block2/batch_normalization/beta/AdamOptimizer_1"
        string_val: "block2/batch_normalization/gamma"
        string_val: "block2/batch_normalization/gamma/AdamOptimizer"
        string_val: "block2/batch_normalization/gamma/AdamOptimizer_1"
        string_val: "block2/batch_normalization/moving_mean"
        string_val: "block2/batch_normalization/moving_variance"
        string_val: "block2/conv2/kernel"
        string_val: "block2/conv2/kernel/AdamOptimizer"
        string_val: "block2/conv2/kernel/AdamOptimizer_1"
        string_val: "block3/batch_normalization/beta"
        string_val: "block3/batch_normalization/beta/AdamOptimizer"
        string_val: "block3/batch_normalization/beta/AdamOptimizer_1"
        string_val: "block3/batch_normalization/gamma"
        string_val: "block3/batch_normalization/gamma/AdamOptimizer"
        string_val: "block3/batch_normalization/gamma/AdamOptimizer_1"
        string_val: "block3/batch_normalization/moving_mean"
        string_val: "block3/batch_normalization/moving_variance"
        string_val: "block3/conv3/kernel"
        string_val: "block3/conv3/kernel/AdamOptimizer"
        string_val: "block3/conv3/kernel/AdamOptimizer_1"
        string_val: "block4/batch_normalization/beta"
        string_val: "block4/batch_normalization/beta/AdamOptimizer"
        string_val: "block4/batch_normalization/beta/AdamOptimizer_1"
        string_val: "block4/batch_normalization/gamma"
        string_val: "block4/batch_normalization/gamma/AdamOptimizer"
        string_val: "block4/batch_normalization/gamma/AdamOptimizer_1"
        string_val: "block4/batch_normalization/moving_mean"
        string_val: "block4/batch_normalization/moving_variance"
        string_val: "block4/conv4/kernel"
        string_val: "block4/conv4/kernel/AdamOptimizer"
        string_val: "block4/conv4/kernel/AdamOptimizer_1"
        string_val: "block5/batch_normalization/beta"
        string_val: "block5/batch_normalization/beta/AdamOptimizer"
        string_val: "block5/batch_normalization/beta/AdamOptimizer_1"
        string_val: "block5/batch_normalization/gamma"
        string_val: "block5/batch_normalization/gamma/AdamOptimizer"
        string_val: "block5/batch_normalization/gamma/AdamOptimizer_1"
        string_val: "block5/batch_normalization/moving_mean"
        string_val: "block5/batch_normalization/moving_variance"
        string_val: "block5/conv5/kernel"
        string_val: "block5/conv5/kernel/AdamOptimizer"
        string_val: "block5/conv5/kernel/AdamOptimizer_1"
        string_val: "block6/batch_normalization/beta"
        string_val: "block6/batch_normalization/beta/AdamOptimizer"
        string_val: "block6/batch_normalization/beta/AdamOptimizer_1"
        string_val: "block6/batch_normalization/gamma"
        string_val: "block6/batch_normalization/gamma/AdamOptimizer"
        string_val: "block6/batch_normalization/gamma/AdamOptimizer_1"
        string_val: "block6/batch_normalization/moving_mean"
        string_val: "block6/batch_normalization/moving_variance"
        string_val: "block6/conv6/kernel"
        string_val: "block6/conv6/kernel/AdamOptimizer"
        string_val: "block6/conv6/kernel/AdamOptimizer_1"
        string_val: "block7/batch_normalization/beta"
        string_val: "block7/batch_normalization/beta/AdamOptimizer"
        string_val: "block7/batch_normalization/beta/AdamOptimizer_1"
        string_val: "block7/batch_normalization/gamma"
        string_val: "block7/batch_normalization/gamma/AdamOptimizer"
        string_val: "block7/batch_normalization/gamma/AdamOptimizer_1"
        string_val: "block7/batch_normalization/moving_mean"
        string_val: "block7/batch_normalization/moving_variance"
        string_val: "block7/conv7/kernel"
        string_val: "block7/conv7/kernel/AdamOptimizer"
        string_val: "block7/conv7/kernel/AdamOptimizer_1"
        string_val: "block8/batch_normalization/beta"
        string_val: "block8/batch_normalization/beta/AdamOptimizer"
        string_val: "block8/batch_normalization/beta/AdamOptimizer_1"
        string_val: "block8/batch_normalization/gamma"
        string_val: "block8/batch_normalization/gamma/AdamOptimizer"
        string_val: "block8/batch_normalization/gamma/AdamOptimizer_1"
        string_val: "block8/batch_normalization/moving_mean"
        string_val: "block8/batch_normalization/moving_variance"
        string_val: "block8/conv8/kernel"
        string_val: "block8/conv8/kernel/AdamOptimizer"
        string_val: "block8/conv8/kernel/AdamOptimizer_1"
        string_val: "block9/batch_normalization/beta"
        string_val: "block9/batch_normalization/beta/AdamOptimizer"
        string_val: "block9/batch_normalization/beta/AdamOptimizer_1"
        string_val: "block9/batch_normalization/gamma"
        string_val: "block9/batch_normalization/gamma/AdamOptimizer"
        string_val: "block9/batch_normalization/gamma/AdamOptimizer_1"
        string_val: "block9/batch_normalization/moving_mean"
        string_val: "block9/batch_normalization/moving_variance"
        string_val: "block9/conv9/kernel"
        string_val: "block9/conv9/kernel/AdamOptimizer"
        string_val: "block9/conv9/kernel/AdamOptimizer_1"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 209
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "beta1_power"
  input: "beta2_power"
  input: "block1/conv2d/bias"
  input: "block1/conv2d/bias/AdamOptimizer"
  input: "block1/conv2d/bias/AdamOptimizer_1"
  input: "block1/conv2d/kernel"
  input: "block1/conv2d/kernel/AdamOptimizer"
  input: "block1/conv2d/kernel/AdamOptimizer_1"
  input: "block10/batch_normalization/beta"
  input: "block10/batch_normalization/beta/AdamOptimizer"
  input: "block10/batch_normalization/beta/AdamOptimizer_1"
  input: "block10/batch_normalization/gamma"
  input: "block10/batch_normalization/gamma/AdamOptimizer"
  input: "block10/batch_normalization/gamma/AdamOptimizer_1"
  input: "block10/batch_normalization/moving_mean"
  input: "block10/batch_normalization/moving_variance"
  input: "block10/conv10/kernel"
  input: "block10/conv10/kernel/AdamOptimizer"
  input: "block10/conv10/kernel/AdamOptimizer_1"
  input: "block11/batch_normalization/beta"
  input: "block11/batch_normalization/beta/AdamOptimizer"
  input: "block11/batch_normalization/beta/AdamOptimizer_1"
  input: "block11/batch_normalization/gamma"
  input: "block11/batch_normalization/gamma/AdamOptimizer"
  input: "block11/batch_normalization/gamma/AdamOptimizer_1"
  input: "block11/batch_normalization/moving_mean"
  input: "block11/batch_normalization/moving_variance"
  input: "block11/conv11/kernel"
  input: "block11/conv11/kernel/AdamOptimizer"
  input: "block11/conv11/kernel/AdamOptimizer_1"
  input: "block12/batch_normalization/beta"
  input: "block12/batch_normalization/beta/AdamOptimizer"
  input: "block12/batch_normalization/beta/AdamOptimizer_1"
  input: "block12/batch_normalization/gamma"
  input: "block12/batch_normalization/gamma/AdamOptimizer"
  input: "block12/batch_normalization/gamma/AdamOptimizer_1"
  input: "block12/batch_normalization/moving_mean"
  input: "block12/batch_normalization/moving_variance"
  input: "block12/conv12/kernel"
  input: "block12/conv12/kernel/AdamOptimizer"
  input: "block12/conv12/kernel/AdamOptimizer_1"
  input: "block13/batch_normalization/beta"
  input: "block13/batch_normalization/beta/AdamOptimizer"
  input: "block13/batch_normalization/beta/AdamOptimizer_1"
  input: "block13/batch_normalization/gamma"
  input: "block13/batch_normalization/gamma/AdamOptimizer"
  input: "block13/batch_normalization/gamma/AdamOptimizer_1"
  input: "block13/batch_normalization/moving_mean"
  input: "block13/batch_normalization/moving_variance"
  input: "block13/conv13/kernel"
  input: "block13/conv13/kernel/AdamOptimizer"
  input: "block13/conv13/kernel/AdamOptimizer_1"
  input: "block14/batch_normalization/beta"
  input: "block14/batch_normalization/beta/AdamOptimizer"
  input: "block14/batch_normalization/beta/AdamOptimizer_1"
  input: "block14/batch_normalization/gamma"
  input: "block14/batch_normalization/gamma/AdamOptimizer"
  input: "block14/batch_normalization/gamma/AdamOptimizer_1"
  input: "block14/batch_normalization/moving_mean"
  input: "block14/batch_normalization/moving_variance"
  input: "block14/conv14/kernel"
  input: "block14/conv14/kernel/AdamOptimizer"
  input: "block14/conv14/kernel/AdamOptimizer_1"
  input: "block15/batch_normalization/beta"
  input: "block15/batch_normalization/beta/AdamOptimizer"
  input: "block15/batch_normalization/beta/AdamOptimizer_1"
  input: "block15/batch_normalization/gamma"
  input: "block15/batch_normalization/gamma/AdamOptimizer"
  input: "block15/batch_normalization/gamma/AdamOptimizer_1"
  input: "block15/batch_normalization/moving_mean"
  input: "block15/batch_normalization/moving_variance"
  input: "block15/conv15/kernel"
  input: "block15/conv15/kernel/AdamOptimizer"
  input: "block15/conv15/kernel/AdamOptimizer_1"
  input: "block16/batch_normalization/beta"
  input: "block16/batch_normalization/beta/AdamOptimizer"
  input: "block16/batch_normalization/beta/AdamOptimizer_1"
  input: "block16/batch_normalization/gamma"
  input: "block16/batch_normalization/gamma/AdamOptimizer"
  input: "block16/batch_normalization/gamma/AdamOptimizer_1"
  input: "block16/batch_normalization/moving_mean"
  input: "block16/batch_normalization/moving_variance"
  input: "block16/conv16/kernel"
  input: "block16/conv16/kernel/AdamOptimizer"
  input: "block16/conv16/kernel/AdamOptimizer_1"
  input: "block17/batch_normalization/beta"
  input: "block17/batch_normalization/beta/AdamOptimizer"
  input: "block17/batch_normalization/beta/AdamOptimizer_1"
  input: "block17/batch_normalization/gamma"
  input: "block17/batch_normalization/gamma/AdamOptimizer"
  input: "block17/batch_normalization/gamma/AdamOptimizer_1"
  input: "block17/batch_normalization/moving_mean"
  input: "block17/batch_normalization/moving_variance"
  input: "block17/conv17/kernel"
  input: "block17/conv17/kernel/AdamOptimizer"
  input: "block17/conv17/kernel/AdamOptimizer_1"
  input: "block17/conv2d/kernel"
  input: "block17/conv2d/kernel/AdamOptimizer"
  input: "block17/conv2d/kernel/AdamOptimizer_1"
  input: "block18/batch_normalization/beta"
  input: "block18/batch_normalization/beta/AdamOptimizer"
  input: "block18/batch_normalization/beta/AdamOptimizer_1"
  input: "block18/batch_normalization/gamma"
  input: "block18/batch_normalization/gamma/AdamOptimizer"
  input: "block18/batch_normalization/gamma/AdamOptimizer_1"
  input: "block18/batch_normalization/moving_mean"
  input: "block18/batch_normalization/moving_variance"
  input: "block18/conv18/kernel"
  input: "block18/conv18/kernel/AdamOptimizer"
  input: "block18/conv18/kernel/AdamOptimizer_1"
  input: "block19/batch_normalization/beta"
  input: "block19/batch_normalization/beta/AdamOptimizer"
  input: "block19/batch_normalization/beta/AdamOptimizer_1"
  input: "block19/batch_normalization/gamma"
  input: "block19/batch_normalization/gamma/AdamOptimizer"
  input: "block19/batch_normalization/gamma/AdamOptimizer_1"
  input: "block19/batch_normalization/moving_mean"
  input: "block19/batch_normalization/moving_variance"
  input: "block19/conv19/kernel"
  input: "block19/conv19/kernel/AdamOptimizer"
  input: "block19/conv19/kernel/AdamOptimizer_1"
  input: "block2/batch_normalization/beta"
  input: "block2/batch_normalization/beta/AdamOptimizer"
  input: "block2/batch_normalization/beta/AdamOptimizer_1"
  input: "block2/batch_normalization/gamma"
  input: "block2/batch_normalization/gamma/AdamOptimizer"
  input: "block2/batch_normalization/gamma/AdamOptimizer_1"
  input: "block2/batch_normalization/moving_mean"
  input: "block2/batch_normalization/moving_variance"
  input: "block2/conv2/kernel"
  input: "block2/conv2/kernel/AdamOptimizer"
  input: "block2/conv2/kernel/AdamOptimizer_1"
  input: "block3/batch_normalization/beta"
  input: "block3/batch_normalization/beta/AdamOptimizer"
  input: "block3/batch_normalization/beta/AdamOptimizer_1"
  input: "block3/batch_normalization/gamma"
  input: "block3/batch_normalization/gamma/AdamOptimizer"
  input: "block3/batch_normalization/gamma/AdamOptimizer_1"
  input: "block3/batch_normalization/moving_mean"
  input: "block3/batch_normalization/moving_variance"
  input: "block3/conv3/kernel"
  input: "block3/conv3/kernel/AdamOptimizer"
  input: "block3/conv3/kernel/AdamOptimizer_1"
  input: "block4/batch_normalization/beta"
  input: "block4/batch_normalization/beta/AdamOptimizer"
  input: "block4/batch_normalization/beta/AdamOptimizer_1"
  input: "block4/batch_normalization/gamma"
  input: "block4/batch_normalization/gamma/AdamOptimizer"
  input: "block4/batch_normalization/gamma/AdamOptimizer_1"
  input: "block4/batch_normalization/moving_mean"
  input: "block4/batch_normalization/moving_variance"
  input: "block4/conv4/kernel"
  input: "block4/conv4/kernel/AdamOptimizer"
  input: "block4/conv4/kernel/AdamOptimizer_1"
  input: "block5/batch_normalization/beta"
  input: "block5/batch_normalization/beta/AdamOptimizer"
  input: "block5/batch_normalization/beta/AdamOptimizer_1"
  input: "block5/batch_normalization/gamma"
  input: "block5/batch_normalization/gamma/AdamOptimizer"
  input: "block5/batch_normalization/gamma/AdamOptimizer_1"
  input: "block5/batch_normalization/moving_mean"
  input: "block5/batch_normalization/moving_variance"
  input: "block5/conv5/kernel"
  input: "block5/conv5/kernel/AdamOptimizer"
  input: "block5/conv5/kernel/AdamOptimizer_1"
  input: "block6/batch_normalization/beta"
  input: "block6/batch_normalization/beta/AdamOptimizer"
  input: "block6/batch_normalization/beta/AdamOptimizer_1"
  input: "block6/batch_normalization/gamma"
  input: "block6/batch_normalization/gamma/AdamOptimizer"
  input: "block6/batch_normalization/gamma/AdamOptimizer_1"
  input: "block6/batch_normalization/moving_mean"
  input: "block6/batch_normalization/moving_variance"
  input: "block6/conv6/kernel"
  input: "block6/conv6/kernel/AdamOptimizer"
  input: "block6/conv6/kernel/AdamOptimizer_1"
  input: "block7/batch_normalization/beta"
  input: "block7/batch_normalization/beta/AdamOptimizer"
  input: "block7/batch_normalization/beta/AdamOptimizer_1"
  input: "block7/batch_normalization/gamma"
  input: "block7/batch_normalization/gamma/AdamOptimizer"
  input: "block7/batch_normalization/gamma/AdamOptimizer_1"
  input: "block7/batch_normalization/moving_mean"
  input: "block7/batch_normalization/moving_variance"
  input: "block7/conv7/kernel"
  input: "block7/conv7/kernel/AdamOptimizer"
  input: "block7/conv7/kernel/AdamOptimizer_1"
  input: "block8/batch_normalization/beta"
  input: "block8/batch_normalization/beta/AdamOptimizer"
  input: "block8/batch_normalization/beta/AdamOptimizer_1"
  input: "block8/batch_normalization/gamma"
  input: "block8/batch_normalization/gamma/AdamOptimizer"
  input: "block8/batch_normalization/gamma/AdamOptimizer_1"
  input: "block8/batch_normalization/moving_mean"
  input: "block8/batch_normalization/moving_variance"
  input: "block8/conv8/kernel"
  input: "block8/conv8/kernel/AdamOptimizer"
  input: "block8/conv8/kernel/AdamOptimizer_1"
  input: "block9/batch_normalization/beta"
  input: "block9/batch_normalization/beta/AdamOptimizer"
  input: "block9/batch_normalization/beta/AdamOptimizer_1"
  input: "block9/batch_normalization/gamma"
  input: "block9/batch_normalization/gamma/AdamOptimizer"
  input: "block9/batch_normalization/gamma/AdamOptimizer_1"
  input: "block9/batch_normalization/moving_mean"
  input: "block9/batch_normalization/moving_variance"
  input: "block9/conv9/kernel"
  input: "block9/conv9/kernel/AdamOptimizer"
  input: "block9/conv9/kernel/AdamOptimizer_1"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "beta1_power"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1/conv2d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_1/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "beta2_power"
      }
    }
  }
}
node {
  name: "save/RestoreV2_1/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_1"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_1/tensor_names"
  input: "save/RestoreV2_1/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "save/RestoreV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1/conv2d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block1/conv2d/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_2/tensor_names"
  input: "save/RestoreV2_2/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "block1/conv2d/bias"
  input: "save/RestoreV2_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1/conv2d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_3/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block1/conv2d/bias/AdamOptimizer"
      }
    }
  }
}
node {
  name: "save/RestoreV2_3/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_3"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_3/tensor_names"
  input: "save/RestoreV2_3/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "block1/conv2d/bias/AdamOptimizer"
  input: "save/RestoreV2_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1/conv2d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_4/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block1/conv2d/bias/AdamOptimizer_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_4/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_4"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_4/tensor_names"
  input: "save/RestoreV2_4/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "block1/conv2d/bias/AdamOptimizer_1"
  input: "save/RestoreV2_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1/conv2d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_5/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block1/conv2d/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_5/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_5"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_5/tensor_names"
  input: "save/RestoreV2_5/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "block1/conv2d/kernel"
  input: "save/RestoreV2_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1/conv2d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_6/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block1/conv2d/kernel/AdamOptimizer"
      }
    }
  }
}
node {
  name: "save/RestoreV2_6/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_6"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_6/tensor_names"
  input: "save/RestoreV2_6/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "block1/conv2d/kernel/AdamOptimizer"
  input: "save/RestoreV2_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1/conv2d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_7/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block1/conv2d/kernel/AdamOptimizer_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_7/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_7"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_7/tensor_names"
  input: "save/RestoreV2_7/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "block1/conv2d/kernel/AdamOptimizer_1"
  input: "save/RestoreV2_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1/conv2d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_8/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block10/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_8/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_8"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_8/tensor_names"
  input: "save/RestoreV2_8/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "block10/batch_normalization/beta"
  input: "save/RestoreV2_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_9/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block10/batch_normalization/beta/AdamOptimizer"
      }
    }
  }
}
node {
  name: "save/RestoreV2_9/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_9"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_9/tensor_names"
  input: "save/RestoreV2_9/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "block10/batch_normalization/beta/AdamOptimizer"
  input: "save/RestoreV2_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_10/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block10/batch_normalization/beta/AdamOptimizer_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_10/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_10"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_10/tensor_names"
  input: "save/RestoreV2_10/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "block10/batch_normalization/beta/AdamOptimizer_1"
  input: "save/RestoreV2_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_11/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block10/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_11/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_11"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_11/tensor_names"
  input: "save/RestoreV2_11/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "block10/batch_normalization/gamma"
  input: "save/RestoreV2_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_12/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block10/batch_normalization/gamma/AdamOptimizer"
      }
    }
  }
}
node {
  name: "save/RestoreV2_12/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_12"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_12/tensor_names"
  input: "save/RestoreV2_12/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "block10/batch_normalization/gamma/AdamOptimizer"
  input: "save/RestoreV2_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_13/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block10/batch_normalization/gamma/AdamOptimizer_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_13/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_13"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_13/tensor_names"
  input: "save/RestoreV2_13/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "block10/batch_normalization/gamma/AdamOptimizer_1"
  input: "save/RestoreV2_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_14/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block10/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_14/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_14"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_14/tensor_names"
  input: "save/RestoreV2_14/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "block10/batch_normalization/moving_mean"
  input: "save/RestoreV2_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_15/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block10/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_15/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_15"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_15/tensor_names"
  input: "save/RestoreV2_15/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "block10/batch_normalization/moving_variance"
  input: "save/RestoreV2_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_16/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block10/conv10/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_16/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_16"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_16/tensor_names"
  input: "save/RestoreV2_16/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "block10/conv10/kernel"
  input: "save/RestoreV2_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/conv10/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_17/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block10/conv10/kernel/AdamOptimizer"
      }
    }
  }
}
node {
  name: "save/RestoreV2_17/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_17"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_17/tensor_names"
  input: "save/RestoreV2_17/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "block10/conv10/kernel/AdamOptimizer"
  input: "save/RestoreV2_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/conv10/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_18/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block10/conv10/kernel/AdamOptimizer_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_18/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_18"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_18/tensor_names"
  input: "save/RestoreV2_18/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "block10/conv10/kernel/AdamOptimizer_1"
  input: "save/RestoreV2_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block10/conv10/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_19/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block11/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_19/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_19"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_19/tensor_names"
  input: "save/RestoreV2_19/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "block11/batch_normalization/beta"
  input: "save/RestoreV2_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_20/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block11/batch_normalization/beta/AdamOptimizer"
      }
    }
  }
}
node {
  name: "save/RestoreV2_20/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_20"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_20/tensor_names"
  input: "save/RestoreV2_20/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "block11/batch_normalization/beta/AdamOptimizer"
  input: "save/RestoreV2_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_21/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block11/batch_normalization/beta/AdamOptimizer_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_21/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_21"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_21/tensor_names"
  input: "save/RestoreV2_21/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "block11/batch_normalization/beta/AdamOptimizer_1"
  input: "save/RestoreV2_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_22/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block11/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_22/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_22"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_22/tensor_names"
  input: "save/RestoreV2_22/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "block11/batch_normalization/gamma"
  input: "save/RestoreV2_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_23/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block11/batch_normalization/gamma/AdamOptimizer"
      }
    }
  }
}
node {
  name: "save/RestoreV2_23/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_23"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_23/tensor_names"
  input: "save/RestoreV2_23/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "block11/batch_normalization/gamma/AdamOptimizer"
  input: "save/RestoreV2_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_24/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block11/batch_normalization/gamma/AdamOptimizer_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_24/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_24"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_24/tensor_names"
  input: "save/RestoreV2_24/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "block11/batch_normalization/gamma/AdamOptimizer_1"
  input: "save/RestoreV2_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_25/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block11/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_25/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_25"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_25/tensor_names"
  input: "save/RestoreV2_25/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "block11/batch_normalization/moving_mean"
  input: "save/RestoreV2_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_26/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block11/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_26/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_26"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_26/tensor_names"
  input: "save/RestoreV2_26/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "block11/batch_normalization/moving_variance"
  input: "save/RestoreV2_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_27/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block11/conv11/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_27/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_27"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_27/tensor_names"
  input: "save/RestoreV2_27/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "block11/conv11/kernel"
  input: "save/RestoreV2_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/conv11/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_28/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block11/conv11/kernel/AdamOptimizer"
      }
    }
  }
}
node {
  name: "save/RestoreV2_28/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_28"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_28/tensor_names"
  input: "save/RestoreV2_28/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "block11/conv11/kernel/AdamOptimizer"
  input: "save/RestoreV2_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/conv11/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_29/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block11/conv11/kernel/AdamOptimizer_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_29/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_29"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_29/tensor_names"
  input: "save/RestoreV2_29/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "block11/conv11/kernel/AdamOptimizer_1"
  input: "save/RestoreV2_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block11/conv11/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_30/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block12/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_30/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_30"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_30/tensor_names"
  input: "save/RestoreV2_30/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_30"
  op: "Assign"
  input: "block12/batch_normalization/beta"
  input: "save/RestoreV2_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_31/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block12/batch_normalization/beta/AdamOptimizer"
      }
    }
  }
}
node {
  name: "save/RestoreV2_31/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_31"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_31/tensor_names"
  input: "save/RestoreV2_31/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_31"
  op: "Assign"
  input: "block12/batch_normalization/beta/AdamOptimizer"
  input: "save/RestoreV2_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_32/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block12/batch_normalization/beta/AdamOptimizer_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_32/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_32"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_32/tensor_names"
  input: "save/RestoreV2_32/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_32"
  op: "Assign"
  input: "block12/batch_normalization/beta/AdamOptimizer_1"
  input: "save/RestoreV2_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_33/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block12/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_33/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_33"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_33/tensor_names"
  input: "save/RestoreV2_33/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_33"
  op: "Assign"
  input: "block12/batch_normalization/gamma"
  input: "save/RestoreV2_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_34/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block12/batch_normalization/gamma/AdamOptimizer"
      }
    }
  }
}
node {
  name: "save/RestoreV2_34/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_34"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_34/tensor_names"
  input: "save/RestoreV2_34/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_34"
  op: "Assign"
  input: "block12/batch_normalization/gamma/AdamOptimizer"
  input: "save/RestoreV2_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_35/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block12/batch_normalization/gamma/AdamOptimizer_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_35/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_35"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_35/tensor_names"
  input: "save/RestoreV2_35/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_35"
  op: "Assign"
  input: "block12/batch_normalization/gamma/AdamOptimizer_1"
  input: "save/RestoreV2_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_36/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block12/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_36/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_36"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_36/tensor_names"
  input: "save/RestoreV2_36/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_36"
  op: "Assign"
  input: "block12/batch_normalization/moving_mean"
  input: "save/RestoreV2_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_37/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block12/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_37/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_37"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_37/tensor_names"
  input: "save/RestoreV2_37/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_37"
  op: "Assign"
  input: "block12/batch_normalization/moving_variance"
  input: "save/RestoreV2_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_38/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block12/conv12/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_38/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_38"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_38/tensor_names"
  input: "save/RestoreV2_38/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_38"
  op: "Assign"
  input: "block12/conv12/kernel"
  input: "save/RestoreV2_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/conv12/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_39/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block12/conv12/kernel/AdamOptimizer"
      }
    }
  }
}
node {
  name: "save/RestoreV2_39/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_39"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_39/tensor_names"
  input: "save/RestoreV2_39/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_39"
  op: "Assign"
  input: "block12/conv12/kernel/AdamOptimizer"
  input: "save/RestoreV2_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/conv12/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_40/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block12/conv12/kernel/AdamOptimizer_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_40/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_40"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_40/tensor_names"
  input: "save/RestoreV2_40/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_40"
  op: "Assign"
  input: "block12/conv12/kernel/AdamOptimizer_1"
  input: "save/RestoreV2_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block12/conv12/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_41/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block13/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_41/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_41"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_41/tensor_names"
  input: "save/RestoreV2_41/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_41"
  op: "Assign"
  input: "block13/batch_normalization/beta"
  input: "save/RestoreV2_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_42/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block13/batch_normalization/beta/AdamOptimizer"
      }
    }
  }
}
node {
  name: "save/RestoreV2_42/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_42"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_42/tensor_names"
  input: "save/RestoreV2_42/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_42"
  op: "Assign"
  input: "block13/batch_normalization/beta/AdamOptimizer"
  input: "save/RestoreV2_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_43/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block13/batch_normalization/beta/AdamOptimizer_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_43/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_43"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_43/tensor_names"
  input: "save/RestoreV2_43/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_43"
  op: "Assign"
  input: "block13/batch_normalization/beta/AdamOptimizer_1"
  input: "save/RestoreV2_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_44/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block13/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_44/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_44"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_44/tensor_names"
  input: "save/RestoreV2_44/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_44"
  op: "Assign"
  input: "block13/batch_normalization/gamma"
  input: "save/RestoreV2_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_45/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block13/batch_normalization/gamma/AdamOptimizer"
      }
    }
  }
}
node {
  name: "save/RestoreV2_45/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_45"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_45/tensor_names"
  input: "save/RestoreV2_45/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_45"
  op: "Assign"
  input: "block13/batch_normalization/gamma/AdamOptimizer"
  input: "save/RestoreV2_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_46/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block13/batch_normalization/gamma/AdamOptimizer_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_46/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_46"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_46/tensor_names"
  input: "save/RestoreV2_46/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_46"
  op: "Assign"
  input: "block13/batch_normalization/gamma/AdamOptimizer_1"
  input: "save/RestoreV2_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_47/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block13/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_47/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_47"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_47/tensor_names"
  input: "save/RestoreV2_47/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_47"
  op: "Assign"
  input: "block13/batch_normalization/moving_mean"
  input: "save/RestoreV2_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_48/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block13/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_48/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_48"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_48/tensor_names"
  input: "save/RestoreV2_48/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_48"
  op: "Assign"
  input: "block13/batch_normalization/moving_variance"
  input: "save/RestoreV2_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_49/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block13/conv13/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_49/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_49"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_49/tensor_names"
  input: "save/RestoreV2_49/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_49"
  op: "Assign"
  input: "block13/conv13/kernel"
  input: "save/RestoreV2_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/conv13/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_50/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block13/conv13/kernel/AdamOptimizer"
      }
    }
  }
}
node {
  name: "save/RestoreV2_50/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_50"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_50/tensor_names"
  input: "save/RestoreV2_50/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_50"
  op: "Assign"
  input: "block13/conv13/kernel/AdamOptimizer"
  input: "save/RestoreV2_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/conv13/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_51/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block13/conv13/kernel/AdamOptimizer_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_51/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_51"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_51/tensor_names"
  input: "save/RestoreV2_51/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_51"
  op: "Assign"
  input: "block13/conv13/kernel/AdamOptimizer_1"
  input: "save/RestoreV2_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block13/conv13/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_52/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block14/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_52/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_52"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_52/tensor_names"
  input: "save/RestoreV2_52/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_52"
  op: "Assign"
  input: "block14/batch_normalization/beta"
  input: "save/RestoreV2_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_53/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block14/batch_normalization/beta/AdamOptimizer"
      }
    }
  }
}
node {
  name: "save/RestoreV2_53/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_53"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_53/tensor_names"
  input: "save/RestoreV2_53/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_53"
  op: "Assign"
  input: "block14/batch_normalization/beta/AdamOptimizer"
  input: "save/RestoreV2_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_54/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block14/batch_normalization/beta/AdamOptimizer_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_54/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_54"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_54/tensor_names"
  input: "save/RestoreV2_54/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_54"
  op: "Assign"
  input: "block14/batch_normalization/beta/AdamOptimizer_1"
  input: "save/RestoreV2_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_55/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block14/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_55/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_55"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_55/tensor_names"
  input: "save/RestoreV2_55/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_55"
  op: "Assign"
  input: "block14/batch_normalization/gamma"
  input: "save/RestoreV2_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_56/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block14/batch_normalization/gamma/AdamOptimizer"
      }
    }
  }
}
node {
  name: "save/RestoreV2_56/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_56"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_56/tensor_names"
  input: "save/RestoreV2_56/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_56"
  op: "Assign"
  input: "block14/batch_normalization/gamma/AdamOptimizer"
  input: "save/RestoreV2_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_57/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block14/batch_normalization/gamma/AdamOptimizer_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_57/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_57"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_57/tensor_names"
  input: "save/RestoreV2_57/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_57"
  op: "Assign"
  input: "block14/batch_normalization/gamma/AdamOptimizer_1"
  input: "save/RestoreV2_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_58/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block14/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_58/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_58"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_58/tensor_names"
  input: "save/RestoreV2_58/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_58"
  op: "Assign"
  input: "block14/batch_normalization/moving_mean"
  input: "save/RestoreV2_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_59/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block14/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_59/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_59"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_59/tensor_names"
  input: "save/RestoreV2_59/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_59"
  op: "Assign"
  input: "block14/batch_normalization/moving_variance"
  input: "save/RestoreV2_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_60/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block14/conv14/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_60/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_60"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_60/tensor_names"
  input: "save/RestoreV2_60/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_60"
  op: "Assign"
  input: "block14/conv14/kernel"
  input: "save/RestoreV2_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/conv14/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_61/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block14/conv14/kernel/AdamOptimizer"
      }
    }
  }
}
node {
  name: "save/RestoreV2_61/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_61"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_61/tensor_names"
  input: "save/RestoreV2_61/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_61"
  op: "Assign"
  input: "block14/conv14/kernel/AdamOptimizer"
  input: "save/RestoreV2_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/conv14/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_62/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block14/conv14/kernel/AdamOptimizer_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_62/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_62"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_62/tensor_names"
  input: "save/RestoreV2_62/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_62"
  op: "Assign"
  input: "block14/conv14/kernel/AdamOptimizer_1"
  input: "save/RestoreV2_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block14/conv14/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_63/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block15/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_63/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_63"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_63/tensor_names"
  input: "save/RestoreV2_63/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_63"
  op: "Assign"
  input: "block15/batch_normalization/beta"
  input: "save/RestoreV2_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_64/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block15/batch_normalization/beta/AdamOptimizer"
      }
    }
  }
}
node {
  name: "save/RestoreV2_64/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_64"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_64/tensor_names"
  input: "save/RestoreV2_64/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_64"
  op: "Assign"
  input: "block15/batch_normalization/beta/AdamOptimizer"
  input: "save/RestoreV2_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_65/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block15/batch_normalization/beta/AdamOptimizer_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_65/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_65"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_65/tensor_names"
  input: "save/RestoreV2_65/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_65"
  op: "Assign"
  input: "block15/batch_normalization/beta/AdamOptimizer_1"
  input: "save/RestoreV2_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_66/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block15/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_66/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_66"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_66/tensor_names"
  input: "save/RestoreV2_66/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_66"
  op: "Assign"
  input: "block15/batch_normalization/gamma"
  input: "save/RestoreV2_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_67/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block15/batch_normalization/gamma/AdamOptimizer"
      }
    }
  }
}
node {
  name: "save/RestoreV2_67/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_67"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_67/tensor_names"
  input: "save/RestoreV2_67/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_67"
  op: "Assign"
  input: "block15/batch_normalization/gamma/AdamOptimizer"
  input: "save/RestoreV2_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_68/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block15/batch_normalization/gamma/AdamOptimizer_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_68/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_68"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_68/tensor_names"
  input: "save/RestoreV2_68/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_68"
  op: "Assign"
  input: "block15/batch_normalization/gamma/AdamOptimizer_1"
  input: "save/RestoreV2_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_69/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block15/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_69/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_69"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_69/tensor_names"
  input: "save/RestoreV2_69/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_69"
  op: "Assign"
  input: "block15/batch_normalization/moving_mean"
  input: "save/RestoreV2_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_70/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block15/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_70/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_70"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_70/tensor_names"
  input: "save/RestoreV2_70/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_70"
  op: "Assign"
  input: "block15/batch_normalization/moving_variance"
  input: "save/RestoreV2_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_71/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block15/conv15/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_71/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_71"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_71/tensor_names"
  input: "save/RestoreV2_71/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_71"
  op: "Assign"
  input: "block15/conv15/kernel"
  input: "save/RestoreV2_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/conv15/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_72/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block15/conv15/kernel/AdamOptimizer"
      }
    }
  }
}
node {
  name: "save/RestoreV2_72/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_72"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_72/tensor_names"
  input: "save/RestoreV2_72/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_72"
  op: "Assign"
  input: "block15/conv15/kernel/AdamOptimizer"
  input: "save/RestoreV2_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/conv15/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_73/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block15/conv15/kernel/AdamOptimizer_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_73/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_73"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_73/tensor_names"
  input: "save/RestoreV2_73/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_73"
  op: "Assign"
  input: "block15/conv15/kernel/AdamOptimizer_1"
  input: "save/RestoreV2_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block15/conv15/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_74/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block16/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_74/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_74"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_74/tensor_names"
  input: "save/RestoreV2_74/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_74"
  op: "Assign"
  input: "block16/batch_normalization/beta"
  input: "save/RestoreV2_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_75/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block16/batch_normalization/beta/AdamOptimizer"
      }
    }
  }
}
node {
  name: "save/RestoreV2_75/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_75"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_75/tensor_names"
  input: "save/RestoreV2_75/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_75"
  op: "Assign"
  input: "block16/batch_normalization/beta/AdamOptimizer"
  input: "save/RestoreV2_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_76/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block16/batch_normalization/beta/AdamOptimizer_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_76/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_76"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_76/tensor_names"
  input: "save/RestoreV2_76/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_76"
  op: "Assign"
  input: "block16/batch_normalization/beta/AdamOptimizer_1"
  input: "save/RestoreV2_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_77/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block16/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_77/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_77"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_77/tensor_names"
  input: "save/RestoreV2_77/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_77"
  op: "Assign"
  input: "block16/batch_normalization/gamma"
  input: "save/RestoreV2_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_78/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block16/batch_normalization/gamma/AdamOptimizer"
      }
    }
  }
}
node {
  name: "save/RestoreV2_78/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_78"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_78/tensor_names"
  input: "save/RestoreV2_78/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_78"
  op: "Assign"
  input: "block16/batch_normalization/gamma/AdamOptimizer"
  input: "save/RestoreV2_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_79/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block16/batch_normalization/gamma/AdamOptimizer_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_79/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_79"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_79/tensor_names"
  input: "save/RestoreV2_79/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_79"
  op: "Assign"
  input: "block16/batch_normalization/gamma/AdamOptimizer_1"
  input: "save/RestoreV2_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_80/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block16/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_80/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_80"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_80/tensor_names"
  input: "save/RestoreV2_80/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_80"
  op: "Assign"
  input: "block16/batch_normalization/moving_mean"
  input: "save/RestoreV2_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_81/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block16/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_81/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_81"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_81/tensor_names"
  input: "save/RestoreV2_81/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_81"
  op: "Assign"
  input: "block16/batch_normalization/moving_variance"
  input: "save/RestoreV2_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_82/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block16/conv16/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_82/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_82"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_82/tensor_names"
  input: "save/RestoreV2_82/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_82"
  op: "Assign"
  input: "block16/conv16/kernel"
  input: "save/RestoreV2_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/conv16/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_83/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block16/conv16/kernel/AdamOptimizer"
      }
    }
  }
}
node {
  name: "save/RestoreV2_83/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_83"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_83/tensor_names"
  input: "save/RestoreV2_83/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_83"
  op: "Assign"
  input: "block16/conv16/kernel/AdamOptimizer"
  input: "save/RestoreV2_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/conv16/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_84/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block16/conv16/kernel/AdamOptimizer_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_84/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_84"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_84/tensor_names"
  input: "save/RestoreV2_84/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_84"
  op: "Assign"
  input: "block16/conv16/kernel/AdamOptimizer_1"
  input: "save/RestoreV2_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block16/conv16/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_85/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block17/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_85/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_85"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_85/tensor_names"
  input: "save/RestoreV2_85/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_85"
  op: "Assign"
  input: "block17/batch_normalization/beta"
  input: "save/RestoreV2_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_86/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block17/batch_normalization/beta/AdamOptimizer"
      }
    }
  }
}
node {
  name: "save/RestoreV2_86/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_86"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_86/tensor_names"
  input: "save/RestoreV2_86/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_86"
  op: "Assign"
  input: "block17/batch_normalization/beta/AdamOptimizer"
  input: "save/RestoreV2_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_87/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block17/batch_normalization/beta/AdamOptimizer_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_87/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_87"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_87/tensor_names"
  input: "save/RestoreV2_87/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_87"
  op: "Assign"
  input: "block17/batch_normalization/beta/AdamOptimizer_1"
  input: "save/RestoreV2_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_88/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block17/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_88/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_88"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_88/tensor_names"
  input: "save/RestoreV2_88/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_88"
  op: "Assign"
  input: "block17/batch_normalization/gamma"
  input: "save/RestoreV2_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_89/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block17/batch_normalization/gamma/AdamOptimizer"
      }
    }
  }
}
node {
  name: "save/RestoreV2_89/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_89"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_89/tensor_names"
  input: "save/RestoreV2_89/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_89"
  op: "Assign"
  input: "block17/batch_normalization/gamma/AdamOptimizer"
  input: "save/RestoreV2_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_90/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block17/batch_normalization/gamma/AdamOptimizer_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_90/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_90"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_90/tensor_names"
  input: "save/RestoreV2_90/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_90"
  op: "Assign"
  input: "block17/batch_normalization/gamma/AdamOptimizer_1"
  input: "save/RestoreV2_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_91/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block17/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_91/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_91"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_91/tensor_names"
  input: "save/RestoreV2_91/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_91"
  op: "Assign"
  input: "block17/batch_normalization/moving_mean"
  input: "save/RestoreV2_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_92/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block17/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_92/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_92"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_92/tensor_names"
  input: "save/RestoreV2_92/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_92"
  op: "Assign"
  input: "block17/batch_normalization/moving_variance"
  input: "save/RestoreV2_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_93/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block17/conv17/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_93/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_93"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_93/tensor_names"
  input: "save/RestoreV2_93/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_93"
  op: "Assign"
  input: "block17/conv17/kernel"
  input: "save/RestoreV2_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/conv17/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_94/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block17/conv17/kernel/AdamOptimizer"
      }
    }
  }
}
node {
  name: "save/RestoreV2_94/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_94"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_94/tensor_names"
  input: "save/RestoreV2_94/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_94"
  op: "Assign"
  input: "block17/conv17/kernel/AdamOptimizer"
  input: "save/RestoreV2_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/conv17/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_95/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block17/conv17/kernel/AdamOptimizer_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_95/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_95"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_95/tensor_names"
  input: "save/RestoreV2_95/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_95"
  op: "Assign"
  input: "block17/conv17/kernel/AdamOptimizer_1"
  input: "save/RestoreV2_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/conv17/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_96/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block17/conv2d/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_96/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_96"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_96/tensor_names"
  input: "save/RestoreV2_96/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_96"
  op: "Assign"
  input: "block17/conv2d/kernel"
  input: "save/RestoreV2_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/conv2d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_97/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block17/conv2d/kernel/AdamOptimizer"
      }
    }
  }
}
node {
  name: "save/RestoreV2_97/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_97"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_97/tensor_names"
  input: "save/RestoreV2_97/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_97"
  op: "Assign"
  input: "block17/conv2d/kernel/AdamOptimizer"
  input: "save/RestoreV2_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/conv2d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_98/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block17/conv2d/kernel/AdamOptimizer_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_98/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_98"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_98/tensor_names"
  input: "save/RestoreV2_98/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_98"
  op: "Assign"
  input: "block17/conv2d/kernel/AdamOptimizer_1"
  input: "save/RestoreV2_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block17/conv2d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_99/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block18/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_99/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_99"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_99/tensor_names"
  input: "save/RestoreV2_99/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_99"
  op: "Assign"
  input: "block18/batch_normalization/beta"
  input: "save/RestoreV2_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_100/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block18/batch_normalization/beta/AdamOptimizer"
      }
    }
  }
}
node {
  name: "save/RestoreV2_100/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_100"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_100/tensor_names"
  input: "save/RestoreV2_100/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_100"
  op: "Assign"
  input: "block18/batch_normalization/beta/AdamOptimizer"
  input: "save/RestoreV2_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_101/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block18/batch_normalization/beta/AdamOptimizer_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_101/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_101"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_101/tensor_names"
  input: "save/RestoreV2_101/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_101"
  op: "Assign"
  input: "block18/batch_normalization/beta/AdamOptimizer_1"
  input: "save/RestoreV2_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_102/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block18/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_102/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_102"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_102/tensor_names"
  input: "save/RestoreV2_102/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_102"
  op: "Assign"
  input: "block18/batch_normalization/gamma"
  input: "save/RestoreV2_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_103/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block18/batch_normalization/gamma/AdamOptimizer"
      }
    }
  }
}
node {
  name: "save/RestoreV2_103/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_103"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_103/tensor_names"
  input: "save/RestoreV2_103/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_103"
  op: "Assign"
  input: "block18/batch_normalization/gamma/AdamOptimizer"
  input: "save/RestoreV2_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_104/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block18/batch_normalization/gamma/AdamOptimizer_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_104/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_104"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_104/tensor_names"
  input: "save/RestoreV2_104/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_104"
  op: "Assign"
  input: "block18/batch_normalization/gamma/AdamOptimizer_1"
  input: "save/RestoreV2_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_105/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block18/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_105/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_105"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_105/tensor_names"
  input: "save/RestoreV2_105/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_105"
  op: "Assign"
  input: "block18/batch_normalization/moving_mean"
  input: "save/RestoreV2_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_106/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block18/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_106/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_106"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_106/tensor_names"
  input: "save/RestoreV2_106/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_106"
  op: "Assign"
  input: "block18/batch_normalization/moving_variance"
  input: "save/RestoreV2_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_107/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block18/conv18/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_107/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_107"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_107/tensor_names"
  input: "save/RestoreV2_107/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_107"
  op: "Assign"
  input: "block18/conv18/kernel"
  input: "save/RestoreV2_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/conv18/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_108/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block18/conv18/kernel/AdamOptimizer"
      }
    }
  }
}
node {
  name: "save/RestoreV2_108/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_108"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_108/tensor_names"
  input: "save/RestoreV2_108/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_108"
  op: "Assign"
  input: "block18/conv18/kernel/AdamOptimizer"
  input: "save/RestoreV2_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/conv18/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_109/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block18/conv18/kernel/AdamOptimizer_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_109/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_109"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_109/tensor_names"
  input: "save/RestoreV2_109/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_109"
  op: "Assign"
  input: "block18/conv18/kernel/AdamOptimizer_1"
  input: "save/RestoreV2_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block18/conv18/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_110/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block19/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_110/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_110"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_110/tensor_names"
  input: "save/RestoreV2_110/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_110"
  op: "Assign"
  input: "block19/batch_normalization/beta"
  input: "save/RestoreV2_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_111/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block19/batch_normalization/beta/AdamOptimizer"
      }
    }
  }
}
node {
  name: "save/RestoreV2_111/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_111"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_111/tensor_names"
  input: "save/RestoreV2_111/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_111"
  op: "Assign"
  input: "block19/batch_normalization/beta/AdamOptimizer"
  input: "save/RestoreV2_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_112/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block19/batch_normalization/beta/AdamOptimizer_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_112/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_112"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_112/tensor_names"
  input: "save/RestoreV2_112/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_112"
  op: "Assign"
  input: "block19/batch_normalization/beta/AdamOptimizer_1"
  input: "save/RestoreV2_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_113/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block19/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_113/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_113"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_113/tensor_names"
  input: "save/RestoreV2_113/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_113"
  op: "Assign"
  input: "block19/batch_normalization/gamma"
  input: "save/RestoreV2_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_114/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block19/batch_normalization/gamma/AdamOptimizer"
      }
    }
  }
}
node {
  name: "save/RestoreV2_114/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_114"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_114/tensor_names"
  input: "save/RestoreV2_114/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_114"
  op: "Assign"
  input: "block19/batch_normalization/gamma/AdamOptimizer"
  input: "save/RestoreV2_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_115/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block19/batch_normalization/gamma/AdamOptimizer_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_115/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_115"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_115/tensor_names"
  input: "save/RestoreV2_115/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_115"
  op: "Assign"
  input: "block19/batch_normalization/gamma/AdamOptimizer_1"
  input: "save/RestoreV2_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_116/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block19/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_116/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_116"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_116/tensor_names"
  input: "save/RestoreV2_116/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_116"
  op: "Assign"
  input: "block19/batch_normalization/moving_mean"
  input: "save/RestoreV2_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_117/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block19/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_117/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_117"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_117/tensor_names"
  input: "save/RestoreV2_117/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_117"
  op: "Assign"
  input: "block19/batch_normalization/moving_variance"
  input: "save/RestoreV2_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_118/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block19/conv19/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_118/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_118"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_118/tensor_names"
  input: "save/RestoreV2_118/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_118"
  op: "Assign"
  input: "block19/conv19/kernel"
  input: "save/RestoreV2_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/conv19/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_119/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block19/conv19/kernel/AdamOptimizer"
      }
    }
  }
}
node {
  name: "save/RestoreV2_119/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_119"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_119/tensor_names"
  input: "save/RestoreV2_119/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_119"
  op: "Assign"
  input: "block19/conv19/kernel/AdamOptimizer"
  input: "save/RestoreV2_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/conv19/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_120/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block19/conv19/kernel/AdamOptimizer_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_120/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_120"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_120/tensor_names"
  input: "save/RestoreV2_120/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_120"
  op: "Assign"
  input: "block19/conv19/kernel/AdamOptimizer_1"
  input: "save/RestoreV2_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block19/conv19/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_121/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block2/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_121/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_121"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_121/tensor_names"
  input: "save/RestoreV2_121/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_121"
  op: "Assign"
  input: "block2/batch_normalization/beta"
  input: "save/RestoreV2_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_122/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block2/batch_normalization/beta/AdamOptimizer"
      }
    }
  }
}
node {
  name: "save/RestoreV2_122/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_122"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_122/tensor_names"
  input: "save/RestoreV2_122/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_122"
  op: "Assign"
  input: "block2/batch_normalization/beta/AdamOptimizer"
  input: "save/RestoreV2_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_123/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block2/batch_normalization/beta/AdamOptimizer_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_123/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_123"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_123/tensor_names"
  input: "save/RestoreV2_123/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_123"
  op: "Assign"
  input: "block2/batch_normalization/beta/AdamOptimizer_1"
  input: "save/RestoreV2_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_124/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block2/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_124/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_124"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_124/tensor_names"
  input: "save/RestoreV2_124/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_124"
  op: "Assign"
  input: "block2/batch_normalization/gamma"
  input: "save/RestoreV2_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_125/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block2/batch_normalization/gamma/AdamOptimizer"
      }
    }
  }
}
node {
  name: "save/RestoreV2_125/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_125"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_125/tensor_names"
  input: "save/RestoreV2_125/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_125"
  op: "Assign"
  input: "block2/batch_normalization/gamma/AdamOptimizer"
  input: "save/RestoreV2_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_126/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block2/batch_normalization/gamma/AdamOptimizer_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_126/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_126"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_126/tensor_names"
  input: "save/RestoreV2_126/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_126"
  op: "Assign"
  input: "block2/batch_normalization/gamma/AdamOptimizer_1"
  input: "save/RestoreV2_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_127/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block2/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_127/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_127"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_127/tensor_names"
  input: "save/RestoreV2_127/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_127"
  op: "Assign"
  input: "block2/batch_normalization/moving_mean"
  input: "save/RestoreV2_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_128/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block2/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_128/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_128"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_128/tensor_names"
  input: "save/RestoreV2_128/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_128"
  op: "Assign"
  input: "block2/batch_normalization/moving_variance"
  input: "save/RestoreV2_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_129/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block2/conv2/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_129/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_129"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_129/tensor_names"
  input: "save/RestoreV2_129/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_129"
  op: "Assign"
  input: "block2/conv2/kernel"
  input: "save/RestoreV2_129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_130/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block2/conv2/kernel/AdamOptimizer"
      }
    }
  }
}
node {
  name: "save/RestoreV2_130/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_130"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_130/tensor_names"
  input: "save/RestoreV2_130/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_130"
  op: "Assign"
  input: "block2/conv2/kernel/AdamOptimizer"
  input: "save/RestoreV2_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_131/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block2/conv2/kernel/AdamOptimizer_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_131/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_131"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_131/tensor_names"
  input: "save/RestoreV2_131/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_131"
  op: "Assign"
  input: "block2/conv2/kernel/AdamOptimizer_1"
  input: "save/RestoreV2_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2/conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_132/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block3/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_132/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_132"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_132/tensor_names"
  input: "save/RestoreV2_132/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_132"
  op: "Assign"
  input: "block3/batch_normalization/beta"
  input: "save/RestoreV2_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_133/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block3/batch_normalization/beta/AdamOptimizer"
      }
    }
  }
}
node {
  name: "save/RestoreV2_133/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_133"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_133/tensor_names"
  input: "save/RestoreV2_133/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_133"
  op: "Assign"
  input: "block3/batch_normalization/beta/AdamOptimizer"
  input: "save/RestoreV2_133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_134/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block3/batch_normalization/beta/AdamOptimizer_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_134/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_134"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_134/tensor_names"
  input: "save/RestoreV2_134/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_134"
  op: "Assign"
  input: "block3/batch_normalization/beta/AdamOptimizer_1"
  input: "save/RestoreV2_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_135/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block3/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_135/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_135"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_135/tensor_names"
  input: "save/RestoreV2_135/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_135"
  op: "Assign"
  input: "block3/batch_normalization/gamma"
  input: "save/RestoreV2_135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_136/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block3/batch_normalization/gamma/AdamOptimizer"
      }
    }
  }
}
node {
  name: "save/RestoreV2_136/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_136"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_136/tensor_names"
  input: "save/RestoreV2_136/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_136"
  op: "Assign"
  input: "block3/batch_normalization/gamma/AdamOptimizer"
  input: "save/RestoreV2_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_137/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block3/batch_normalization/gamma/AdamOptimizer_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_137/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_137"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_137/tensor_names"
  input: "save/RestoreV2_137/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_137"
  op: "Assign"
  input: "block3/batch_normalization/gamma/AdamOptimizer_1"
  input: "save/RestoreV2_137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_138/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block3/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_138/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_138"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_138/tensor_names"
  input: "save/RestoreV2_138/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_138"
  op: "Assign"
  input: "block3/batch_normalization/moving_mean"
  input: "save/RestoreV2_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_139/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block3/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_139/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_139"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_139/tensor_names"
  input: "save/RestoreV2_139/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_139"
  op: "Assign"
  input: "block3/batch_normalization/moving_variance"
  input: "save/RestoreV2_139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_140/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block3/conv3/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_140/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_140"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_140/tensor_names"
  input: "save/RestoreV2_140/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_140"
  op: "Assign"
  input: "block3/conv3/kernel"
  input: "save/RestoreV2_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/conv3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_141/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block3/conv3/kernel/AdamOptimizer"
      }
    }
  }
}
node {
  name: "save/RestoreV2_141/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_141"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_141/tensor_names"
  input: "save/RestoreV2_141/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_141"
  op: "Assign"
  input: "block3/conv3/kernel/AdamOptimizer"
  input: "save/RestoreV2_141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/conv3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_142/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block3/conv3/kernel/AdamOptimizer_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_142/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_142"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_142/tensor_names"
  input: "save/RestoreV2_142/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_142"
  op: "Assign"
  input: "block3/conv3/kernel/AdamOptimizer_1"
  input: "save/RestoreV2_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3/conv3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_143/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block4/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_143/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_143"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_143/tensor_names"
  input: "save/RestoreV2_143/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_143"
  op: "Assign"
  input: "block4/batch_normalization/beta"
  input: "save/RestoreV2_143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_144/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block4/batch_normalization/beta/AdamOptimizer"
      }
    }
  }
}
node {
  name: "save/RestoreV2_144/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_144"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_144/tensor_names"
  input: "save/RestoreV2_144/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_144"
  op: "Assign"
  input: "block4/batch_normalization/beta/AdamOptimizer"
  input: "save/RestoreV2_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_145/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block4/batch_normalization/beta/AdamOptimizer_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_145/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_145"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_145/tensor_names"
  input: "save/RestoreV2_145/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_145"
  op: "Assign"
  input: "block4/batch_normalization/beta/AdamOptimizer_1"
  input: "save/RestoreV2_145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_146/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block4/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_146/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_146"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_146/tensor_names"
  input: "save/RestoreV2_146/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_146"
  op: "Assign"
  input: "block4/batch_normalization/gamma"
  input: "save/RestoreV2_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_147/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block4/batch_normalization/gamma/AdamOptimizer"
      }
    }
  }
}
node {
  name: "save/RestoreV2_147/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_147"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_147/tensor_names"
  input: "save/RestoreV2_147/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_147"
  op: "Assign"
  input: "block4/batch_normalization/gamma/AdamOptimizer"
  input: "save/RestoreV2_147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_148/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block4/batch_normalization/gamma/AdamOptimizer_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_148/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_148"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_148/tensor_names"
  input: "save/RestoreV2_148/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_148"
  op: "Assign"
  input: "block4/batch_normalization/gamma/AdamOptimizer_1"
  input: "save/RestoreV2_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_149/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block4/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_149/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_149"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_149/tensor_names"
  input: "save/RestoreV2_149/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_149"
  op: "Assign"
  input: "block4/batch_normalization/moving_mean"
  input: "save/RestoreV2_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_150/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block4/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_150/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_150"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_150/tensor_names"
  input: "save/RestoreV2_150/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_150"
  op: "Assign"
  input: "block4/batch_normalization/moving_variance"
  input: "save/RestoreV2_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_151/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block4/conv4/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_151/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_151"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_151/tensor_names"
  input: "save/RestoreV2_151/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_151"
  op: "Assign"
  input: "block4/conv4/kernel"
  input: "save/RestoreV2_151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/conv4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_152/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block4/conv4/kernel/AdamOptimizer"
      }
    }
  }
}
node {
  name: "save/RestoreV2_152/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_152"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_152/tensor_names"
  input: "save/RestoreV2_152/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_152"
  op: "Assign"
  input: "block4/conv4/kernel/AdamOptimizer"
  input: "save/RestoreV2_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/conv4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_153/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block4/conv4/kernel/AdamOptimizer_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_153/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_153"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_153/tensor_names"
  input: "save/RestoreV2_153/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_153"
  op: "Assign"
  input: "block4/conv4/kernel/AdamOptimizer_1"
  input: "save/RestoreV2_153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4/conv4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_154/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block5/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_154/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_154"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_154/tensor_names"
  input: "save/RestoreV2_154/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_154"
  op: "Assign"
  input: "block5/batch_normalization/beta"
  input: "save/RestoreV2_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_155/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block5/batch_normalization/beta/AdamOptimizer"
      }
    }
  }
}
node {
  name: "save/RestoreV2_155/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_155"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_155/tensor_names"
  input: "save/RestoreV2_155/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_155"
  op: "Assign"
  input: "block5/batch_normalization/beta/AdamOptimizer"
  input: "save/RestoreV2_155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_156/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block5/batch_normalization/beta/AdamOptimizer_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_156/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_156"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_156/tensor_names"
  input: "save/RestoreV2_156/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_156"
  op: "Assign"
  input: "block5/batch_normalization/beta/AdamOptimizer_1"
  input: "save/RestoreV2_156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_157/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block5/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_157/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_157"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_157/tensor_names"
  input: "save/RestoreV2_157/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_157"
  op: "Assign"
  input: "block5/batch_normalization/gamma"
  input: "save/RestoreV2_157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_158/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block5/batch_normalization/gamma/AdamOptimizer"
      }
    }
  }
}
node {
  name: "save/RestoreV2_158/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_158"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_158/tensor_names"
  input: "save/RestoreV2_158/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_158"
  op: "Assign"
  input: "block5/batch_normalization/gamma/AdamOptimizer"
  input: "save/RestoreV2_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_159/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block5/batch_normalization/gamma/AdamOptimizer_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_159/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_159"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_159/tensor_names"
  input: "save/RestoreV2_159/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_159"
  op: "Assign"
  input: "block5/batch_normalization/gamma/AdamOptimizer_1"
  input: "save/RestoreV2_159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_160/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block5/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_160/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_160"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_160/tensor_names"
  input: "save/RestoreV2_160/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_160"
  op: "Assign"
  input: "block5/batch_normalization/moving_mean"
  input: "save/RestoreV2_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_161/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block5/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_161/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_161"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_161/tensor_names"
  input: "save/RestoreV2_161/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_161"
  op: "Assign"
  input: "block5/batch_normalization/moving_variance"
  input: "save/RestoreV2_161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_162/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block5/conv5/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_162/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_162"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_162/tensor_names"
  input: "save/RestoreV2_162/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_162"
  op: "Assign"
  input: "block5/conv5/kernel"
  input: "save/RestoreV2_162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/conv5/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_163/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block5/conv5/kernel/AdamOptimizer"
      }
    }
  }
}
node {
  name: "save/RestoreV2_163/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_163"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_163/tensor_names"
  input: "save/RestoreV2_163/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_163"
  op: "Assign"
  input: "block5/conv5/kernel/AdamOptimizer"
  input: "save/RestoreV2_163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/conv5/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_164/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block5/conv5/kernel/AdamOptimizer_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_164/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_164"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_164/tensor_names"
  input: "save/RestoreV2_164/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_164"
  op: "Assign"
  input: "block5/conv5/kernel/AdamOptimizer_1"
  input: "save/RestoreV2_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5/conv5/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_165/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block6/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_165/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_165"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_165/tensor_names"
  input: "save/RestoreV2_165/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_165"
  op: "Assign"
  input: "block6/batch_normalization/beta"
  input: "save/RestoreV2_165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_166/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block6/batch_normalization/beta/AdamOptimizer"
      }
    }
  }
}
node {
  name: "save/RestoreV2_166/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_166"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_166/tensor_names"
  input: "save/RestoreV2_166/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_166"
  op: "Assign"
  input: "block6/batch_normalization/beta/AdamOptimizer"
  input: "save/RestoreV2_166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_167/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block6/batch_normalization/beta/AdamOptimizer_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_167/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_167"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_167/tensor_names"
  input: "save/RestoreV2_167/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_167"
  op: "Assign"
  input: "block6/batch_normalization/beta/AdamOptimizer_1"
  input: "save/RestoreV2_167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_168/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block6/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_168/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_168"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_168/tensor_names"
  input: "save/RestoreV2_168/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_168"
  op: "Assign"
  input: "block6/batch_normalization/gamma"
  input: "save/RestoreV2_168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_169/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block6/batch_normalization/gamma/AdamOptimizer"
      }
    }
  }
}
node {
  name: "save/RestoreV2_169/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_169"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_169/tensor_names"
  input: "save/RestoreV2_169/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_169"
  op: "Assign"
  input: "block6/batch_normalization/gamma/AdamOptimizer"
  input: "save/RestoreV2_169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_170/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block6/batch_normalization/gamma/AdamOptimizer_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_170/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_170"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_170/tensor_names"
  input: "save/RestoreV2_170/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_170"
  op: "Assign"
  input: "block6/batch_normalization/gamma/AdamOptimizer_1"
  input: "save/RestoreV2_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_171/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block6/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_171/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_171"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_171/tensor_names"
  input: "save/RestoreV2_171/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_171"
  op: "Assign"
  input: "block6/batch_normalization/moving_mean"
  input: "save/RestoreV2_171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_172/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block6/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_172/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_172"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_172/tensor_names"
  input: "save/RestoreV2_172/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_172"
  op: "Assign"
  input: "block6/batch_normalization/moving_variance"
  input: "save/RestoreV2_172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_173/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block6/conv6/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_173/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_173"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_173/tensor_names"
  input: "save/RestoreV2_173/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_173"
  op: "Assign"
  input: "block6/conv6/kernel"
  input: "save/RestoreV2_173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/conv6/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_174/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block6/conv6/kernel/AdamOptimizer"
      }
    }
  }
}
node {
  name: "save/RestoreV2_174/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_174"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_174/tensor_names"
  input: "save/RestoreV2_174/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_174"
  op: "Assign"
  input: "block6/conv6/kernel/AdamOptimizer"
  input: "save/RestoreV2_174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/conv6/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_175/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block6/conv6/kernel/AdamOptimizer_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_175/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_175"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_175/tensor_names"
  input: "save/RestoreV2_175/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_175"
  op: "Assign"
  input: "block6/conv6/kernel/AdamOptimizer_1"
  input: "save/RestoreV2_175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block6/conv6/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_176/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block7/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_176/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_176"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_176/tensor_names"
  input: "save/RestoreV2_176/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_176"
  op: "Assign"
  input: "block7/batch_normalization/beta"
  input: "save/RestoreV2_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_177/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block7/batch_normalization/beta/AdamOptimizer"
      }
    }
  }
}
node {
  name: "save/RestoreV2_177/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_177"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_177/tensor_names"
  input: "save/RestoreV2_177/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_177"
  op: "Assign"
  input: "block7/batch_normalization/beta/AdamOptimizer"
  input: "save/RestoreV2_177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_178/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block7/batch_normalization/beta/AdamOptimizer_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_178/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_178"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_178/tensor_names"
  input: "save/RestoreV2_178/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_178"
  op: "Assign"
  input: "block7/batch_normalization/beta/AdamOptimizer_1"
  input: "save/RestoreV2_178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_179/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block7/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_179/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_179"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_179/tensor_names"
  input: "save/RestoreV2_179/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_179"
  op: "Assign"
  input: "block7/batch_normalization/gamma"
  input: "save/RestoreV2_179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_180/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block7/batch_normalization/gamma/AdamOptimizer"
      }
    }
  }
}
node {
  name: "save/RestoreV2_180/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_180"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_180/tensor_names"
  input: "save/RestoreV2_180/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_180"
  op: "Assign"
  input: "block7/batch_normalization/gamma/AdamOptimizer"
  input: "save/RestoreV2_180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_181/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block7/batch_normalization/gamma/AdamOptimizer_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_181/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_181"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_181/tensor_names"
  input: "save/RestoreV2_181/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_181"
  op: "Assign"
  input: "block7/batch_normalization/gamma/AdamOptimizer_1"
  input: "save/RestoreV2_181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_182/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block7/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_182/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_182"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_182/tensor_names"
  input: "save/RestoreV2_182/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_182"
  op: "Assign"
  input: "block7/batch_normalization/moving_mean"
  input: "save/RestoreV2_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_183/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block7/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_183/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_183"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_183/tensor_names"
  input: "save/RestoreV2_183/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_183"
  op: "Assign"
  input: "block7/batch_normalization/moving_variance"
  input: "save/RestoreV2_183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_184/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block7/conv7/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_184/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_184"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_184/tensor_names"
  input: "save/RestoreV2_184/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_184"
  op: "Assign"
  input: "block7/conv7/kernel"
  input: "save/RestoreV2_184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/conv7/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_185/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block7/conv7/kernel/AdamOptimizer"
      }
    }
  }
}
node {
  name: "save/RestoreV2_185/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_185"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_185/tensor_names"
  input: "save/RestoreV2_185/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_185"
  op: "Assign"
  input: "block7/conv7/kernel/AdamOptimizer"
  input: "save/RestoreV2_185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/conv7/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_186/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block7/conv7/kernel/AdamOptimizer_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_186/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_186"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_186/tensor_names"
  input: "save/RestoreV2_186/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_186"
  op: "Assign"
  input: "block7/conv7/kernel/AdamOptimizer_1"
  input: "save/RestoreV2_186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block7/conv7/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_187/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block8/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_187/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_187"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_187/tensor_names"
  input: "save/RestoreV2_187/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_187"
  op: "Assign"
  input: "block8/batch_normalization/beta"
  input: "save/RestoreV2_187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_188/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block8/batch_normalization/beta/AdamOptimizer"
      }
    }
  }
}
node {
  name: "save/RestoreV2_188/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_188"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_188/tensor_names"
  input: "save/RestoreV2_188/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_188"
  op: "Assign"
  input: "block8/batch_normalization/beta/AdamOptimizer"
  input: "save/RestoreV2_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_189/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block8/batch_normalization/beta/AdamOptimizer_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_189/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_189"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_189/tensor_names"
  input: "save/RestoreV2_189/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_189"
  op: "Assign"
  input: "block8/batch_normalization/beta/AdamOptimizer_1"
  input: "save/RestoreV2_189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_190/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block8/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_190/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_190"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_190/tensor_names"
  input: "save/RestoreV2_190/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_190"
  op: "Assign"
  input: "block8/batch_normalization/gamma"
  input: "save/RestoreV2_190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_191/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block8/batch_normalization/gamma/AdamOptimizer"
      }
    }
  }
}
node {
  name: "save/RestoreV2_191/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_191"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_191/tensor_names"
  input: "save/RestoreV2_191/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_191"
  op: "Assign"
  input: "block8/batch_normalization/gamma/AdamOptimizer"
  input: "save/RestoreV2_191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_192/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block8/batch_normalization/gamma/AdamOptimizer_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_192/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_192"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_192/tensor_names"
  input: "save/RestoreV2_192/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_192"
  op: "Assign"
  input: "block8/batch_normalization/gamma/AdamOptimizer_1"
  input: "save/RestoreV2_192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_193/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block8/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_193/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_193"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_193/tensor_names"
  input: "save/RestoreV2_193/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_193"
  op: "Assign"
  input: "block8/batch_normalization/moving_mean"
  input: "save/RestoreV2_193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_194/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block8/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_194/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_194"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_194/tensor_names"
  input: "save/RestoreV2_194/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_194"
  op: "Assign"
  input: "block8/batch_normalization/moving_variance"
  input: "save/RestoreV2_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_195/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block8/conv8/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_195/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_195"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_195/tensor_names"
  input: "save/RestoreV2_195/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_195"
  op: "Assign"
  input: "block8/conv8/kernel"
  input: "save/RestoreV2_195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/conv8/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_196/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block8/conv8/kernel/AdamOptimizer"
      }
    }
  }
}
node {
  name: "save/RestoreV2_196/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_196"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_196/tensor_names"
  input: "save/RestoreV2_196/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_196"
  op: "Assign"
  input: "block8/conv8/kernel/AdamOptimizer"
  input: "save/RestoreV2_196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/conv8/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_197/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block8/conv8/kernel/AdamOptimizer_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_197/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_197"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_197/tensor_names"
  input: "save/RestoreV2_197/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_197"
  op: "Assign"
  input: "block8/conv8/kernel/AdamOptimizer_1"
  input: "save/RestoreV2_197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block8/conv8/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_198/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block9/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_198/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_198"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_198/tensor_names"
  input: "save/RestoreV2_198/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_198"
  op: "Assign"
  input: "block9/batch_normalization/beta"
  input: "save/RestoreV2_198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_199/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block9/batch_normalization/beta/AdamOptimizer"
      }
    }
  }
}
node {
  name: "save/RestoreV2_199/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_199"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_199/tensor_names"
  input: "save/RestoreV2_199/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_199"
  op: "Assign"
  input: "block9/batch_normalization/beta/AdamOptimizer"
  input: "save/RestoreV2_199"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_200/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block9/batch_normalization/beta/AdamOptimizer_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_200/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_200"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_200/tensor_names"
  input: "save/RestoreV2_200/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_200"
  op: "Assign"
  input: "block9/batch_normalization/beta/AdamOptimizer_1"
  input: "save/RestoreV2_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_201/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block9/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_201/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_201"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_201/tensor_names"
  input: "save/RestoreV2_201/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_201"
  op: "Assign"
  input: "block9/batch_normalization/gamma"
  input: "save/RestoreV2_201"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_202/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block9/batch_normalization/gamma/AdamOptimizer"
      }
    }
  }
}
node {
  name: "save/RestoreV2_202/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_202"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_202/tensor_names"
  input: "save/RestoreV2_202/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_202"
  op: "Assign"
  input: "block9/batch_normalization/gamma/AdamOptimizer"
  input: "save/RestoreV2_202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_203/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block9/batch_normalization/gamma/AdamOptimizer_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_203/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_203"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_203/tensor_names"
  input: "save/RestoreV2_203/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_203"
  op: "Assign"
  input: "block9/batch_normalization/gamma/AdamOptimizer_1"
  input: "save/RestoreV2_203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_204/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block9/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_204/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_204"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_204/tensor_names"
  input: "save/RestoreV2_204/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_204"
  op: "Assign"
  input: "block9/batch_normalization/moving_mean"
  input: "save/RestoreV2_204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_205/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block9/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_205/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_205"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_205/tensor_names"
  input: "save/RestoreV2_205/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_205"
  op: "Assign"
  input: "block9/batch_normalization/moving_variance"
  input: "save/RestoreV2_205"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_206/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block9/conv9/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_206/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_206"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_206/tensor_names"
  input: "save/RestoreV2_206/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_206"
  op: "Assign"
  input: "block9/conv9/kernel"
  input: "save/RestoreV2_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/conv9/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_207/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block9/conv9/kernel/AdamOptimizer"
      }
    }
  }
}
node {
  name: "save/RestoreV2_207/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_207"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_207/tensor_names"
  input: "save/RestoreV2_207/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_207"
  op: "Assign"
  input: "block9/conv9/kernel/AdamOptimizer"
  input: "save/RestoreV2_207"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/conv9/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_208/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "block9/conv9/kernel/AdamOptimizer_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_208/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_208"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_208/tensor_names"
  input: "save/RestoreV2_208/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_208"
  op: "Assign"
  input: "block9/conv9/kernel/AdamOptimizer_1"
  input: "save/RestoreV2_208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block9/conv9/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
  input: "^save/Assign_26"
  input: "^save/Assign_27"
  input: "^save/Assign_28"
  input: "^save/Assign_29"
  input: "^save/Assign_30"
  input: "^save/Assign_31"
  input: "^save/Assign_32"
  input: "^save/Assign_33"
  input: "^save/Assign_34"
  input: "^save/Assign_35"
  input: "^save/Assign_36"
  input: "^save/Assign_37"
  input: "^save/Assign_38"
  input: "^save/Assign_39"
  input: "^save/Assign_40"
  input: "^save/Assign_41"
  input: "^save/Assign_42"
  input: "^save/Assign_43"
  input: "^save/Assign_44"
  input: "^save/Assign_45"
  input: "^save/Assign_46"
  input: "^save/Assign_47"
  input: "^save/Assign_48"
  input: "^save/Assign_49"
  input: "^save/Assign_50"
  input: "^save/Assign_51"
  input: "^save/Assign_52"
  input: "^save/Assign_53"
  input: "^save/Assign_54"
  input: "^save/Assign_55"
  input: "^save/Assign_56"
  input: "^save/Assign_57"
  input: "^save/Assign_58"
  input: "^save/Assign_59"
  input: "^save/Assign_60"
  input: "^save/Assign_61"
  input: "^save/Assign_62"
  input: "^save/Assign_63"
  input: "^save/Assign_64"
  input: "^save/Assign_65"
  input: "^save/Assign_66"
  input: "^save/Assign_67"
  input: "^save/Assign_68"
  input: "^save/Assign_69"
  input: "^save/Assign_70"
  input: "^save/Assign_71"
  input: "^save/Assign_72"
  input: "^save/Assign_73"
  input: "^save/Assign_74"
  input: "^save/Assign_75"
  input: "^save/Assign_76"
  input: "^save/Assign_77"
  input: "^save/Assign_78"
  input: "^save/Assign_79"
  input: "^save/Assign_80"
  input: "^save/Assign_81"
  input: "^save/Assign_82"
  input: "^save/Assign_83"
  input: "^save/Assign_84"
  input: "^save/Assign_85"
  input: "^save/Assign_86"
  input: "^save/Assign_87"
  input: "^save/Assign_88"
  input: "^save/Assign_89"
  input: "^save/Assign_90"
  input: "^save/Assign_91"
  input: "^save/Assign_92"
  input: "^save/Assign_93"
  input: "^save/Assign_94"
  input: "^save/Assign_95"
  input: "^save/Assign_96"
  input: "^save/Assign_97"
  input: "^save/Assign_98"
  input: "^save/Assign_99"
  input: "^save/Assign_100"
  input: "^save/Assign_101"
  input: "^save/Assign_102"
  input: "^save/Assign_103"
  input: "^save/Assign_104"
  input: "^save/Assign_105"
  input: "^save/Assign_106"
  input: "^save/Assign_107"
  input: "^save/Assign_108"
  input: "^save/Assign_109"
  input: "^save/Assign_110"
  input: "^save/Assign_111"
  input: "^save/Assign_112"
  input: "^save/Assign_113"
  input: "^save/Assign_114"
  input: "^save/Assign_115"
  input: "^save/Assign_116"
  input: "^save/Assign_117"
  input: "^save/Assign_118"
  input: "^save/Assign_119"
  input: "^save/Assign_120"
  input: "^save/Assign_121"
  input: "^save/Assign_122"
  input: "^save/Assign_123"
  input: "^save/Assign_124"
  input: "^save/Assign_125"
  input: "^save/Assign_126"
  input: "^save/Assign_127"
  input: "^save/Assign_128"
  input: "^save/Assign_129"
  input: "^save/Assign_130"
  input: "^save/Assign_131"
  input: "^save/Assign_132"
  input: "^save/Assign_133"
  input: "^save/Assign_134"
  input: "^save/Assign_135"
  input: "^save/Assign_136"
  input: "^save/Assign_137"
  input: "^save/Assign_138"
  input: "^save/Assign_139"
  input: "^save/Assign_140"
  input: "^save/Assign_141"
  input: "^save/Assign_142"
  input: "^save/Assign_143"
  input: "^save/Assign_144"
  input: "^save/Assign_145"
  input: "^save/Assign_146"
  input: "^save/Assign_147"
  input: "^save/Assign_148"
  input: "^save/Assign_149"
  input: "^save/Assign_150"
  input: "^save/Assign_151"
  input: "^save/Assign_152"
  input: "^save/Assign_153"
  input: "^save/Assign_154"
  input: "^save/Assign_155"
  input: "^save/Assign_156"
  input: "^save/Assign_157"
  input: "^save/Assign_158"
  input: "^save/Assign_159"
  input: "^save/Assign_160"
  input: "^save/Assign_161"
  input: "^save/Assign_162"
  input: "^save/Assign_163"
  input: "^save/Assign_164"
  input: "^save/Assign_165"
  input: "^save/Assign_166"
  input: "^save/Assign_167"
  input: "^save/Assign_168"
  input: "^save/Assign_169"
  input: "^save/Assign_170"
  input: "^save/Assign_171"
  input: "^save/Assign_172"
  input: "^save/Assign_173"
  input: "^save/Assign_174"
  input: "^save/Assign_175"
  input: "^save/Assign_176"
  input: "^save/Assign_177"
  input: "^save/Assign_178"
  input: "^save/Assign_179"
  input: "^save/Assign_180"
  input: "^save/Assign_181"
  input: "^save/Assign_182"
  input: "^save/Assign_183"
  input: "^save/Assign_184"
  input: "^save/Assign_185"
  input: "^save/Assign_186"
  input: "^save/Assign_187"
  input: "^save/Assign_188"
  input: "^save/Assign_189"
  input: "^save/Assign_190"
  input: "^save/Assign_191"
  input: "^save/Assign_192"
  input: "^save/Assign_193"
  input: "^save/Assign_194"
  input: "^save/Assign_195"
  input: "^save/Assign_196"
  input: "^save/Assign_197"
  input: "^save/Assign_198"
  input: "^save/Assign_199"
  input: "^save/Assign_200"
  input: "^save/Assign_201"
  input: "^save/Assign_202"
  input: "^save/Assign_203"
  input: "^save/Assign_204"
  input: "^save/Assign_205"
  input: "^save/Assign_206"
  input: "^save/Assign_207"
  input: "^save/Assign_208"
}
node {
  name: "loss/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "loss"
  op: "ScalarSummary"
  input: "loss/tags"
  input: "mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lr/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "lr"
      }
    }
  }
}
node {
  name: "lr"
  op: "ScalarSummary"
  input: "lr/tags"
  input: "learning_rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "loss"
  input: "lr"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
library {
  function {
    signature {
      name: "tf_map_func_b8b377c7"
      input_arg {
        name: "arg0"
        type: DT_STRING
      }
      output_arg {
        name: "convert_image"
        type: DT_FLOAT
      }
      description: "A wrapper for Defun that facilitates shape inference."
    }
    node_def {
      name: "ReadFile"
      op: "ReadFile"
      input: "arg0"
    }
    node_def {
      name: "DecodePng"
      op: "DecodePng"
      input: "ReadFile:contents:0"
      attr {
        key: "channels"
        value {
          i: 3
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_UINT8
        }
      }
    }
    node_def {
      name: "convert_image/Cast"
      op: "Cast"
      input: "DecodePng:image:0"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_UINT8
        }
      }
    }
    node_def {
      name: "convert_image/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0039215689
          }
        }
      }
    }
    node_def {
      name: "convert_image"
      op: "Mul"
      input: "convert_image/Cast:y:0"
      input: "convert_image/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    ret {
      key: "convert_image"
      value: "convert_image:z:0"
    }
  }
  function {
    signature {
      name: "tf_map_func_fbb10ce7"
      input_arg {
        name: "arg0"
        type: DT_FLOAT
      }
      output_arg {
        name: "stack_16"
        type: DT_FLOAT
      }
      description: "A wrapper for Defun that facilitates shape inference."
    }
    node_def {
      name: "ExpandDims/dim"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "ExpandDims"
      op: "ExpandDims"
      input: "arg0"
      input: "ExpandDims/dim:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "Shape"
      op: "Shape"
      input: "ExpandDims:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "assert_positive/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "assert_positive/assert_less/Less"
      op: "Less"
      input: "assert_positive/Const:output:0"
      input: "Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "assert_positive/assert_less/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "assert_positive/assert_less/All"
      op: "All"
      input: "assert_positive/assert_less/Less:z:0"
      input: "assert_positive/assert_less/Const:output:0"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "assert_positive/assert_less/Assert/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "all dims of \'image.shape\' must be > 0."
          }
        }
      }
    }
    node_def {
      name: "assert_positive/assert_less/Assert/Assert/data_0"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "all dims of \'image.shape\' must be > 0."
          }
        }
      }
    }
    node_def {
      name: "assert_positive/assert_less/Assert/Assert"
      op: "Assert"
      input: "assert_positive/assert_less/All:output:0"
      input: "assert_positive/assert_less/Assert/Assert/data_0:output:0"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node_def {
      name: "Shape_1"
      op: "Shape"
      input: "ExpandDims:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "unstack"
      op: "Unpack"
      input: "Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
      attr {
        key: "num"
        value {
          i: 4
        }
      }
    }
    node_def {
      name: "GreaterEqual/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 119
          }
        }
      }
    }
    node_def {
      name: "GreaterEqual"
      op: "GreaterEqual"
      input: "unstack:output:2"
      input: "GreaterEqual/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "Assert/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "width must be >= target + offset."
          }
        }
      }
    }
    node_def {
      name: "Assert/Assert/data_0"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "width must be >= target + offset."
          }
        }
      }
    }
    node_def {
      name: "Assert/Assert"
      op: "Assert"
      input: "GreaterEqual:z:0"
      input: "Assert/Assert/data_0:output:0"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node_def {
      name: "GreaterEqual_1/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 152
          }
        }
      }
    }
    node_def {
      name: "GreaterEqual_1"
      op: "GreaterEqual"
      input: "unstack:output:1"
      input: "GreaterEqual_1/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "Assert_1/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "height must be >= target + offset."
          }
        }
      }
    }
    node_def {
      name: "Assert_1/Assert/data_0"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "height must be >= target + offset."
          }
        }
      }
    }
    node_def {
      name: "Assert_1/Assert"
      op: "Assert"
      input: "GreaterEqual_1:z:0"
      input: "Assert_1/Assert/data_0:output:0"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node_def {
      name: "control_dependency"
      op: "Identity"
      input: "ExpandDims:output:0"
      input: "^assert_positive/assert_less/Assert/Assert"
      input: "^Assert/Assert"
      input: "^Assert_1/Assert"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ExpandDims"
          }
        }
      }
    }
    node_def {
      name: "stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\000\000\000\000X\000\000\0007\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\377\377\377\377@\000\000\000@\000\000\000\377\377\377\377"
          }
        }
      }
    }
    node_def {
      name: "Slice"
      op: "Slice"
      input: "control_dependency:output:0"
      input: "stack:output:0"
      input: "stack_1:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "Squeeze"
      op: "Squeeze"
      input: "Slice:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "squeeze_dims"
        value {
          list {
            i: 0
          }
        }
      }
    }
    node_def {
      name: "ExpandDims_1/dim"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "ExpandDims_1"
      op: "ExpandDims"
      input: "arg0"
      input: "ExpandDims_1/dim:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "Shape_2"
      op: "Shape"
      input: "ExpandDims_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "assert_positive_1/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "assert_positive_1/assert_less/Less"
      op: "Less"
      input: "assert_positive_1/Const:output:0"
      input: "Shape_2:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "assert_positive_1/assert_less/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "assert_positive_1/assert_less/All"
      op: "All"
      input: "assert_positive_1/assert_less/Less:z:0"
      input: "assert_positive_1/assert_less/Const:output:0"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "assert_positive_1/assert_less/Assert/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "all dims of \'image.shape\' must be > 0."
          }
        }
      }
    }
    node_def {
      name: "assert_positive_1/assert_less/Assert/Assert/data_0"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "all dims of \'image.shape\' must be > 0."
          }
        }
      }
    }
    node_def {
      name: "assert_positive_1/assert_less/Assert/Assert"
      op: "Assert"
      input: "assert_positive_1/assert_less/All:output:0"
      input: "assert_positive_1/assert_less/Assert/Assert/data_0:output:0"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node_def {
      name: "Shape_3"
      op: "Shape"
      input: "ExpandDims_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "unstack_1"
      op: "Unpack"
      input: "Shape_3:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
      attr {
        key: "num"
        value {
          i: 4
        }
      }
    }
    node_def {
      name: "GreaterEqual_2/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 74
          }
        }
      }
    }
    node_def {
      name: "GreaterEqual_2"
      op: "GreaterEqual"
      input: "unstack_1:output:2"
      input: "GreaterEqual_2/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "Assert_2/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "width must be >= target + offset."
          }
        }
      }
    }
    node_def {
      name: "Assert_2/Assert/data_0"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "width must be >= target + offset."
          }
        }
      }
    }
    node_def {
      name: "Assert_2/Assert"
      op: "Assert"
      input: "GreaterEqual_2:z:0"
      input: "Assert_2/Assert/data_0:output:0"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node_def {
      name: "GreaterEqual_3/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 128
          }
        }
      }
    }
    node_def {
      name: "GreaterEqual_3"
      op: "GreaterEqual"
      input: "unstack_1:output:1"
      input: "GreaterEqual_3/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "Assert_3/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "height must be >= target + offset."
          }
        }
      }
    }
    node_def {
      name: "Assert_3/Assert/data_0"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "height must be >= target + offset."
          }
        }
      }
    }
    node_def {
      name: "Assert_3/Assert"
      op: "Assert"
      input: "GreaterEqual_3:z:0"
      input: "Assert_3/Assert/data_0:output:0"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node_def {
      name: "control_dependency_1"
      op: "Identity"
      input: "ExpandDims_1:output:0"
      input: "^assert_positive_1/assert_less/Assert/Assert"
      input: "^Assert_2/Assert"
      input: "^Assert_3/Assert"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ExpandDims_1"
          }
        }
      }
    }
    node_def {
      name: "stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\000\000\000\000@\000\000\000\n\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stack_3"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\377\377\377\377@\000\000\000@\000\000\000\377\377\377\377"
          }
        }
      }
    }
    node_def {
      name: "Slice_1"
      op: "Slice"
      input: "control_dependency_1:output:0"
      input: "stack_2:output:0"
      input: "stack_3:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "Squeeze_1"
      op: "Squeeze"
      input: "Slice_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "squeeze_dims"
        value {
          list {
            i: 0
          }
        }
      }
    }
    node_def {
      name: "ExpandDims_2/dim"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "ExpandDims_2"
      op: "ExpandDims"
      input: "arg0"
      input: "ExpandDims_2/dim:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "Shape_4"
      op: "Shape"
      input: "ExpandDims_2:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "assert_positive_2/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "assert_positive_2/assert_less/Less"
      op: "Less"
      input: "assert_positive_2/Const:output:0"
      input: "Shape_4:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "assert_positive_2/assert_less/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "assert_positive_2/assert_less/All"
      op: "All"
      input: "assert_positive_2/assert_less/Less:z:0"
      input: "assert_positive_2/assert_less/Const:output:0"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "assert_positive_2/assert_less/Assert/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "all dims of \'image.shape\' must be > 0."
          }
        }
      }
    }
    node_def {
      name: "assert_positive_2/assert_less/Assert/Assert/data_0"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "all dims of \'image.shape\' must be > 0."
          }
        }
      }
    }
    node_def {
      name: "assert_positive_2/assert_less/Assert/Assert"
      op: "Assert"
      input: "assert_positive_2/assert_less/All:output:0"
      input: "assert_positive_2/assert_less/Assert/Assert/data_0:output:0"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node_def {
      name: "Shape_5"
      op: "Shape"
      input: "ExpandDims_2:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "unstack_2"
      op: "Unpack"
      input: "Shape_5:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
      attr {
        key: "num"
        value {
          i: 4
        }
      }
    }
    node_def {
      name: "GreaterEqual_4/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 78
          }
        }
      }
    }
    node_def {
      name: "GreaterEqual_4"
      op: "GreaterEqual"
      input: "unstack_2:output:2"
      input: "GreaterEqual_4/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "Assert_4/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "width must be >= target + offset."
          }
        }
      }
    }
    node_def {
      name: "Assert_4/Assert/data_0"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "width must be >= target + offset."
          }
        }
      }
    }
    node_def {
      name: "Assert_4/Assert"
      op: "Assert"
      input: "GreaterEqual_4:z:0"
      input: "Assert_4/Assert/data_0:output:0"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node_def {
      name: "GreaterEqual_5/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 137
          }
        }
      }
    }
    node_def {
      name: "GreaterEqual_5"
      op: "GreaterEqual"
      input: "unstack_2:output:1"
      input: "GreaterEqual_5/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "Assert_5/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "height must be >= target + offset."
          }
        }
      }
    }
    node_def {
      name: "Assert_5/Assert/data_0"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "height must be >= target + offset."
          }
        }
      }
    }
    node_def {
      name: "Assert_5/Assert"
      op: "Assert"
      input: "GreaterEqual_5:z:0"
      input: "Assert_5/Assert/data_0:output:0"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node_def {
      name: "control_dependency_2"
      op: "Identity"
      input: "ExpandDims_2:output:0"
      input: "^assert_positive_2/assert_less/Assert/Assert"
      input: "^Assert_4/Assert"
      input: "^Assert_5/Assert"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ExpandDims_2"
          }
        }
      }
    }
    node_def {
      name: "stack_4"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\000\000\000\000I\000\000\000\016\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stack_5"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\377\377\377\377@\000\000\000@\000\000\000\377\377\377\377"
          }
        }
      }
    }
    node_def {
      name: "Slice_2"
      op: "Slice"
      input: "control_dependency_2:output:0"
      input: "stack_4:output:0"
      input: "stack_5:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "Squeeze_2"
      op: "Squeeze"
      input: "Slice_2:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "squeeze_dims"
        value {
          list {
            i: 0
          }
        }
      }
    }
    node_def {
      name: "ExpandDims_3/dim"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "ExpandDims_3"
      op: "ExpandDims"
      input: "arg0"
      input: "ExpandDims_3/dim:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "Shape_6"
      op: "Shape"
      input: "ExpandDims_3:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "assert_positive_3/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "assert_positive_3/assert_less/Less"
      op: "Less"
      input: "assert_positive_3/Const:output:0"
      input: "Shape_6:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "assert_positive_3/assert_less/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "assert_positive_3/assert_less/All"
      op: "All"
      input: "assert_positive_3/assert_less/Less:z:0"
      input: "assert_positive_3/assert_less/Const:output:0"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "assert_positive_3/assert_less/Assert/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "all dims of \'image.shape\' must be > 0."
          }
        }
      }
    }
    node_def {
      name: "assert_positive_3/assert_less/Assert/Assert/data_0"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "all dims of \'image.shape\' must be > 0."
          }
        }
      }
    }
    node_def {
      name: "assert_positive_3/assert_less/Assert/Assert"
      op: "Assert"
      input: "assert_positive_3/assert_less/All:output:0"
      input: "assert_positive_3/assert_less/Assert/Assert/data_0:output:0"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node_def {
      name: "Shape_7"
      op: "Shape"
      input: "ExpandDims_3:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "unstack_3"
      op: "Unpack"
      input: "Shape_7:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
      attr {
        key: "num"
        value {
          i: 4
        }
      }
    }
    node_def {
      name: "GreaterEqual_6/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 169
          }
        }
      }
    }
    node_def {
      name: "GreaterEqual_6"
      op: "GreaterEqual"
      input: "unstack_3:output:2"
      input: "GreaterEqual_6/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "Assert_6/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "width must be >= target + offset."
          }
        }
      }
    }
    node_def {
      name: "Assert_6/Assert/data_0"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "width must be >= target + offset."
          }
        }
      }
    }
    node_def {
      name: "Assert_6/Assert"
      op: "Assert"
      input: "GreaterEqual_6:z:0"
      input: "Assert_6/Assert/data_0:output:0"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node_def {
      name: "GreaterEqual_7/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 156
          }
        }
      }
    }
    node_def {
      name: "GreaterEqual_7"
      op: "GreaterEqual"
      input: "unstack_3:output:1"
      input: "GreaterEqual_7/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "Assert_7/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "height must be >= target + offset."
          }
        }
      }
    }
    node_def {
      name: "Assert_7/Assert/data_0"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "height must be >= target + offset."
          }
        }
      }
    }
    node_def {
      name: "Assert_7/Assert"
      op: "Assert"
      input: "GreaterEqual_7:z:0"
      input: "Assert_7/Assert/data_0:output:0"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node_def {
      name: "control_dependency_3"
      op: "Identity"
      input: "ExpandDims_3:output:0"
      input: "^assert_positive_3/assert_less/Assert/Assert"
      input: "^Assert_6/Assert"
      input: "^Assert_7/Assert"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ExpandDims_3"
          }
        }
      }
    }
    node_def {
      name: "stack_6"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\000\000\000\000\\\000\000\000i\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stack_7"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\377\377\377\377@\000\000\000@\000\000\000\377\377\377\377"
          }
        }
      }
    }
    node_def {
      name: "Slice_3"
      op: "Slice"
      input: "control_dependency_3:output:0"
      input: "stack_6:output:0"
      input: "stack_7:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "Squeeze_3"
      op: "Squeeze"
      input: "Slice_3:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "squeeze_dims"
        value {
          list {
            i: 0
          }
        }
      }
    }
    node_def {
      name: "ExpandDims_4/dim"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "ExpandDims_4"
      op: "ExpandDims"
      input: "arg0"
      input: "ExpandDims_4/dim:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "Shape_8"
      op: "Shape"
      input: "ExpandDims_4:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "assert_positive_4/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "assert_positive_4/assert_less/Less"
      op: "Less"
      input: "assert_positive_4/Const:output:0"
      input: "Shape_8:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "assert_positive_4/assert_less/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "assert_positive_4/assert_less/All"
      op: "All"
      input: "assert_positive_4/assert_less/Less:z:0"
      input: "assert_positive_4/assert_less/Const:output:0"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "assert_positive_4/assert_less/Assert/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "all dims of \'image.shape\' must be > 0."
          }
        }
      }
    }
    node_def {
      name: "assert_positive_4/assert_less/Assert/Assert/data_0"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "all dims of \'image.shape\' must be > 0."
          }
        }
      }
    }
    node_def {
      name: "assert_positive_4/assert_less/Assert/Assert"
      op: "Assert"
      input: "assert_positive_4/assert_less/All:output:0"
      input: "assert_positive_4/assert_less/Assert/Assert/data_0:output:0"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node_def {
      name: "Shape_9"
      op: "Shape"
      input: "ExpandDims_4:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "unstack_4"
      op: "Unpack"
      input: "Shape_9:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
      attr {
        key: "num"
        value {
          i: 4
        }
      }
    }
    node_def {
      name: "GreaterEqual_8/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 129
          }
        }
      }
    }
    node_def {
      name: "GreaterEqual_8"
      op: "GreaterEqual"
      input: "unstack_4:output:2"
      input: "GreaterEqual_8/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "Assert_8/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "width must be >= target + offset."
          }
        }
      }
    }
    node_def {
      name: "Assert_8/Assert/data_0"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "width must be >= target + offset."
          }
        }
      }
    }
    node_def {
      name: "Assert_8/Assert"
      op: "Assert"
      input: "GreaterEqual_8:z:0"
      input: "Assert_8/Assert/data_0:output:0"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node_def {
      name: "GreaterEqual_9/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 145
          }
        }
      }
    }
    node_def {
      name: "GreaterEqual_9"
      op: "GreaterEqual"
      input: "unstack_4:output:1"
      input: "GreaterEqual_9/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "Assert_9/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "height must be >= target + offset."
          }
        }
      }
    }
    node_def {
      name: "Assert_9/Assert/data_0"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "height must be >= target + offset."
          }
        }
      }
    }
    node_def {
      name: "Assert_9/Assert"
      op: "Assert"
      input: "GreaterEqual_9:z:0"
      input: "Assert_9/Assert/data_0:output:0"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node_def {
      name: "control_dependency_4"
      op: "Identity"
      input: "ExpandDims_4:output:0"
      input: "^assert_positive_4/assert_less/Assert/Assert"
      input: "^Assert_8/Assert"
      input: "^Assert_9/Assert"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ExpandDims_4"
          }
        }
      }
    }
    node_def {
      name: "stack_8"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\000\000\000\000Q\000\000\000A\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stack_9"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\377\377\377\377@\000\000\000@\000\000\000\377\377\377\377"
          }
        }
      }
    }
    node_def {
      name: "Slice_4"
      op: "Slice"
      input: "control_dependency_4:output:0"
      input: "stack_8:output:0"
      input: "stack_9:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "Squeeze_4"
      op: "Squeeze"
      input: "Slice_4:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "squeeze_dims"
        value {
          list {
            i: 0
          }
        }
      }
    }
    node_def {
      name: "ExpandDims_5/dim"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "ExpandDims_5"
      op: "ExpandDims"
      input: "arg0"
      input: "ExpandDims_5/dim:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "Shape_10"
      op: "Shape"
      input: "ExpandDims_5:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "assert_positive_5/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "assert_positive_5/assert_less/Less"
      op: "Less"
      input: "assert_positive_5/Const:output:0"
      input: "Shape_10:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "assert_positive_5/assert_less/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "assert_positive_5/assert_less/All"
      op: "All"
      input: "assert_positive_5/assert_less/Less:z:0"
      input: "assert_positive_5/assert_less/Const:output:0"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "assert_positive_5/assert_less/Assert/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "all dims of \'image.shape\' must be > 0."
          }
        }
      }
    }
    node_def {
      name: "assert_positive_5/assert_less/Assert/Assert/data_0"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "all dims of \'image.shape\' must be > 0."
          }
        }
      }
    }
    node_def {
      name: "assert_positive_5/assert_less/Assert/Assert"
      op: "Assert"
      input: "assert_positive_5/assert_less/All:output:0"
      input: "assert_positive_5/assert_less/Assert/Assert/data_0:output:0"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node_def {
      name: "Shape_11"
      op: "Shape"
      input: "ExpandDims_5:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "unstack_5"
      op: "Unpack"
      input: "Shape_11:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
      attr {
        key: "num"
        value {
          i: 4
        }
      }
    }
    node_def {
      name: "GreaterEqual_10/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 126
          }
        }
      }
    }
    node_def {
      name: "GreaterEqual_10"
      op: "GreaterEqual"
      input: "unstack_5:output:2"
      input: "GreaterEqual_10/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "Assert_10/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "width must be >= target + offset."
          }
        }
      }
    }
    node_def {
      name: "Assert_10/Assert/data_0"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "width must be >= target + offset."
          }
        }
      }
    }
    node_def {
      name: "Assert_10/Assert"
      op: "Assert"
      input: "GreaterEqual_10:z:0"
      input: "Assert_10/Assert/data_0:output:0"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node_def {
      name: "GreaterEqual_11/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 105
          }
        }
      }
    }
    node_def {
      name: "GreaterEqual_11"
      op: "GreaterEqual"
      input: "unstack_5:output:1"
      input: "GreaterEqual_11/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "Assert_11/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "height must be >= target + offset."
          }
        }
      }
    }
    node_def {
      name: "Assert_11/Assert/data_0"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "height must be >= target + offset."
          }
        }
      }
    }
    node_def {
      name: "Assert_11/Assert"
      op: "Assert"
      input: "GreaterEqual_11:z:0"
      input: "Assert_11/Assert/data_0:output:0"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node_def {
      name: "control_dependency_5"
      op: "Identity"
      input: "ExpandDims_5:output:0"
      input: "^assert_positive_5/assert_less/Assert/Assert"
      input: "^Assert_10/Assert"
      input: "^Assert_11/Assert"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ExpandDims_5"
          }
        }
      }
    }
    node_def {
      name: "stack_10"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\000\000\000\000)\000\000\000>\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stack_11"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\377\377\377\377@\000\000\000@\000\000\000\377\377\377\377"
          }
        }
      }
    }
    node_def {
      name: "Slice_5"
      op: "Slice"
      input: "control_dependency_5:output:0"
      input: "stack_10:output:0"
      input: "stack_11:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "Squeeze_5"
      op: "Squeeze"
      input: "Slice_5:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "squeeze_dims"
        value {
          list {
            i: 0
          }
        }
      }
    }
    node_def {
      name: "ExpandDims_6/dim"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "ExpandDims_6"
      op: "ExpandDims"
      input: "arg0"
      input: "ExpandDims_6/dim:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "Shape_12"
      op: "Shape"
      input: "ExpandDims_6:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "assert_positive_6/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "assert_positive_6/assert_less/Less"
      op: "Less"
      input: "assert_positive_6/Const:output:0"
      input: "Shape_12:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "assert_positive_6/assert_less/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "assert_positive_6/assert_less/All"
      op: "All"
      input: "assert_positive_6/assert_less/Less:z:0"
      input: "assert_positive_6/assert_less/Const:output:0"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "assert_positive_6/assert_less/Assert/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "all dims of \'image.shape\' must be > 0."
          }
        }
      }
    }
    node_def {
      name: "assert_positive_6/assert_less/Assert/Assert/data_0"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "all dims of \'image.shape\' must be > 0."
          }
        }
      }
    }
    node_def {
      name: "assert_positive_6/assert_less/Assert/Assert"
      op: "Assert"
      input: "assert_positive_6/assert_less/All:output:0"
      input: "assert_positive_6/assert_less/Assert/Assert/data_0:output:0"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node_def {
      name: "Shape_13"
      op: "Shape"
      input: "ExpandDims_6:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "unstack_6"
      op: "Unpack"
      input: "Shape_13:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
      attr {
        key: "num"
        value {
          i: 4
        }
      }
    }
    node_def {
      name: "GreaterEqual_12/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 165
          }
        }
      }
    }
    node_def {
      name: "GreaterEqual_12"
      op: "GreaterEqual"
      input: "unstack_6:output:2"
      input: "GreaterEqual_12/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "Assert_12/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "width must be >= target + offset."
          }
        }
      }
    }
    node_def {
      name: "Assert_12/Assert/data_0"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "width must be >= target + offset."
          }
        }
      }
    }
    node_def {
      name: "Assert_12/Assert"
      op: "Assert"
      input: "GreaterEqual_12:z:0"
      input: "Assert_12/Assert/data_0:output:0"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node_def {
      name: "GreaterEqual_13/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 180
          }
        }
      }
    }
    node_def {
      name: "GreaterEqual_13"
      op: "GreaterEqual"
      input: "unstack_6:output:1"
      input: "GreaterEqual_13/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "Assert_13/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "height must be >= target + offset."
          }
        }
      }
    }
    node_def {
      name: "Assert_13/Assert/data_0"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "height must be >= target + offset."
          }
        }
      }
    }
    node_def {
      name: "Assert_13/Assert"
      op: "Assert"
      input: "GreaterEqual_13:z:0"
      input: "Assert_13/Assert/data_0:output:0"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node_def {
      name: "control_dependency_6"
      op: "Identity"
      input: "ExpandDims_6:output:0"
      input: "^assert_positive_6/assert_less/Assert/Assert"
      input: "^Assert_12/Assert"
      input: "^Assert_13/Assert"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ExpandDims_6"
          }
        }
      }
    }
    node_def {
      name: "stack_12"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\000\000\000\000t\000\000\000e\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stack_13"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\377\377\377\377@\000\000\000@\000\000\000\377\377\377\377"
          }
        }
      }
    }
    node_def {
      name: "Slice_6"
      op: "Slice"
      input: "control_dependency_6:output:0"
      input: "stack_12:output:0"
      input: "stack_13:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "Squeeze_6"
      op: "Squeeze"
      input: "Slice_6:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "squeeze_dims"
        value {
          list {
            i: 0
          }
        }
      }
    }
    node_def {
      name: "ExpandDims_7/dim"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "ExpandDims_7"
      op: "ExpandDims"
      input: "arg0"
      input: "ExpandDims_7/dim:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "Shape_14"
      op: "Shape"
      input: "ExpandDims_7:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "assert_positive_7/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "assert_positive_7/assert_less/Less"
      op: "Less"
      input: "assert_positive_7/Const:output:0"
      input: "Shape_14:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "assert_positive_7/assert_less/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "assert_positive_7/assert_less/All"
      op: "All"
      input: "assert_positive_7/assert_less/Less:z:0"
      input: "assert_positive_7/assert_less/Const:output:0"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "assert_positive_7/assert_less/Assert/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "all dims of \'image.shape\' must be > 0."
          }
        }
      }
    }
    node_def {
      name: "assert_positive_7/assert_less/Assert/Assert/data_0"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "all dims of \'image.shape\' must be > 0."
          }
        }
      }
    }
    node_def {
      name: "assert_positive_7/assert_less/Assert/Assert"
      op: "Assert"
      input: "assert_positive_7/assert_less/All:output:0"
      input: "assert_positive_7/assert_less/Assert/Assert/data_0:output:0"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node_def {
      name: "Shape_15"
      op: "Shape"
      input: "ExpandDims_7:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "unstack_7"
      op: "Unpack"
      input: "Shape_15:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
      attr {
        key: "num"
        value {
          i: 4
        }
      }
    }
    node_def {
      name: "GreaterEqual_14/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 84
          }
        }
      }
    }
    node_def {
      name: "GreaterEqual_14"
      op: "GreaterEqual"
      input: "unstack_7:output:2"
      input: "GreaterEqual_14/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "Assert_14/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "width must be >= target + offset."
          }
        }
      }
    }
    node_def {
      name: "Assert_14/Assert/data_0"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "width must be >= target + offset."
          }
        }
      }
    }
    node_def {
      name: "Assert_14/Assert"
      op: "Assert"
      input: "GreaterEqual_14:z:0"
      input: "Assert_14/Assert/data_0:output:0"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node_def {
      name: "GreaterEqual_15/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 123
          }
        }
      }
    }
    node_def {
      name: "GreaterEqual_15"
      op: "GreaterEqual"
      input: "unstack_7:output:1"
      input: "GreaterEqual_15/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "Assert_15/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "height must be >= target + offset."
          }
        }
      }
    }
    node_def {
      name: "Assert_15/Assert/data_0"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "height must be >= target + offset."
          }
        }
      }
    }
    node_def {
      name: "Assert_15/Assert"
      op: "Assert"
      input: "GreaterEqual_15:z:0"
      input: "Assert_15/Assert/data_0:output:0"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node_def {
      name: "control_dependency_7"
      op: "Identity"
      input: "ExpandDims_7:output:0"
      input: "^assert_positive_7/assert_less/Assert/Assert"
      input: "^Assert_14/Assert"
      input: "^Assert_15/Assert"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ExpandDims_7"
          }
        }
      }
    }
    node_def {
      name: "stack_14"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\000\000\000\000;\000\000\000\024\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stack_15"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\377\377\377\377@\000\000\000@\000\000\000\377\377\377\377"
          }
        }
      }
    }
    node_def {
      name: "Slice_7"
      op: "Slice"
      input: "control_dependency_7:output:0"
      input: "stack_14:output:0"
      input: "stack_15:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "Squeeze_7"
      op: "Squeeze"
      input: "Slice_7:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "squeeze_dims"
        value {
          list {
            i: 0
          }
        }
      }
    }
    node_def {
      name: "stack_16"
      op: "Pack"
      input: "Squeeze:output:0"
      input: "Squeeze_1:output:0"
      input: "Squeeze_2:output:0"
      input: "Squeeze_3:output:0"
      input: "Squeeze_4:output:0"
      input: "Squeeze_5:output:0"
      input: "Squeeze_6:output:0"
      input: "Squeeze_7:output:0"
      attr {
        key: "N"
        value {
          i: 8
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    ret {
      key: "stack_16"
      value: "stack_16:output:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_3d17727e"
      output_arg {
        name: "PrefetchDataset"
        type: DT_VARIANT
      }
    }
    node_def {
      name: "TensorSliceDataset/tensors/component_0"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 800
              }
            }
            string_val: "./data/train/noisy/0284.png"
            string_val: "./data/train/original/0284.png"
            string_val: "./data/train/noisy/0161.png"
            string_val: "./data/train/original/0161.png"
            string_val: "./data/train/noisy/0170.png"
            string_val: "./data/train/original/0170.png"
            string_val: "./data/train/noisy/0350.png"
            string_val: "./data/train/original/0350.png"
            string_val: "./data/train/noisy/0252.png"
            string_val: "./data/train/original/0252.png"
            string_val: "./data/train/noisy/0317.png"
            string_val: "./data/train/original/0317.png"
            string_val: "./data/train/noisy/0083.png"
            string_val: "./data/train/original/0083.png"
            string_val: "./data/train/noisy/0215.png"
            string_val: "./data/train/original/0215.png"
            string_val: "./data/train/noisy/0237.png"
            string_val: "./data/train/original/0237.png"
            string_val: "./data/train/noisy/0046.png"
            string_val: "./data/train/original/0046.png"
            string_val: "./data/train/noisy/0281.png"
            string_val: "./data/train/original/0281.png"
            string_val: "./data/train/noisy/0376.png"
            string_val: "./data/train/original/0376.png"
            string_val: "./data/train/noisy/0156.png"
            string_val: "./data/train/original/0156.png"
            string_val: "./data/train/noisy/0374.png"
            string_val: "./data/train/original/0374.png"
            string_val: "./data/train/noisy/0361.png"
            string_val: "./data/train/original/0361.png"
            string_val: "./data/train/noisy/0298.png"
            string_val: "./data/train/original/0298.png"
            string_val: "./data/train/noisy/0224.png"
            string_val: "./data/train/original/0224.png"
            string_val: "./data/train/noisy/0335.png"
            string_val: "./data/train/original/0335.png"
            string_val: "./data/train/noisy/0328.png"
            string_val: "./data/train/original/0328.png"
            string_val: "./data/train/noisy/0032.png"
            string_val: "./data/train/original/0032.png"
            string_val: "./data/train/noisy/0388.png"
            string_val: "./data/train/original/0388.png"
            string_val: "./data/train/noisy/0136.png"
            string_val: "./data/train/original/0136.png"
            string_val: "./data/train/noisy/0233.png"
            string_val: "./data/train/original/0233.png"
            string_val: "./data/train/noisy/0266.png"
            string_val: "./data/train/original/0266.png"
            string_val: "./data/train/noisy/0187.png"
            string_val: "./data/train/original/0187.png"
            string_val: "./data/train/noisy/0259.png"
            string_val: "./data/train/original/0259.png"
            string_val: "./data/train/noisy/0337.png"
            string_val: "./data/train/original/0337.png"
            string_val: "./data/train/noisy/0057.png"
            string_val: "./data/train/original/0057.png"
            string_val: "./data/train/noisy/0290.png"
            string_val: "./data/train/original/0290.png"
            string_val: "./data/train/noisy/0291.png"
            string_val: "./data/train/original/0291.png"
            string_val: "./data/train/noisy/0070.png"
            string_val: "./data/train/original/0070.png"
            string_val: "./data/train/noisy/0078.png"
            string_val: "./data/train/original/0078.png"
            string_val: "./data/train/noisy/0141.png"
            string_val: "./data/train/original/0141.png"
            string_val: "./data/train/noisy/0270.png"
            string_val: "./data/train/original/0270.png"
            string_val: "./data/train/noisy/0041.png"
            string_val: "./data/train/original/0041.png"
            string_val: "./data/train/noisy/0061.png"
            string_val: "./data/train/original/0061.png"
            string_val: "./data/train/noisy/0387.png"
            string_val: "./data/train/original/0387.png"
            string_val: "./data/train/noisy/0212.png"
            string_val: "./data/train/original/0212.png"
            string_val: "./data/train/noisy/0030.png"
            string_val: "./data/train/original/0030.png"
            string_val: "./data/train/noisy/0157.png"
            string_val: "./data/train/original/0157.png"
            string_val: "./data/train/noisy/0223.png"
            string_val: "./data/train/original/0223.png"
            string_val: "./data/train/noisy/0200.png"
            string_val: "./data/train/original/0200.png"
            string_val: "./data/train/noisy/0081.png"
            string_val: "./data/train/original/0081.png"
            string_val: "./data/train/noisy/0370.png"
            string_val: "./data/train/original/0370.png"
            string_val: "./data/train/noisy/0106.png"
            string_val: "./data/train/original/0106.png"
            string_val: "./data/train/noisy/0147.png"
            string_val: "./data/train/original/0147.png"
            string_val: "./data/train/noisy/0035.png"
            string_val: "./data/train/original/0035.png"
            string_val: "./data/train/noisy/0133.png"
            string_val: "./data/train/original/0133.png"
            string_val: "./data/train/noisy/0398.png"
            string_val: "./data/train/original/0398.png"
            string_val: "./data/train/noisy/0118.png"
            string_val: "./data/train/original/0118.png"
            string_val: "./data/train/noisy/0154.png"
            string_val: "./data/train/original/0154.png"
            string_val: "./data/train/noisy/0325.png"
            string_val: "./data/train/original/0325.png"
            string_val: "./data/train/noisy/0088.png"
            string_val: "./data/train/original/0088.png"
            string_val: "./data/train/noisy/0064.png"
            string_val: "./data/train/original/0064.png"
            string_val: "./data/train/noisy/0213.png"
            string_val: "./data/train/original/0213.png"
            string_val: "./data/train/noisy/0385.png"
            string_val: "./data/train/original/0385.png"
            string_val: "./data/train/noisy/0125.png"
            string_val: "./data/train/original/0125.png"
            string_val: "./data/train/noisy/0218.png"
            string_val: "./data/train/original/0218.png"
            string_val: "./data/train/noisy/0393.png"
            string_val: "./data/train/original/0393.png"
            string_val: "./data/train/noisy/0265.png"
            string_val: "./data/train/original/0265.png"
            string_val: "./data/train/noisy/0013.png"
            string_val: "./data/train/original/0013.png"
            string_val: "./data/train/noisy/0168.png"
            string_val: "./data/train/original/0168.png"
            string_val: "./data/train/noisy/0196.png"
            string_val: "./data/train/original/0196.png"
            string_val: "./data/train/noisy/0110.png"
            string_val: "./data/train/original/0110.png"
            string_val: "./data/train/noisy/0305.png"
            string_val: "./data/train/original/0305.png"
            string_val: "./data/train/noisy/0068.png"
            string_val: "./data/train/original/0068.png"
            string_val: "./data/train/noisy/0069.png"
            string_val: "./data/train/original/0069.png"
            string_val: "./data/train/noisy/0322.png"
            string_val: "./data/train/original/0322.png"
            string_val: "./data/train/noisy/0039.png"
            string_val: "./data/train/original/0039.png"
            string_val: "./data/train/noisy/0277.png"
            string_val: "./data/train/original/0277.png"
            string_val: "./data/train/noisy/0176.png"
            string_val: "./data/train/original/0176.png"
            string_val: "./data/train/noisy/0111.png"
            string_val: "./data/train/original/0111.png"
            string_val: "./data/train/noisy/0219.png"
            string_val: "./data/train/original/0219.png"
            string_val: "./data/train/noisy/0208.png"
            string_val: "./data/train/original/0208.png"
            string_val: "./data/train/noisy/0085.png"
            string_val: "./data/train/original/0085.png"
            string_val: "./data/train/noisy/0095.png"
            string_val: "./data/train/original/0095.png"
            string_val: "./data/train/noisy/0054.png"
            string_val: "./data/train/original/0054.png"
            string_val: "./data/train/noisy/0229.png"
            string_val: "./data/train/original/0229.png"
            string_val: "./data/train/noisy/0327.png"
            string_val: "./data/train/original/0327.png"
            string_val: "./data/train/noisy/0073.png"
            string_val: "./data/train/original/0073.png"
            string_val: "./data/train/noisy/0269.png"
            string_val: "./data/train/original/0269.png"
            string_val: "./data/train/noisy/0048.png"
            string_val: "./data/train/original/0048.png"
            string_val: "./data/train/noisy/0097.png"
            string_val: "./data/train/original/0097.png"
            string_val: "./data/train/noisy/0142.png"
            string_val: "./data/train/original/0142.png"
            string_val: "./data/train/noisy/0386.png"
            string_val: "./data/train/original/0386.png"
            string_val: "./data/train/noisy/0204.png"
            string_val: "./data/train/original/0204.png"
            string_val: "./data/train/noisy/0332.png"
            string_val: "./data/train/original/0332.png"
            string_val: "./data/train/noisy/0263.png"
            string_val: "./data/train/original/0263.png"
            string_val: "./data/train/noisy/0311.png"
            string_val: "./data/train/original/0311.png"
            string_val: "./data/train/noisy/0167.png"
            string_val: "./data/train/original/0167.png"
            string_val: "./data/train/noisy/0144.png"
            string_val: "./data/train/original/0144.png"
            string_val: "./data/train/noisy/0023.png"
            string_val: "./data/train/original/0023.png"
            string_val: "./data/train/noisy/0172.png"
            string_val: "./data/train/original/0172.png"
            string_val: "./data/train/noisy/0086.png"
            string_val: "./data/train/original/0086.png"
            string_val: "./data/train/noisy/0272.png"
            string_val: "./data/train/original/0272.png"
            string_val: "./data/train/noisy/0383.png"
            string_val: "./data/train/original/0383.png"
            string_val: "./data/train/noisy/0225.png"
            string_val: "./data/train/original/0225.png"
            string_val: "./data/train/noisy/0394.png"
            string_val: "./data/train/original/0394.png"
            string_val: "./data/train/noisy/0115.png"
            string_val: "./data/train/original/0115.png"
            string_val: "./data/train/noisy/0378.png"
            string_val: "./data/train/original/0378.png"
            string_val: "./data/train/noisy/0267.png"
            string_val: "./data/train/original/0267.png"
            string_val: "./data/train/noisy/0002.png"
            string_val: "./data/train/original/0002.png"
            string_val: "./data/train/noisy/0302.png"
            string_val: "./data/train/original/0302.png"
            string_val: "./data/train/noisy/0163.png"
            string_val: "./data/train/original/0163.png"
            string_val: "./data/train/noisy/0091.png"
            string_val: "./data/train/original/0091.png"
            string_val: "./data/train/noisy/0341.png"
            string_val: "./data/train/original/0341.png"
            string_val: "./data/train/noisy/0055.png"
            string_val: "./data/train/original/0055.png"
            string_val: "./data/train/noisy/0205.png"
            string_val: "./data/train/original/0205.png"
            string_val: "./data/train/noisy/0098.png"
            string_val: "./data/train/original/0098.png"
            string_val: "./data/train/noisy/0320.png"
            string_val: "./data/train/original/0320.png"
            string_val: "./data/train/noisy/0174.png"
            string_val: "./data/train/original/0174.png"
            string_val: "./data/train/noisy/0364.png"
            string_val: "./data/train/original/0364.png"
            string_val: "./data/train/noisy/0166.png"
            string_val: "./data/train/original/0166.png"
            string_val: "./data/train/noisy/0034.png"
            string_val: "./data/train/original/0034.png"
            string_val: "./data/train/noisy/0239.png"
            string_val: "./data/train/original/0239.png"
            string_val: "./data/train/noisy/0094.png"
            string_val: "./data/train/original/0094.png"
            string_val: "./data/train/noisy/0138.png"
            string_val: "./data/train/original/0138.png"
            string_val: "./data/train/noisy/0038.png"
            string_val: "./data/train/original/0038.png"
            string_val: "./data/train/noisy/0340.png"
            string_val: "./data/train/original/0340.png"
            string_val: "./data/train/noisy/0036.png"
            string_val: "./data/train/original/0036.png"
            string_val: "./data/train/noisy/0321.png"
            string_val: "./data/train/original/0321.png"
            string_val: "./data/train/noisy/0314.png"
            string_val: "./data/train/original/0314.png"
            string_val: "./data/train/noisy/0324.png"
            string_val: "./data/train/original/0324.png"
            string_val: "./data/train/noisy/0256.png"
            string_val: "./data/train/original/0256.png"
            string_val: "./data/train/noisy/0207.png"
            string_val: "./data/train/original/0207.png"
            string_val: "./data/train/noisy/0043.png"
            string_val: "./data/train/original/0043.png"
            string_val: "./data/train/noisy/0356.png"
            string_val: "./data/train/original/0356.png"
            string_val: "./data/train/noisy/0234.png"
            string_val: "./data/train/original/0234.png"
            string_val: "./data/train/noisy/0062.png"
            string_val: "./data/train/original/0062.png"
            string_val: "./data/train/noisy/0188.png"
            string_val: "./data/train/original/0188.png"
            string_val: "./data/train/noisy/0279.png"
            string_val: "./data/train/original/0279.png"
            string_val: "./data/train/noisy/0143.png"
            string_val: "./data/train/original/0143.png"
            string_val: "./data/train/noisy/0228.png"
            string_val: "./data/train/original/0228.png"
            string_val: "./data/train/noisy/0009.png"
            string_val: "./data/train/original/0009.png"
            string_val: "./data/train/noisy/0375.png"
            string_val: "./data/train/original/0375.png"
            string_val: "./data/train/noisy/0107.png"
            string_val: "./data/train/original/0107.png"
            string_val: "./data/train/noisy/0120.png"
            string_val: "./data/train/original/0120.png"
            string_val: "./data/train/noisy/0113.png"
            string_val: "./data/train/original/0113.png"
            string_val: "./data/train/noisy/0025.png"
            string_val: "./data/train/original/0025.png"
            string_val: "./data/train/noisy/0351.png"
            string_val: "./data/train/original/0351.png"
            string_val: "./data/train/noisy/0276.png"
            string_val: "./data/train/original/0276.png"
            string_val: "./data/train/noisy/0343.png"
            string_val: "./data/train/original/0343.png"
            string_val: "./data/train/noisy/0000.png"
            string_val: "./data/train/original/0000.png"
            string_val: "./data/train/noisy/0202.png"
            string_val: "./data/train/original/0202.png"
            string_val: "./data/train/noisy/0288.png"
            string_val: "./data/train/original/0288.png"
            string_val: "./data/train/noisy/0300.png"
            string_val: "./data/train/original/0300.png"
            string_val: "./data/train/noisy/0381.png"
            string_val: "./data/train/original/0381.png"
            string_val: "./data/train/noisy/0271.png"
            string_val: "./data/train/original/0271.png"
            string_val: "./data/train/noisy/0021.png"
            string_val: "./data/train/original/0021.png"
            string_val: "./data/train/noisy/0180.png"
            string_val: "./data/train/original/0180.png"
            string_val: "./data/train/noisy/0301.png"
            string_val: "./data/train/original/0301.png"
            string_val: "./data/train/noisy/0151.png"
            string_val: "./data/train/original/0151.png"
            string_val: "./data/train/noisy/0058.png"
            string_val: "./data/train/original/0058.png"
            string_val: "./data/train/noisy/0331.png"
            string_val: "./data/train/original/0331.png"
            string_val: "./data/train/noisy/0338.png"
            string_val: "./data/train/original/0338.png"
            string_val: "./data/train/noisy/0100.png"
            string_val: "./data/train/original/0100.png"
            string_val: "./data/train/noisy/0318.png"
            string_val: "./data/train/original/0318.png"
            string_val: "./data/train/noisy/0360.png"
            string_val: "./data/train/original/0360.png"
            string_val: "./data/train/noisy/0245.png"
            string_val: "./data/train/original/0245.png"
            string_val: "./data/train/noisy/0326.png"
            string_val: "./data/train/original/0326.png"
            string_val: "./data/train/noisy/0333.png"
            string_val: "./data/train/original/0333.png"
            string_val: "./data/train/noisy/0175.png"
            string_val: "./data/train/original/0175.png"
            string_val: "./data/train/noisy/0164.png"
            string_val: "./data/train/original/0164.png"
            string_val: "./data/train/noisy/0082.png"
            string_val: "./data/train/original/0082.png"
            string_val: "./data/train/noisy/0230.png"
            string_val: "./data/train/original/0230.png"
            string_val: "./data/train/noisy/0119.png"
            string_val: "./data/train/original/0119.png"
            string_val: "./data/train/noisy/0093.png"
            string_val: "./data/train/original/0093.png"
            string_val: "./data/train/noisy/0354.png"
            string_val: "./data/train/original/0354.png"
            string_val: "./data/train/noisy/0122.png"
            string_val: "./data/train/original/0122.png"
            string_val: "./data/train/noisy/0339.png"
            string_val: "./data/train/original/0339.png"
            string_val: "./data/train/noisy/0355.png"
            string_val: "./data/train/original/0355.png"
            string_val: "./data/train/noisy/0203.png"
            string_val: "./data/train/original/0203.png"
            string_val: "./data/train/noisy/0077.png"
            string_val: "./data/train/original/0077.png"
            string_val: "./data/train/noisy/0116.png"
            string_val: "./data/train/original/0116.png"
            string_val: "./data/train/noisy/0090.png"
            string_val: "./data/train/original/0090.png"
            string_val: "./data/train/noisy/0248.png"
            string_val: "./data/train/original/0248.png"
            string_val: "./data/train/noisy/0104.png"
            string_val: "./data/train/original/0104.png"
            string_val: "./data/train/noisy/0319.png"
            string_val: "./data/train/original/0319.png"
            string_val: "./data/train/noisy/0274.png"
            string_val: "./data/train/original/0274.png"
            string_val: "./data/train/noisy/0186.png"
            string_val: "./data/train/original/0186.png"
            string_val: "./data/train/noisy/0357.png"
            string_val: "./data/train/original/0357.png"
            string_val: "./data/train/noisy/0365.png"
            string_val: "./data/train/original/0365.png"
            string_val: "./data/train/noisy/0367.png"
            string_val: "./data/train/original/0367.png"
            string_val: "./data/train/noisy/0189.png"
            string_val: "./data/train/original/0189.png"
            string_val: "./data/train/noisy/0304.png"
            string_val: "./data/train/original/0304.png"
            string_val: "./data/train/noisy/0258.png"
            string_val: "./data/train/original/0258.png"
            string_val: "./data/train/noisy/0121.png"
            string_val: "./data/train/original/0121.png"
            string_val: "./data/train/noisy/0372.png"
            string_val: "./data/train/original/0372.png"
            string_val: "./data/train/noisy/0309.png"
            string_val: "./data/train/original/0309.png"
            string_val: "./data/train/noisy/0199.png"
            string_val: "./data/train/original/0199.png"
            string_val: "./data/train/noisy/0014.png"
            string_val: "./data/train/original/0014.png"
            string_val: "./data/train/noisy/0345.png"
            string_val: "./data/train/original/0345.png"
            string_val: "./data/train/noisy/0066.png"
            string_val: "./data/train/original/0066.png"
            string_val: "./data/train/noisy/0040.png"
            string_val: "./data/train/original/0040.png"
            string_val: "./data/train/noisy/0016.png"
            string_val: "./data/train/original/0016.png"
            string_val: "./data/train/noisy/0349.png"
            string_val: "./data/train/original/0349.png"
            string_val: "./data/train/noisy/0029.png"
            string_val: "./data/train/original/0029.png"
            string_val: "./data/train/noisy/0017.png"
            string_val: "./data/train/original/0017.png"
            string_val: "./data/train/noisy/0152.png"
            string_val: "./data/train/original/0152.png"
            string_val: "./data/train/noisy/0377.png"
            string_val: "./data/train/original/0377.png"
            string_val: "./data/train/noisy/0191.png"
            string_val: "./data/train/original/0191.png"
            string_val: "./data/train/noisy/0216.png"
            string_val: "./data/train/original/0216.png"
            string_val: "./data/train/noisy/0101.png"
            string_val: "./data/train/original/0101.png"
            string_val: "./data/train/noisy/0173.png"
            string_val: "./data/train/original/0173.png"
            string_val: "./data/train/noisy/0159.png"
            string_val: "./data/train/original/0159.png"
            string_val: "./data/train/noisy/0222.png"
            string_val: "./data/train/original/0222.png"
            string_val: "./data/train/noisy/0024.png"
            string_val: "./data/train/original/0024.png"
            string_val: "./data/train/noisy/0287.png"
            string_val: "./data/train/original/0287.png"
            string_val: "./data/train/noisy/0210.png"
            string_val: "./data/train/original/0210.png"
            string_val: "./data/train/noisy/0185.png"
            string_val: "./data/train/original/0185.png"
            string_val: "./data/train/noisy/0369.png"
            string_val: "./data/train/original/0369.png"
            string_val: "./data/train/noisy/0194.png"
            string_val: "./data/train/original/0194.png"
            string_val: "./data/train/noisy/0099.png"
            string_val: "./data/train/original/0099.png"
            string_val: "./data/train/noisy/0227.png"
            string_val: "./data/train/original/0227.png"
            string_val: "./data/train/noisy/0139.png"
            string_val: "./data/train/original/0139.png"
            string_val: "./data/train/noisy/0006.png"
            string_val: "./data/train/original/0006.png"
            string_val: "./data/train/noisy/0389.png"
            string_val: "./data/train/original/0389.png"
            string_val: "./data/train/noisy/0050.png"
            string_val: "./data/train/original/0050.png"
            string_val: "./data/train/noisy/0221.png"
            string_val: "./data/train/original/0221.png"
            string_val: "./data/train/noisy/0012.png"
            string_val: "./data/train/original/0012.png"
            string_val: "./data/train/noisy/0026.png"
            string_val: "./data/train/original/0026.png"
            string_val: "./data/train/noisy/0092.png"
            string_val: "./data/train/original/0092.png"
            string_val: "./data/train/noisy/0022.png"
            string_val: "./data/train/original/0022.png"
            string_val: "./data/train/noisy/0129.png"
            string_val: "./data/train/original/0129.png"
            string_val: "./data/train/noisy/0359.png"
            string_val: "./data/train/original/0359.png"
            string_val: "./data/train/noisy/0075.png"
            string_val: "./data/train/original/0075.png"
            string_val: "./data/train/noisy/0181.png"
            string_val: "./data/train/original/0181.png"
            string_val: "./data/train/noisy/0260.png"
            string_val: "./data/train/original/0260.png"
            string_val: "./data/train/noisy/0313.png"
            string_val: "./data/train/original/0313.png"
            string_val: "./data/train/noisy/0134.png"
            string_val: "./data/train/original/0134.png"
            string_val: "./data/train/noisy/0132.png"
            string_val: "./data/train/original/0132.png"
            string_val: "./data/train/noisy/0049.png"
            string_val: "./data/train/original/0049.png"
            string_val: "./data/train/noisy/0273.png"
            string_val: "./data/train/original/0273.png"
            string_val: "./data/train/noisy/0353.png"
            string_val: "./data/train/original/0353.png"
            string_val: "./data/train/noisy/0059.png"
            string_val: "./data/train/original/0059.png"
            string_val: "./data/train/noisy/0004.png"
            string_val: "./data/train/original/0004.png"
            string_val: "./data/train/noisy/0220.png"
            string_val: "./data/train/original/0220.png"
            string_val: "./data/train/noisy/0366.png"
            string_val: "./data/train/original/0366.png"
            string_val: "./data/train/noisy/0160.png"
            string_val: "./data/train/original/0160.png"
            string_val: "./data/train/noisy/0368.png"
            string_val: "./data/train/original/0368.png"
            string_val: "./data/train/noisy/0124.png"
            string_val: "./data/train/original/0124.png"
            string_val: "./data/train/noisy/0214.png"
            string_val: "./data/train/original/0214.png"
            string_val: "./data/train/noisy/0015.png"
            string_val: "./data/train/original/0015.png"
            string_val: "./data/train/noisy/0235.png"
            string_val: "./data/train/original/0235.png"
            string_val: "./data/train/noisy/0280.png"
            string_val: "./data/train/original/0280.png"
            string_val: "./data/train/noisy/0282.png"
            string_val: "./data/train/original/0282.png"
            string_val: "./data/train/noisy/0027.png"
            string_val: "./data/train/original/0027.png"
            string_val: "./data/train/noisy/0391.png"
            string_val: "./data/train/original/0391.png"
            string_val: "./data/train/noisy/0373.png"
            string_val: "./data/train/original/0373.png"
            string_val: "./data/train/noisy/0042.png"
            string_val: "./data/train/original/0042.png"
            string_val: "./data/train/noisy/0232.png"
            string_val: "./data/train/original/0232.png"
            string_val: "./data/train/noisy/0297.png"
            string_val: "./data/train/original/0297.png"
            string_val: "./data/train/noisy/0150.png"
            string_val: "./data/train/original/0150.png"
            string_val: "./data/train/noisy/0312.png"
            string_val: "./data/train/original/0312.png"
            string_val: "./data/train/noisy/0072.png"
            string_val: "./data/train/original/0072.png"
            string_val: "./data/train/noisy/0243.png"
            string_val: "./data/train/original/0243.png"
            string_val: "./data/train/noisy/0045.png"
            string_val: "./data/train/original/0045.png"
            string_val: "./data/train/noisy/0262.png"
            string_val: "./data/train/original/0262.png"
            string_val: "./data/train/noisy/0336.png"
            string_val: "./data/train/original/0336.png"
            string_val: "./data/train/noisy/0193.png"
            string_val: "./data/train/original/0193.png"
            string_val: "./data/train/noisy/0347.png"
            string_val: "./data/train/original/0347.png"
            string_val: "./data/train/noisy/0231.png"
            string_val: "./data/train/original/0231.png"
            string_val: "./data/train/noisy/0127.png"
            string_val: "./data/train/original/0127.png"
            string_val: "./data/train/noisy/0251.png"
            string_val: "./data/train/original/0251.png"
            string_val: "./data/train/noisy/0182.png"
            string_val: "./data/train/original/0182.png"
            string_val: "./data/train/noisy/0137.png"
            string_val: "./data/train/original/0137.png"
            string_val: "./data/train/noisy/0001.png"
            string_val: "./data/train/original/0001.png"
            string_val: "./data/train/noisy/0053.png"
            string_val: "./data/train/original/0053.png"
            string_val: "./data/train/noisy/0084.png"
            string_val: "./data/train/original/0084.png"
            string_val: "./data/train/noisy/0244.png"
            string_val: "./data/train/original/0244.png"
            string_val: "./data/train/noisy/0010.png"
            string_val: "./data/train/original/0010.png"
            string_val: "./data/train/noisy/0308.png"
            string_val: "./data/train/original/0308.png"
            string_val: "./data/train/noisy/0257.png"
            string_val: "./data/train/original/0257.png"
            string_val: "./data/train/noisy/0003.png"
            string_val: "./data/train/original/0003.png"
            string_val: "./data/train/noisy/0044.png"
            string_val: "./data/train/original/0044.png"
            string_val: "./data/train/noisy/0310.png"
            string_val: "./data/train/original/0310.png"
            string_val: "./data/train/noisy/0278.png"
            string_val: "./data/train/original/0278.png"
            string_val: "./data/train/noisy/0379.png"
            string_val: "./data/train/original/0379.png"
            string_val: "./data/train/noisy/0296.png"
            string_val: "./data/train/original/0296.png"
            string_val: "./data/train/noisy/0344.png"
            string_val: "./data/train/original/0344.png"
            string_val: "./data/train/noisy/0096.png"
            string_val: "./data/train/original/0096.png"
            string_val: "./data/train/noisy/0020.png"
            string_val: "./data/train/original/0020.png"
            string_val: "./data/train/noisy/0285.png"
            string_val: "./data/train/original/0285.png"
            string_val: "./data/train/noisy/0117.png"
            string_val: "./data/train/original/0117.png"
            string_val: "./data/train/noisy/0362.png"
            string_val: "./data/train/original/0362.png"
            string_val: "./data/train/noisy/0123.png"
            string_val: "./data/train/original/0123.png"
            string_val: "./data/train/noisy/0033.png"
            string_val: "./data/train/original/0033.png"
            string_val: "./data/train/noisy/0169.png"
            string_val: "./data/train/original/0169.png"
            string_val: "./data/train/noisy/0307.png"
            string_val: "./data/train/original/0307.png"
            string_val: "./data/train/noisy/0211.png"
            string_val: "./data/train/original/0211.png"
            string_val: "./data/train/noisy/0065.png"
            string_val: "./data/train/original/0065.png"
            string_val: "./data/train/noisy/0052.png"
            string_val: "./data/train/original/0052.png"
            string_val: "./data/train/noisy/0171.png"
            string_val: "./data/train/original/0171.png"
            string_val: "./data/train/noisy/0217.png"
            string_val: "./data/train/original/0217.png"
            string_val: "./data/train/noisy/0177.png"
            string_val: "./data/train/original/0177.png"
            string_val: "./data/train/noisy/0334.png"
            string_val: "./data/train/original/0334.png"
            string_val: "./data/train/noisy/0130.png"
            string_val: "./data/train/original/0130.png"
            string_val: "./data/train/noisy/0392.png"
            string_val: "./data/train/original/0392.png"
            string_val: "./data/train/noisy/0261.png"
            string_val: "./data/train/original/0261.png"
            string_val: "./data/train/noisy/0114.png"
            string_val: "./data/train/original/0114.png"
            string_val: "./data/train/noisy/0397.png"
            string_val: "./data/train/original/0397.png"
            string_val: "./data/train/noisy/0399.png"
            string_val: "./data/train/original/0399.png"
            string_val: "./data/train/noisy/0056.png"
            string_val: "./data/train/original/0056.png"
            string_val: "./data/train/noisy/0254.png"
            string_val: "./data/train/original/0254.png"
            string_val: "./data/train/noisy/0179.png"
            string_val: "./data/train/original/0179.png"
            string_val: "./data/train/noisy/0102.png"
            string_val: "./data/train/original/0102.png"
            string_val: "./data/train/noisy/0007.png"
            string_val: "./data/train/original/0007.png"
            string_val: "./data/train/noisy/0109.png"
            string_val: "./data/train/original/0109.png"
            string_val: "./data/train/noisy/0112.png"
            string_val: "./data/train/original/0112.png"
            string_val: "./data/train/noisy/0209.png"
            string_val: "./data/train/original/0209.png"
            string_val: "./data/train/noisy/0108.png"
            string_val: "./data/train/original/0108.png"
            string_val: "./data/train/noisy/0241.png"
            string_val: "./data/train/original/0241.png"
            string_val: "./data/train/noisy/0089.png"
            string_val: "./data/train/original/0089.png"
            string_val: "./data/train/noisy/0047.png"
            string_val: "./data/train/original/0047.png"
            string_val: "./data/train/noisy/0255.png"
            string_val: "./data/train/original/0255.png"
            string_val: "./data/train/noisy/0031.png"
            string_val: "./data/train/original/0031.png"
            string_val: "./data/train/noisy/0158.png"
            string_val: "./data/train/original/0158.png"
            string_val: "./data/train/noisy/0294.png"
            string_val: "./data/train/original/0294.png"
            string_val: "./data/train/noisy/0063.png"
            string_val: "./data/train/original/0063.png"
            string_val: "./data/train/noisy/0195.png"
            string_val: "./data/train/original/0195.png"
            string_val: "./data/train/noisy/0352.png"
            string_val: "./data/train/original/0352.png"
            string_val: "./data/train/noisy/0067.png"
            string_val: "./data/train/original/0067.png"
            string_val: "./data/train/noisy/0226.png"
            string_val: "./data/train/original/0226.png"
            string_val: "./data/train/noisy/0268.png"
            string_val: "./data/train/original/0268.png"
            string_val: "./data/train/noisy/0019.png"
            string_val: "./data/train/original/0019.png"
            string_val: "./data/train/noisy/0087.png"
            string_val: "./data/train/original/0087.png"
            string_val: "./data/train/noisy/0315.png"
            string_val: "./data/train/original/0315.png"
            string_val: "./data/train/noisy/0293.png"
            string_val: "./data/train/original/0293.png"
            string_val: "./data/train/noisy/0162.png"
            string_val: "./data/train/original/0162.png"
            string_val: "./data/train/noisy/0135.png"
            string_val: "./data/train/original/0135.png"
            string_val: "./data/train/noisy/0346.png"
            string_val: "./data/train/original/0346.png"
            string_val: "./data/train/noisy/0105.png"
            string_val: "./data/train/original/0105.png"
            string_val: "./data/train/noisy/0206.png"
            string_val: "./data/train/original/0206.png"
            string_val: "./data/train/noisy/0192.png"
            string_val: "./data/train/original/0192.png"
            string_val: "./data/train/noisy/0249.png"
            string_val: "./data/train/original/0249.png"
            string_val: "./data/train/noisy/0330.png"
            string_val: "./data/train/original/0330.png"
            string_val: "./data/train/noisy/0264.png"
            string_val: "./data/train/original/0264.png"
            string_val: "./data/train/noisy/0342.png"
            string_val: "./data/train/original/0342.png"
            string_val: "./data/train/noisy/0153.png"
            string_val: "./data/train/original/0153.png"
            string_val: "./data/train/noisy/0011.png"
            string_val: "./data/train/original/0011.png"
            string_val: "./data/train/noisy/0005.png"
            string_val: "./data/train/original/0005.png"
            string_val: "./data/train/noisy/0236.png"
            string_val: "./data/train/original/0236.png"
            string_val: "./data/train/noisy/0382.png"
            string_val: "./data/train/original/0382.png"
            string_val: "./data/train/noisy/0246.png"
            string_val: "./data/train/original/0246.png"
            string_val: "./data/train/noisy/0348.png"
            string_val: "./data/train/original/0348.png"
            string_val: "./data/train/noisy/0145.png"
            string_val: "./data/train/original/0145.png"
            string_val: "./data/train/noisy/0155.png"
            string_val: "./data/train/original/0155.png"
            string_val: "./data/train/noisy/0190.png"
            string_val: "./data/train/original/0190.png"
            string_val: "./data/train/noisy/0250.png"
            string_val: "./data/train/original/0250.png"
            string_val: "./data/train/noisy/0292.png"
            string_val: "./data/train/original/0292.png"
            string_val: "./data/train/noisy/0028.png"
            string_val: "./data/train/original/0028.png"
            string_val: "./data/train/noisy/0201.png"
            string_val: "./data/train/original/0201.png"
            string_val: "./data/train/noisy/0140.png"
            string_val: "./data/train/original/0140.png"
            string_val: "./data/train/noisy/0329.png"
            string_val: "./data/train/original/0329.png"
            string_val: "./data/train/noisy/0198.png"
            string_val: "./data/train/original/0198.png"
            string_val: "./data/train/noisy/0303.png"
            string_val: "./data/train/original/0303.png"
            string_val: "./data/train/noisy/0184.png"
            string_val: "./data/train/original/0184.png"
            string_val: "./data/train/noisy/0103.png"
            string_val: "./data/train/original/0103.png"
            string_val: "./data/train/noisy/0008.png"
            string_val: "./data/train/original/0008.png"
            string_val: "./data/train/noisy/0076.png"
            string_val: "./data/train/original/0076.png"
            string_val: "./data/train/noisy/0306.png"
            string_val: "./data/train/original/0306.png"
            string_val: "./data/train/noisy/0146.png"
            string_val: "./data/train/original/0146.png"
            string_val: "./data/train/noisy/0396.png"
            string_val: "./data/train/original/0396.png"
            string_val: "./data/train/noisy/0178.png"
            string_val: "./data/train/original/0178.png"
            string_val: "./data/train/noisy/0148.png"
            string_val: "./data/train/original/0148.png"
            string_val: "./data/train/noisy/0390.png"
            string_val: "./data/train/original/0390.png"
            string_val: "./data/train/noisy/0128.png"
            string_val: "./data/train/original/0128.png"
            string_val: "./data/train/noisy/0253.png"
            string_val: "./data/train/original/0253.png"
            string_val: "./data/train/noisy/0165.png"
            string_val: "./data/train/original/0165.png"
            string_val: "./data/train/noisy/0079.png"
            string_val: "./data/train/original/0079.png"
            string_val: "./data/train/noisy/0299.png"
            string_val: "./data/train/original/0299.png"
            string_val: "./data/train/noisy/0131.png"
            string_val: "./data/train/original/0131.png"
            string_val: "./data/train/noisy/0247.png"
            string_val: "./data/train/original/0247.png"
            string_val: "./data/train/noisy/0071.png"
            string_val: "./data/train/original/0071.png"
            string_val: "./data/train/noisy/0197.png"
            string_val: "./data/train/original/0197.png"
            string_val: "./data/train/noisy/0395.png"
            string_val: "./data/train/original/0395.png"
            string_val: "./data/train/noisy/0380.png"
            string_val: "./data/train/original/0380.png"
            string_val: "./data/train/noisy/0126.png"
            string_val: "./data/train/original/0126.png"
            string_val: "./data/train/noisy/0286.png"
            string_val: "./data/train/original/0286.png"
            string_val: "./data/train/noisy/0238.png"
            string_val: "./data/train/original/0238.png"
            string_val: "./data/train/noisy/0080.png"
            string_val: "./data/train/original/0080.png"
            string_val: "./data/train/noisy/0242.png"
            string_val: "./data/train/original/0242.png"
            string_val: "./data/train/noisy/0183.png"
            string_val: "./data/train/original/0183.png"
            string_val: "./data/train/noisy/0363.png"
            string_val: "./data/train/original/0363.png"
            string_val: "./data/train/noisy/0037.png"
            string_val: "./data/train/original/0037.png"
            string_val: "./data/train/noisy/0289.png"
            string_val: "./data/train/original/0289.png"
            string_val: "./data/train/noisy/0018.png"
            string_val: "./data/train/original/0018.png"
            string_val: "./data/train/noisy/0060.png"
            string_val: "./data/train/original/0060.png"
            string_val: "./data/train/noisy/0371.png"
            string_val: "./data/train/original/0371.png"
            string_val: "./data/train/noisy/0149.png"
            string_val: "./data/train/original/0149.png"
            string_val: "./data/train/noisy/0323.png"
            string_val: "./data/train/original/0323.png"
            string_val: "./data/train/noisy/0275.png"
            string_val: "./data/train/original/0275.png"
            string_val: "./data/train/noisy/0074.png"
            string_val: "./data/train/original/0074.png"
            string_val: "./data/train/noisy/0240.png"
            string_val: "./data/train/original/0240.png"
            string_val: "./data/train/noisy/0316.png"
            string_val: "./data/train/original/0316.png"
            string_val: "./data/train/noisy/0295.png"
            string_val: "./data/train/original/0295.png"
            string_val: "./data/train/noisy/0384.png"
            string_val: "./data/train/original/0384.png"
            string_val: "./data/train/noisy/0358.png"
            string_val: "./data/train/original/0358.png"
            string_val: "./data/train/noisy/0283.png"
            string_val: "./data/train/original/0283.png"
            string_val: "./data/train/noisy/0051.png"
            string_val: "./data/train/original/0051.png"
          }
        }
      }
    }
    node_def {
      name: "TensorSliceDataset"
      op: "TensorSliceDataset"
      input: "TensorSliceDataset/tensors/component_0:output:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "ParallelMapDataset/num_parallel_calls"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "ParallelMapDataset"
      op: "ParallelMapDataset"
      input: "TensorSliceDataset:handle:0"
      input: "ParallelMapDataset/num_parallel_calls:output:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_b8b377c7"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node_def {
      name: "ParallelMapDataset_1/num_parallel_calls_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "ParallelMapDataset_1"
      op: "ParallelMapDataset"
      input: "ParallelMapDataset:handle:0"
      input: "ParallelMapDataset_1/num_parallel_calls_1:output:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_fbb10ce7"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 64
              }
              dim {
                size: 64
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "ParallelMapDataset_1:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 8
              }
              dim {
                size: 64
              }
              dim {
                size: 64
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node_def {
      name: "PrefetchDataset/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 32
          }
        }
      }
    }
    node_def {
      name: "PrefetchDataset"
      op: "PrefetchDataset"
      input: "BatchDataset:handle:0"
      input: "PrefetchDataset/Const:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 8
              }
              dim {
                size: 64
              }
              dim {
                size: 64
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    ret {
      key: "PrefetchDataset"
      value: "PrefetchDataset:handle:0"
    }
  }
}
versions {
  producer: 24
  min_consumer: 12
}
